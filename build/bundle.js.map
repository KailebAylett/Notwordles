{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../node_modules/seedrandom/lib/alea.js","../../node_modules/seedrandom/lib/xor128.js","../../node_modules/seedrandom/lib/xorwow.js","../../node_modules/seedrandom/lib/xorshift7.js","../../node_modules/seedrandom/lib/xor4096.js","../../node_modules/seedrandom/lib/tychei.js","../../node_modules/seedrandom/seedrandom.js","../../node_modules/seedrandom/index.js","../../src/enums.ts","../../src/words_6.ts","../../src/utils.ts","../../node_modules/svelte/easing/index.mjs","../../node_modules/svelte/transition/index.mjs","../../node_modules/svelte/store/index.mjs","../../src/stores.ts","../../src/components/GameIcon.svelte","../../src/components/Header.svelte","../../src/components/board/Tile.svelte","../../src/components/board/Row.svelte","../../src/components/widgets/Definition.svelte","../../src/components/widgets/ContextMenu.svelte","../../src/components/board/Board.svelte","../../src/components/keyboard/Key.svelte","../../src/components/keyboard/Keyboard.svelte","../../src/components/Modal.svelte","../../src/components/settings/Switch.svelte","../../src/components/settings/DropDown.svelte","../../src/components/settings/Setting.svelte","../../src/components/settings/Settings.svelte","../../src/components/widgets/Seperator.svelte","../../src/components/widgets/Share.svelte","../../src/components/widgets/Tutorial.svelte","../../src/components/widgets/Timer.svelte","../../src/components/widgets/Toaster.svelte","../../src/components/widgets/Tips.svelte","../../src/components/widgets/ShareGame.svelte","../../src/components/widgets/stats/Stat.svelte","../../src/components/widgets/stats/Statistics.svelte","../../src/components/widgets/stats/Distribution.svelte","../../src/components/Game.svelte","../../src/App.svelte","../../src/main.ts"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nlet src_url_equal_anchor;\nfunction src_url_equal(element_src, url) {\n    if (!src_url_equal_anchor) {\n        src_url_equal_anchor = document.createElement('a');\n    }\n    src_url_equal_anchor.href = url;\n    return element_src === src_url_equal_anchor.href;\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction is_empty(obj) {\n    return Object.keys(obj).length === 0;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn) {\n    if (slot_changes) {\n        const slot_context = get_slot_context(slot_definition, ctx, $$scope, get_slot_context_fn);\n        slot.p(slot_context, slot_changes);\n    }\n}\nfunction update_slot(slot, slot_definition, ctx, $$scope, dirty, get_slot_changes_fn, get_slot_context_fn) {\n    const slot_changes = get_slot_changes(slot_definition, $$scope, dirty, get_slot_changes_fn);\n    update_slot_base(slot, slot_definition, ctx, $$scope, slot_changes, get_slot_context_fn);\n}\nfunction get_all_dirty_from_scope($$scope) {\n    if ($$scope.ctx.length > 32) {\n        const dirty = [];\n        const length = $$scope.ctx.length / 32;\n        for (let i = 0; i < length; i++) {\n            dirty[i] = -1;\n        }\n        return dirty;\n    }\n    return -1;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction compute_slots(slots) {\n    const result = {};\n    for (const key in slots) {\n        result[key] = true;\n    }\n    return result;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\n// Track which nodes are claimed during hydration. Unclaimed nodes can then be removed from the DOM\n// at the end of hydration without touching the remaining nodes.\nlet is_hydrating = false;\nfunction start_hydrating() {\n    is_hydrating = true;\n}\nfunction end_hydrating() {\n    is_hydrating = false;\n}\nfunction upper_bound(low, high, key, value) {\n    // Return first index of value larger than input value in the range [low, high)\n    while (low < high) {\n        const mid = low + ((high - low) >> 1);\n        if (key(mid) <= value) {\n            low = mid + 1;\n        }\n        else {\n            high = mid;\n        }\n    }\n    return low;\n}\nfunction init_hydrate(target) {\n    if (target.hydrate_init)\n        return;\n    target.hydrate_init = true;\n    // We know that all children have claim_order values since the unclaimed have been detached if target is not <head>\n    let children = target.childNodes;\n    // If target is <head>, there may be children without claim_order\n    if (target.nodeName === 'HEAD') {\n        const myChildren = [];\n        for (let i = 0; i < children.length; i++) {\n            const node = children[i];\n            if (node.claim_order !== undefined) {\n                myChildren.push(node);\n            }\n        }\n        children = myChildren;\n    }\n    /*\n    * Reorder claimed children optimally.\n    * We can reorder claimed children optimally by finding the longest subsequence of\n    * nodes that are already claimed in order and only moving the rest. The longest\n    * subsequence subsequence of nodes that are claimed in order can be found by\n    * computing the longest increasing subsequence of .claim_order values.\n    *\n    * This algorithm is optimal in generating the least amount of reorder operations\n    * possible.\n    *\n    * Proof:\n    * We know that, given a set of reordering operations, the nodes that do not move\n    * always form an increasing subsequence, since they do not move among each other\n    * meaning that they must be already ordered among each other. Thus, the maximal\n    * set of nodes that do not move form a longest increasing subsequence.\n    */\n    // Compute longest increasing subsequence\n    // m: subsequence length j => index k of smallest value that ends an increasing subsequence of length j\n    const m = new Int32Array(children.length + 1);\n    // Predecessor indices + 1\n    const p = new Int32Array(children.length);\n    m[0] = -1;\n    let longest = 0;\n    for (let i = 0; i < children.length; i++) {\n        const current = children[i].claim_order;\n        // Find the largest subsequence length such that it ends in a value less than our current value\n        // upper_bound returns first greater value, so we subtract one\n        // with fast path for when we are on the current longest subsequence\n        const seqLen = ((longest > 0 && children[m[longest]].claim_order <= current) ? longest + 1 : upper_bound(1, longest, idx => children[m[idx]].claim_order, current)) - 1;\n        p[i] = m[seqLen] + 1;\n        const newLen = seqLen + 1;\n        // We can guarantee that current is the smallest value. Otherwise, we would have generated a longer sequence.\n        m[newLen] = i;\n        longest = Math.max(newLen, longest);\n    }\n    // The longest increasing subsequence of nodes (initially reversed)\n    const lis = [];\n    // The rest of the nodes, nodes that will be moved\n    const toMove = [];\n    let last = children.length - 1;\n    for (let cur = m[longest] + 1; cur != 0; cur = p[cur - 1]) {\n        lis.push(children[cur - 1]);\n        for (; last >= cur; last--) {\n            toMove.push(children[last]);\n        }\n        last--;\n    }\n    for (; last >= 0; last--) {\n        toMove.push(children[last]);\n    }\n    lis.reverse();\n    // We sort the nodes being moved to guarantee that their insertion order matches the claim order\n    toMove.sort((a, b) => a.claim_order - b.claim_order);\n    // Finally, we move the nodes\n    for (let i = 0, j = 0; i < toMove.length; i++) {\n        while (j < lis.length && toMove[i].claim_order >= lis[j].claim_order) {\n            j++;\n        }\n        const anchor = j < lis.length ? lis[j] : null;\n        target.insertBefore(toMove[i], anchor);\n    }\n}\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction append_styles(target, style_sheet_id, styles) {\n    const append_styles_to = get_root_for_style(target);\n    if (!append_styles_to.getElementById(style_sheet_id)) {\n        const style = element('style');\n        style.id = style_sheet_id;\n        style.textContent = styles;\n        append_stylesheet(append_styles_to, style);\n    }\n}\nfunction get_root_for_style(node) {\n    if (!node)\n        return document;\n    const root = node.getRootNode ? node.getRootNode() : node.ownerDocument;\n    if (root && root.host) {\n        return root;\n    }\n    return node.ownerDocument;\n}\nfunction append_empty_stylesheet(node) {\n    const style_element = element('style');\n    append_stylesheet(get_root_for_style(node), style_element);\n    return style_element.sheet;\n}\nfunction append_stylesheet(node, style) {\n    append(node.head || node, style);\n}\nfunction append_hydration(target, node) {\n    if (is_hydrating) {\n        init_hydrate(target);\n        if ((target.actual_end_child === undefined) || ((target.actual_end_child !== null) && (target.actual_end_child.parentElement !== target))) {\n            target.actual_end_child = target.firstChild;\n        }\n        // Skip nodes of undefined ordering\n        while ((target.actual_end_child !== null) && (target.actual_end_child.claim_order === undefined)) {\n            target.actual_end_child = target.actual_end_child.nextSibling;\n        }\n        if (node !== target.actual_end_child) {\n            // We only insert if the ordering of this node should be modified or the parent node is not target\n            if (node.claim_order !== undefined || node.parentNode !== target) {\n                target.insertBefore(node, target.actual_end_child);\n            }\n        }\n        else {\n            target.actual_end_child = node.nextSibling;\n        }\n    }\n    else if (node.parentNode !== target || node.nextSibling !== null) {\n        target.appendChild(node);\n    }\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction insert_hydration(target, node, anchor) {\n    if (is_hydrating && !anchor) {\n        append_hydration(target, node);\n    }\n    else if (node.parentNode !== target || node.nextSibling != anchor) {\n        target.insertBefore(node, anchor || null);\n    }\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction trusted(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.isTrusted)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value') {\n            node.value = node[key] = attributes[key];\n        }\n        else if (descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = typeof node[prop] === 'boolean' && value === '' ? true : value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group, __value, checked) {\n    const value = new Set();\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.add(group[i].__value);\n    }\n    if (!checked) {\n        value.delete(__value);\n    }\n    return Array.from(value);\n}\nfunction to_number(value) {\n    return value === '' ? null : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction init_claim_info(nodes) {\n    if (nodes.claim_info === undefined) {\n        nodes.claim_info = { last_index: 0, total_claimed: 0 };\n    }\n}\nfunction claim_node(nodes, predicate, processNode, createNode, dontUpdateLastIndex = false) {\n    // Try to find nodes in an order such that we lengthen the longest increasing subsequence\n    init_claim_info(nodes);\n    const resultNode = (() => {\n        // We first try to find an element after the previous one\n        for (let i = nodes.claim_info.last_index; i < nodes.length; i++) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                return node;\n            }\n        }\n        // Otherwise, we try to find one before\n        // We iterate in reverse so that we don't go too far back\n        for (let i = nodes.claim_info.last_index - 1; i >= 0; i--) {\n            const node = nodes[i];\n            if (predicate(node)) {\n                const replacement = processNode(node);\n                if (replacement === undefined) {\n                    nodes.splice(i, 1);\n                }\n                else {\n                    nodes[i] = replacement;\n                }\n                if (!dontUpdateLastIndex) {\n                    nodes.claim_info.last_index = i;\n                }\n                else if (replacement === undefined) {\n                    // Since we spliced before the last_index, we decrease it\n                    nodes.claim_info.last_index--;\n                }\n                return node;\n            }\n        }\n        // If we can't find any matching node, we create a new one\n        return createNode();\n    })();\n    resultNode.claim_order = nodes.claim_info.total_claimed;\n    nodes.claim_info.total_claimed += 1;\n    return resultNode;\n}\nfunction claim_element_base(nodes, name, attributes, create_element) {\n    return claim_node(nodes, (node) => node.nodeName === name, (node) => {\n        const remove = [];\n        for (let j = 0; j < node.attributes.length; j++) {\n            const attribute = node.attributes[j];\n            if (!attributes[attribute.name]) {\n                remove.push(attribute.name);\n            }\n        }\n        remove.forEach(v => node.removeAttribute(v));\n        return undefined;\n    }, () => create_element(name));\n}\nfunction claim_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, element);\n}\nfunction claim_svg_element(nodes, name, attributes) {\n    return claim_element_base(nodes, name, attributes, svg_element);\n}\nfunction claim_text(nodes, data) {\n    return claim_node(nodes, (node) => node.nodeType === 3, (node) => {\n        const dataStr = '' + data;\n        if (node.data.startsWith(dataStr)) {\n            if (node.data.length !== dataStr.length) {\n                return node.splitText(dataStr.length);\n            }\n        }\n        else {\n            node.data = dataStr;\n        }\n    }, () => text(data), true // Text nodes should not update last index since it is likely not worth it to eliminate an increasing subsequence of actual elements\n    );\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction find_comment(nodes, text, start) {\n    for (let i = start; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 8 /* comment node */ && node.textContent.trim() === text) {\n            return i;\n        }\n    }\n    return nodes.length;\n}\nfunction claim_html_tag(nodes) {\n    // find html opening tag\n    const start_index = find_comment(nodes, 'HTML_TAG_START', 0);\n    const end_index = find_comment(nodes, 'HTML_TAG_END', start_index);\n    if (start_index === end_index) {\n        return new HtmlTagHydration();\n    }\n    init_claim_info(nodes);\n    const html_tag_nodes = nodes.splice(start_index, end_index - start_index + 1);\n    detach(html_tag_nodes[0]);\n    detach(html_tag_nodes[html_tag_nodes.length - 1]);\n    const claimed_nodes = html_tag_nodes.slice(1, html_tag_nodes.length - 1);\n    for (const n of claimed_nodes) {\n        n.claim_order = nodes.claim_info.total_claimed;\n        nodes.claim_info.total_claimed += 1;\n    }\n    return new HtmlTagHydration(claimed_nodes);\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.wholeText !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    input.value = value == null ? '' : value;\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    if (value === null) {\n        node.style.removeProperty(key);\n    }\n    else {\n        node.style.setProperty(key, value, important ? 'important' : '');\n    }\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n    select.selectedIndex = -1; // no option should be selected\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\n// unfortunately this can't be a constant as that wouldn't be tree-shakeable\n// so we cache the result instead\nlet crossorigin;\nfunction is_crossorigin() {\n    if (crossorigin === undefined) {\n        crossorigin = false;\n        try {\n            if (typeof window !== 'undefined' && window.parent) {\n                void window.parent.document;\n            }\n        }\n        catch (error) {\n            crossorigin = true;\n        }\n    }\n    return crossorigin;\n}\nfunction add_resize_listener(node, fn) {\n    const computed_style = getComputedStyle(node);\n    if (computed_style.position === 'static') {\n        node.style.position = 'relative';\n    }\n    const iframe = element('iframe');\n    iframe.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; width: 100%; height: 100%; ' +\n        'overflow: hidden; border: 0; opacity: 0; pointer-events: none; z-index: -1;');\n    iframe.setAttribute('aria-hidden', 'true');\n    iframe.tabIndex = -1;\n    const crossorigin = is_crossorigin();\n    let unsubscribe;\n    if (crossorigin) {\n        iframe.src = \"data:text/html,<script>onresize=function(){parent.postMessage(0,'*')}</script>\";\n        unsubscribe = listen(window, 'message', (event) => {\n            if (event.source === iframe.contentWindow)\n                fn();\n        });\n    }\n    else {\n        iframe.src = 'about:blank';\n        iframe.onload = () => {\n            unsubscribe = listen(iframe.contentWindow, 'resize', fn);\n        };\n    }\n    append(node, iframe);\n    return () => {\n        if (crossorigin) {\n            unsubscribe();\n        }\n        else if (unsubscribe && iframe.contentWindow) {\n            unsubscribe();\n        }\n        detach(iframe);\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail, bubbles = false) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, bubbles, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor() {\n        this.e = this.n = null;\n    }\n    c(html) {\n        this.h(html);\n    }\n    m(html, target, anchor = null) {\n        if (!this.e) {\n            this.e = element(target.nodeName);\n            this.t = target;\n            this.c(html);\n        }\n        this.i(anchor);\n    }\n    h(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(this.t, this.n[i], anchor);\n        }\n    }\n    p(html) {\n        this.d();\n        this.h(html);\n        this.i(this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\nclass HtmlTagHydration extends HtmlTag {\n    constructor(claimed_nodes) {\n        super();\n        this.e = this.n = null;\n        this.l = claimed_nodes;\n    }\n    c(html) {\n        if (this.l) {\n            this.n = this.l;\n        }\n        else {\n            super.c(html);\n        }\n    }\n    i(anchor) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert_hydration(this.t, this.n[i], anchor);\n        }\n    }\n}\nfunction attribute_to_object(attributes) {\n    const result = {};\n    for (const attribute of attributes) {\n        result[attribute.name] = attribute.value;\n    }\n    return result;\n}\nfunction get_custom_elements_slots(element) {\n    const result = {};\n    element.childNodes.forEach((node) => {\n        result[node.slot || 'default'] = true;\n    });\n    return result;\n}\n\n// we need to store the information for multiple documents because a Svelte application could also contain iframes\n// https://github.com/sveltejs/svelte/issues/3624\nconst managed_styles = new Map();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_style_information(doc, node) {\n    const info = { stylesheet: append_empty_stylesheet(node), rules: {} };\n    managed_styles.set(doc, info);\n    return info;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = get_root_for_style(node);\n    const { stylesheet, rules } = managed_styles.get(doc) || create_style_information(doc, node);\n    if (!rules[name]) {\n        rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ''}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        managed_styles.forEach(info => {\n            const { stylesheet } = info;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            info.rules = {};\n        });\n        managed_styles.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error('Function called outside component initialization');\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\nfunction getAllContexts() {\n    return get_current_component().$$.context;\n}\nfunction hasContext(key) {\n    return get_current_component().$$.context.has(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        // @ts-ignore\n        callbacks.slice().forEach(fn => fn.call(this, event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\n// flush() calls callbacks in this order:\n// 1. All beforeUpdate callbacks, in order: parents before children\n// 2. All bind:this callbacks, in reverse order: children before parents.\n// 3. All afterUpdate callbacks, in order: parents before children. EXCEPT\n//    for afterUpdates called during the initial onMount, which are called in\n//    reverse order: children before parents.\n// Since callbacks might update component values, which could trigger another\n// call to flush(), the following steps guard against this:\n// 1. During beforeUpdate, any updated components will be added to the\n//    dirty_components array and will cause a reentrant call to flush(). Because\n//    the flush index is kept outside the function, the reentrant call will pick\n//    up where the earlier call left off and go through all dirty components. The\n//    current_component value is saved and restored so that the reentrant call will\n//    not interfere with the \"parent\" flush() call.\n// 2. bind:this callbacks cannot trigger new flush() calls.\n// 3. During afterUpdate, any updated components will NOT have their afterUpdate\n//    callback called a second time; the seen_callbacks set, outside the flush()\n//    function, guarantees this behavior.\nconst seen_callbacks = new Set();\nlet flushidx = 0; // Do *not* move this inside the flush() function\nfunction flush() {\n    const saved_component = current_component;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        while (flushidx < dirty_components.length) {\n            const component = dirty_components[flushidx];\n            flushidx++;\n            set_current_component(component);\n            update(component.$$);\n        }\n        set_current_component(null);\n        dirty_components.length = 0;\n        flushidx = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    seen_callbacks.clear();\n    set_current_component(saved_component);\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            started = true;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = (program.b - t);\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program || pending_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            if (info.blocks[i] === block) {\n                                info.blocks[i] = null;\n                            }\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n            if (!info.hasCatch) {\n                throw error;\n            }\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\nfunction update_await_block_branch(info, ctx, dirty) {\n    const child_ctx = ctx.slice();\n    const { resolved } = info;\n    if (info.current === info.then) {\n        child_ctx[info.value] = resolved;\n    }\n    if (info.current === info.catch) {\n        child_ctx[info.error] = resolved;\n    }\n    info.block.p(child_ctx, dirty);\n}\n\nconst globals = (typeof window !== 'undefined'\n    ? window\n    : typeof globalThis !== 'undefined'\n        ? globalThis\n        : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next);\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error('Cannot have duplicate keys in a keyed each');\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, attrs_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (attrs_to_add) {\n        const classes_to_add = attrs_to_add.classes;\n        const styles_to_add = attrs_to_add.styles;\n        if (classes_to_add) {\n            if (attributes.class == null) {\n                attributes.class = classes_to_add;\n            }\n            else {\n                attributes.class += ' ' + classes_to_add;\n            }\n        }\n        if (styles_to_add) {\n            if (attributes.style == null) {\n                attributes.style = style_object_to_string(styles_to_add);\n            }\n            else {\n                attributes.style = style_object_to_string(merge_ssr_styles(attributes.style, styles_to_add));\n            }\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += ' ' + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += ' ' + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${value}\"`;\n        }\n    });\n    return str;\n}\nfunction merge_ssr_styles(style_attribute, style_directive) {\n    const style_object = {};\n    for (const individual_style of style_attribute.split(';')) {\n        const colon_index = individual_style.indexOf(':');\n        const name = individual_style.slice(0, colon_index).trim();\n        const value = individual_style.slice(colon_index + 1).trim();\n        if (!name)\n            continue;\n        style_object[name] = value;\n    }\n    for (const name in style_directive) {\n        const value = style_directive[name];\n        if (value) {\n            style_object[name] = value;\n        }\n        else {\n            delete style_object[name];\n        }\n    }\n    return style_object;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction escape_attribute_value(value) {\n    return typeof value === 'string' ? escape(value) : value;\n}\nfunction escape_object(obj) {\n    const result = {};\n    for (const key in obj) {\n        result[key] = escape_attribute_value(obj[key]);\n    }\n    return result;\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots, context) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(context || (parent_component ? parent_component.$$.context : [])),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, { $$slots = {}, context = new Map() } = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, $$slots, context);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    const assignment = (boolean && value === true) ? '' : `=\"${escape_attribute_value(value.toString())}\"`;\n    return ` ${name}${assignment}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : '';\n}\nfunction style_object_to_string(style_object) {\n    return Object.keys(style_object)\n        .filter(key => style_object[key])\n        .map(key => `${key}: ${style_object[key]};`)\n        .join(' ');\n}\nfunction add_styles(style_object) {\n    const styles = style_object_to_string(style_object);\n    return styles ? ` style=\"${styles}\"` : '';\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor, customElement) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    if (!customElement) {\n        // onMount happens before the initial afterUpdate\n        add_render_callback(() => {\n            const new_on_destroy = on_mount.map(run).filter(is_function);\n            if (on_destroy) {\n                on_destroy.push(...new_on_destroy);\n            }\n            else {\n                // Edge case - component was destroyed immediately,\n                // most likely as a result of a binding initialising\n                run_all(new_on_destroy);\n            }\n            component.$$.on_mount = [];\n        });\n    }\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, append_styles, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        on_disconnect: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(options.context || (parent_component ? parent_component.$$.context : [])),\n        // everything else\n        callbacks: blank_object(),\n        dirty,\n        skip_bound: false,\n        root: options.target || parent_component.$$.root\n    };\n    append_styles && append_styles($$.root);\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, options.props || {}, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if (!$$.skip_bound && $$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            start_hydrating();\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor, options.customElement);\n        end_hydrating();\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            const { on_mount } = this.$$;\n            this.$$.on_disconnect = on_mount.map(run).filter(is_function);\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        disconnectedCallback() {\n            run_all(this.$$.on_disconnect);\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set($$props) {\n            if (this.$$set && !is_empty($$props)) {\n                this.$$.skip_bound = true;\n                this.$$set($$props);\n                this.$$.skip_bound = false;\n            }\n        }\n    };\n}\n/**\n * Base class for Svelte components. Used when dev=false.\n */\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set($$props) {\n        if (this.$$set && !is_empty($$props)) {\n            this.$$.skip_bound = true;\n            this.$$set($$props);\n            this.$$.skip_bound = false;\n        }\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.46.6' }, detail), true));\n}\nfunction append_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append(target, node);\n}\nfunction append_hydration_dev(target, node) {\n    dispatch_dev('SvelteDOMInsert', { target, node });\n    append_hydration(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction insert_hydration_dev(target, node, anchor) {\n    dispatch_dev('SvelteDOMInsert', { target, node, anchor });\n    insert_hydration(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev('SvelteDOMRemove', { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? ['capture'] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev('SvelteDOMAddEventListener', { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev('SvelteDOMRemoveEventListener', { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev('SvelteDOMRemoveAttribute', { node, attribute });\n    else\n        dispatch_dev('SvelteDOMSetAttribute', { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev('SvelteDOMSetProperty', { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev('SvelteDOMSetDataset', { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.wholeText === data)\n        return;\n    dispatch_dev('SvelteDOMSetData', { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\n/**\n * Base class for Svelte components with some minor dev-enhancements. Used when dev=true.\n */\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(\"'target' is a required option\");\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn('Component was already destroyed'); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\n/**\n * Base class to create strongly typed Svelte components.\n * This only exists for typing purposes and should be used in `.d.ts` files.\n *\n * ### Example:\n *\n * You have component library on npm called `component-library`, from which\n * you export a component called `MyComponent`. For Svelte+TypeScript users,\n * you want to provide typings. Therefore you create a `index.d.ts`:\n * ```ts\n * import { SvelteComponentTyped } from \"svelte\";\n * export class MyComponent extends SvelteComponentTyped<{foo: string}> {}\n * ```\n * Typing this makes it possible for IDEs like VS Code with the Svelte extension\n * to provide intellisense and to use the component like this in a Svelte file\n * with TypeScript:\n * ```svelte\n * <script lang=\"ts\">\n * \timport { MyComponent } from \"component-library\";\n * </script>\n * <MyComponent foo={'bar'} />\n * ```\n *\n * #### Why not make this part of `SvelteComponent(Dev)`?\n * Because\n * ```ts\n * class ASubclassOfSvelteComponent extends SvelteComponent<{foo: string}> {}\n * const component: typeof SvelteComponent = ASubclassOfSvelteComponent;\n * ```\n * will throw a type error, so we need to separate the more strictly typed class.\n */\nclass SvelteComponentTyped extends SvelteComponentDev {\n    constructor(options) {\n        super(options);\n    }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error('Infinite loop detected');\n        }\n    };\n}\n\nexport { HtmlTag, HtmlTagHydration, SvelteComponent, SvelteComponentDev, SvelteComponentTyped, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_styles, add_transform, afterUpdate, append, append_dev, append_empty_stylesheet, append_hydration, append_hydration_dev, append_styles, assign, attr, attr_dev, attribute_to_object, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_html_tag, claim_space, claim_svg_element, claim_text, clear_loops, component_subscribe, compute_rest_props, compute_slots, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, end_hydrating, escape, escape_attribute_value, escape_object, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getAllContexts, getContext, get_all_dirty_from_scope, get_binding_group_value, get_current_component, get_custom_elements_slots, get_root_for_style, get_slot_changes, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, hasContext, has_prop, identity, init, insert, insert_dev, insert_hydration, insert_hydration_dev, intros, invalid_attribute_name_character, is_client, is_crossorigin, is_empty, is_function, is_promise, listen, listen_dev, loop, loop_guard, merge_ssr_styles, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, src_url_equal, start_hydrating, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, trusted, update_await_block_branch, update_keyed_each, update_slot, update_slot_base, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","export var GameMode;\n(function (GameMode) {\n    GameMode[GameMode[\"advisorya\"] = 0] = \"advisorya\";\n    GameMode[GameMode[\"advisoryb\"] = 1] = \"advisoryb\";\n    GameMode[GameMode[\"advisoryc\"] = 2] = \"advisoryc\";\n    GameMode[GameMode[\"advisoryd\"] = 3] = \"advisoryd\";\n    GameMode[GameMode[\"advisorye\"] = 4] = \"advisorye\";\n    GameMode[GameMode[\"advisoryf\"] = 5] = \"advisoryf\";\n    // \"minutely\",\n})(GameMode || (GameMode = {}));\n;\n","const words = {\n    \"words\": [\n        \"engage\",\n        \"mentor\",\n        \"guided\",\n        \"growth\",\n        \"dsmith\",\n        \"school\", //advisory F (12 Ben)\n    ],\n    \"valid\": [\n        \"aahing\",\n        \"abacus\",\n        \"abamps\",\n        \"abased\",\n        \"abaser\",\n        \"abases\",\n        \"abasia\",\n        \"abasic\",\n        \"abated\",\n        \"abater\",\n        \"abates\",\n        \"abatic\",\n        \"abator\",\n        \"abbess\",\n        \"abbeys\",\n        \"abbots\",\n        \"abduce\",\n        \"abduct\",\n        \"abears\",\n        \"abhors\",\n        \"abided\",\n        \"abider\",\n        \"abides\",\n        \"abject\",\n        \"abjure\",\n        \"ablate\",\n        \"ablaze\",\n        \"ablest\",\n        \"abloom\",\n        \"ablude\",\n        \"ablush\",\n        \"ablute\",\n        \"abmhos\",\n        \"aboard\",\n        \"aboded\",\n        \"abodes\",\n        \"abohms\",\n        \"abonne\",\n        \"aboral\",\n        \"aborne\",\n        \"aborts\",\n        \"abound\",\n        \"abouts\",\n        \"abrade\",\n        \"abraid\",\n        \"abrase\",\n        \"abrash\",\n        \"abrays\",\n        \"abroad\",\n        \"abrupt\",\n        \"abseil\",\n        \"absent\",\n        \"absits\",\n        \"absorb\",\n        \"absurd\",\n        \"abulia\",\n        \"abulic\",\n        \"abused\",\n        \"abuser\",\n        \"abuses\",\n        \"abvolt\",\n        \"abwatt\",\n        \"abysms\",\n        \"acacia\",\n        \"acater\",\n        \"acates\",\n        \"acatry\",\n        \"accede\",\n        \"accent\",\n        \"accept\",\n        \"access\",\n        \"accite\",\n        \"accloy\",\n        \"accord\",\n        \"accost\",\n        \"accoys\",\n        \"accrue\",\n        \"accuse\",\n        \"acenes\",\n        \"acetic\",\n        \"acetyl\",\n        \"achene\",\n        \"achier\",\n        \"aching\",\n        \"acidic\",\n        \"acidly\",\n        \"acinic\",\n        \"acinus\",\n        \"acnode\",\n        \"acomia\",\n        \"acopic\",\n        \"acorns\",\n        \"acquit\",\n        \"across\",\n        \"actant\",\n        \"acting\",\n        \"actins\",\n        \"action\",\n        \"active\",\n        \"actors\",\n        \"actual\",\n        \"acuate\",\n        \"acuity\",\n        \"aculei\",\n        \"acumen\",\n        \"acuter\",\n        \"acutes\",\n        \"adages\",\n        \"adapts\",\n        \"addend\",\n        \"adders\",\n        \"addict\",\n        \"adding\",\n        \"addled\",\n        \"addler\",\n        \"addles\",\n        \"adduce\",\n        \"adduct\",\n        \"adepts\",\n        \"adhere\",\n        \"adhorn\",\n        \"adieus\",\n        \"adjigo\",\n        \"adjoin\",\n        \"adjure\",\n        \"adjust\",\n        \"adjute\",\n        \"adlibs\",\n        \"admins\",\n        \"admire\",\n        \"admits\",\n        \"admixt\",\n        \"adnexa\",\n        \"adobes\",\n        \"adonic\",\n        \"adopts\",\n        \"adored\",\n        \"adorer\",\n        \"adores\",\n        \"adorns\",\n        \"adrift\",\n        \"adroit\",\n        \"adsorb\",\n        \"adukis\",\n        \"adults\",\n        \"advent\",\n        \"adverb\",\n        \"advert\",\n        \"advice\",\n        \"advise\",\n        \"adware\",\n        \"adzuki\",\n        \"aedile\",\n        \"aerate\",\n        \"aerial\",\n        \"aerier\",\n        \"aether\",\n        \"affair\",\n        \"affect\",\n        \"affine\",\n        \"affirm\",\n        \"affixt\",\n        \"afford\",\n        \"affray\",\n        \"afghan\",\n        \"afield\",\n        \"aflame\",\n        \"afloat\",\n        \"afraid\",\n        \"afresh\",\n        \"afters\",\n        \"agapes\",\n        \"agaran\",\n        \"agaric\",\n        \"agates\",\n        \"ageing\",\n        \"agency\",\n        \"agenda\",\n        \"agents\",\n        \"ageold\",\n        \"aghast\",\n        \"agings\",\n        \"agleam\",\n        \"aglets\",\n        \"agogic\",\n        \"agouti\",\n        \"agreed\",\n        \"agrees\",\n        \"aiders\",\n        \"aidful\",\n        \"aiding\",\n        \"aiglet\",\n        \"aigret\",\n        \"ailing\",\n        \"aimers\",\n        \"aiming\",\n        \"aiolis\",\n        \"airbag\",\n        \"airbed\",\n        \"airbus\",\n        \"airdry\",\n        \"airgap\",\n        \"airgun\",\n        \"airier\",\n        \"airily\",\n        \"airing\",\n        \"airish\",\n        \"airman\",\n        \"airmen\",\n        \"airway\",\n        \"aisled\",\n        \"aisles\",\n        \"ajoint\",\n        \"akenes\",\n        \"alanyl\",\n        \"alarms\",\n        \"alarum\",\n        \"alaska\",\n        \"albedo\",\n        \"albeit\",\n        \"albino\",\n        \"albite\",\n        \"albums\",\n        \"alcove\",\n        \"alders\",\n        \"aldols\",\n        \"aldose\",\n        \"alecup\",\n        \"alephs\",\n        \"alerts\",\n        \"alibis\",\n        \"alidad\",\n        \"aliens\",\n        \"alight\",\n        \"aligns\",\n        \"alikes\",\n        \"alkali\",\n        \"alkane\",\n        \"alkene\",\n        \"alkoxy\",\n        \"alkyds\",\n        \"alkyne\",\n        \"allays\",\n        \"allege\",\n        \"allele\",\n        \"alleve\",\n        \"alleys\",\n        \"allied\",\n        \"allier\",\n        \"allies\",\n        \"allium\",\n        \"allots\",\n        \"allows\",\n        \"alloys\",\n        \"allude\",\n        \"allure\",\n        \"almond\",\n        \"almost\",\n        \"alobar\",\n        \"alpaca\",\n        \"alpeen\",\n        \"alphas\",\n        \"alpine\",\n        \"altars\",\n        \"alters\",\n        \"alulas\",\n        \"alumel\",\n        \"alumna\",\n        \"alumni\",\n        \"always\",\n        \"amazed\",\n        \"amazes\",\n        \"amazon\",\n        \"ambers\",\n        \"ambits\",\n        \"ambled\",\n        \"ambler\",\n        \"ambles\",\n        \"ambush\",\n        \"amebae\",\n        \"amebas\",\n        \"amebic\",\n        \"amelia\",\n        \"amends\",\n        \"aments\",\n        \"amerce\",\n        \"amides\",\n        \"amidst\",\n        \"amigos\",\n        \"amines\",\n        \"ammine\",\n        \"amnion\",\n        \"amoeba\",\n        \"amoral\",\n        \"amorph\",\n        \"amount\",\n        \"amours\",\n        \"amoxil\",\n        \"ampere\",\n        \"ampler\",\n        \"ampule\",\n        \"amrita\",\n        \"amulet\",\n        \"amused\",\n        \"amuses\",\n        \"anagen\",\n        \"anally\",\n        \"analog\",\n        \"ananym\",\n        \"anarch\",\n        \"anchor\",\n        \"anding\",\n        \"anemia\",\n        \"anemic\",\n        \"angels\",\n        \"angers\",\n        \"angina\",\n        \"angled\",\n        \"angler\",\n        \"angles\",\n        \"angsts\",\n        \"angsty\",\n        \"animal\",\n        \"animus\",\n        \"anions\",\n        \"anises\",\n        \"anitis\",\n        \"ankled\",\n        \"ankles\",\n        \"anklet\",\n        \"annals\",\n        \"anneal\",\n        \"annoys\",\n        \"annual\",\n        \"annuli\",\n        \"annuls\",\n        \"anodal\",\n        \"anodes\",\n        \"anodic\",\n        \"anoint\",\n        \"anomer\",\n        \"anonym\",\n        \"anotia\",\n        \"anoxia\",\n        \"anoxic\",\n        \"answer\",\n        \"anthem\",\n        \"anther\",\n        \"antics\",\n        \"anting\",\n        \"antler\",\n        \"antral\",\n        \"antrum\",\n        \"anuses\",\n        \"anvils\",\n        \"anyhow\",\n        \"anyone\",\n        \"anyway\",\n        \"aortal\",\n        \"aortas\",\n        \"aortic\",\n        \"apache\",\n        \"apathy\",\n        \"apeman\",\n        \"apemen\",\n        \"apexed\",\n        \"apexes\",\n        \"aphids\",\n        \"apiary\",\n        \"apical\",\n        \"apices\",\n        \"apiece\",\n        \"aplite\",\n        \"aplomb\",\n        \"apogee\",\n        \"apolar\",\n        \"apolog\",\n        \"apozem\",\n        \"appall\",\n        \"appeal\",\n        \"appear\",\n        \"appels\",\n        \"append\",\n        \"apples\",\n        \"applet\",\n        \"appose\",\n        \"aprils\",\n        \"aprons\",\n        \"aptest\",\n        \"arable\",\n        \"arbors\",\n        \"arbour\",\n        \"arcade\",\n        \"arcana\",\n        \"arcane\",\n        \"arched\",\n        \"archer\",\n        \"arches\",\n        \"archly\",\n        \"archon\",\n        \"arcing\",\n        \"arctan\",\n        \"arctic\",\n        \"ardent\",\n        \"ardors\",\n        \"ardour\",\n        \"aready\",\n        \"arenas\",\n        \"areola\",\n        \"areole\",\n        \"argent\",\n        \"argons\",\n        \"argued\",\n        \"arguer\",\n        \"argues\",\n        \"argyle\",\n        \"argyll\",\n        \"arhats\",\n        \"ariary\",\n        \"aright\",\n        \"arilli\",\n        \"arisen\",\n        \"arises\",\n        \"arkose\",\n        \"armada\",\n        \"armers\",\n        \"armets\",\n        \"armful\",\n        \"armies\",\n        \"arming\",\n        \"armlet\",\n        \"armors\",\n        \"armory\",\n        \"armour\",\n        \"armpit\",\n        \"aromas\",\n        \"around\",\n        \"arouse\",\n        \"arrays\",\n        \"arrest\",\n        \"arrive\",\n        \"arrows\",\n        \"arseno\",\n        \"arshin\",\n        \"artery\",\n        \"artful\",\n        \"artier\",\n        \"artily\",\n        \"artist\",\n        \"arynes\",\n        \"ascend\",\n        \"ascent\",\n        \"ascots\",\n        \"ashier\",\n        \"ashing\",\n        \"ashore\",\n        \"asking\",\n        \"asleep\",\n        \"aspect\",\n        \"aspens\",\n        \"aspics\",\n        \"aspire\",\n        \"assail\",\n        \"assart\",\n        \"assays\",\n        \"assent\",\n        \"assert\",\n        \"assess\",\n        \"assets\",\n        \"assign\",\n        \"assist\",\n        \"assort\",\n        \"assume\",\n        \"assure\",\n        \"astern\",\n        \"asters\",\n        \"asthma\",\n        \"astral\",\n        \"astray\",\n        \"astute\",\n        \"asylum\",\n        \"ataxia\",\n        \"ataxic\",\n        \"atokes\",\n        \"atolls\",\n        \"atomic\",\n        \"atonal\",\n        \"atoned\",\n        \"atoner\",\n        \"atones\",\n        \"atonia\",\n        \"atonic\",\n        \"atopic\",\n        \"atoxic\",\n        \"atoxyl\",\n        \"atrial\",\n        \"atrium\",\n        \"attach\",\n        \"attack\",\n        \"attain\",\n        \"attend\",\n        \"attest\",\n        \"attics\",\n        \"attire\",\n        \"attune\",\n        \"auburn\",\n        \"audios\",\n        \"audits\",\n        \"augers\",\n        \"aughts\",\n        \"augite\",\n        \"augurs\",\n        \"augury\",\n        \"august\",\n        \"auklet\",\n        \"aulete\",\n        \"aulist\",\n        \"aulode\",\n        \"auntie\",\n        \"aupair\",\n        \"aurate\",\n        \"aureus\",\n        \"aurify\",\n        \"aurora\",\n        \"auteur\",\n        \"author\",\n        \"autism\",\n        \"autist\",\n        \"autumn\",\n        \"auxins\",\n        \"avails\",\n        \"avatar\",\n        \"avenge\",\n        \"avenue\",\n        \"averse\",\n        \"averts\",\n        \"avians\",\n        \"aviary\",\n        \"aviate\",\n        \"avider\",\n        \"avidly\",\n        \"avoids\",\n        \"avouch\",\n        \"avowal\",\n        \"avowed\",\n        \"avower\",\n        \"awaits\",\n        \"awaked\",\n        \"awaken\",\n        \"awakes\",\n        \"awards\",\n        \"aweigh\",\n        \"aweing\",\n        \"awhile\",\n        \"awhirl\",\n        \"awning\",\n        \"awoken\",\n        \"axeman\",\n        \"axemen\",\n        \"axenic\",\n        \"axhead\",\n        \"axilla\",\n        \"axioms\",\n        \"axions\",\n        \"axises\",\n        \"axites\",\n        \"axlike\",\n        \"axoids\",\n        \"axonal\",\n        \"axonic\",\n        \"axseed\",\n        \"axweed\",\n        \"axwort\",\n        \"azalea\",\n        \"azenes\",\n        \"azides\",\n        \"azines\",\n        \"azlons\",\n        \"azoles\",\n        \"azolla\",\n        \"azonal\",\n        \"azotea\",\n        \"azukis\",\n        \"azured\",\n        \"azures\",\n        \"azymes\",\n        \"azymia\",\n        \"azymic\",\n        \"baaing\",\n        \"babble\",\n        \"babbly\",\n        \"babied\",\n        \"babier\",\n        \"babies\",\n        \"baboon\",\n        \"backed\",\n        \"backer\",\n        \"backup\",\n        \"badder\",\n        \"badged\",\n        \"badger\",\n        \"badges\",\n        \"badman\",\n        \"baffle\",\n        \"bagels\",\n        \"bagful\",\n        \"bagged\",\n        \"bagger\",\n        \"baggie\",\n        \"bagman\",\n        \"bagmen\",\n        \"bailed\",\n        \"bailey\",\n        \"bairns\",\n        \"baited\",\n        \"baiter\",\n        \"bakers\",\n        \"bakery\",\n        \"baking\",\n        \"balboa\",\n        \"balder\",\n        \"baldly\",\n        \"baleen\",\n        \"balers\",\n        \"baling\",\n        \"balked\",\n        \"balker\",\n        \"ballad\",\n        \"balled\",\n        \"ballet\",\n        \"ballot\",\n        \"balsam\",\n        \"balsas\",\n        \"bambam\",\n        \"bamboo\",\n        \"bammed\",\n        \"bammer\",\n        \"banana\",\n        \"banded\",\n        \"bandit\",\n        \"banged\",\n        \"banger\",\n        \"bangle\",\n        \"banish\",\n        \"banjos\",\n        \"banked\",\n        \"banker\",\n        \"banned\",\n        \"banner\",\n        \"banter\",\n        \"barbed\",\n        \"barbel\",\n        \"barber\",\n        \"barbie\",\n        \"bardic\",\n        \"barely\",\n        \"barest\",\n        \"barfed\",\n        \"barfly\",\n        \"barful\",\n        \"barged\",\n        \"barges\",\n        \"barhop\",\n        \"baring\",\n        \"barite\",\n        \"barium\",\n        \"barked\",\n        \"barker\",\n        \"barley\",\n        \"barman\",\n        \"barmen\",\n        \"barney\",\n        \"barons\",\n        \"barony\",\n        \"barred\",\n        \"barrel\",\n        \"barren\",\n        \"barres\",\n        \"barrow\",\n        \"barter\",\n        \"baryon\",\n        \"basalt\",\n        \"basely\",\n        \"basest\",\n        \"bashed\",\n        \"basher\",\n        \"bashes\",\n        \"basics\",\n        \"basify\",\n        \"basils\",\n        \"basing\",\n        \"basins\",\n        \"basion\",\n        \"basked\",\n        \"basket\",\n        \"basque\",\n        \"basses\",\n        \"basset\",\n        \"basted\",\n        \"baster\",\n        \"bastes\",\n        \"batboy\",\n        \"bathed\",\n        \"bather\",\n        \"bathes\",\n        \"batiks\",\n        \"bating\",\n        \"batlet\",\n        \"batoid\",\n        \"batons\",\n        \"batted\",\n        \"batten\",\n        \"batter\",\n        \"battle\",\n        \"bauble\",\n        \"baulks\",\n        \"baulky\",\n        \"bawled\",\n        \"baying\",\n        \"bayous\",\n        \"bazaar\",\n        \"beachy\",\n        \"beacon\",\n        \"beaded\",\n        \"beagle\",\n        \"beaked\",\n        \"beaker\",\n        \"beamed\",\n        \"beaned\",\n        \"beanie\",\n        \"beards\",\n        \"bearer\",\n        \"beasts\",\n        \"beaten\",\n        \"beater\",\n        \"beatup\",\n        \"beauty\",\n        \"beaver\",\n        \"became\",\n        \"beckon\",\n        \"become\",\n        \"becurl\",\n        \"bedamn\",\n        \"bedare\",\n        \"bedark\",\n        \"bedash\",\n        \"bedaub\",\n        \"bedbug\",\n        \"bedded\",\n        \"bedder\",\n        \"bedead\",\n        \"bedeck\",\n        \"bedews\",\n        \"bedewy\",\n        \"bedims\",\n        \"bedirt\",\n        \"bedkey\",\n        \"bedlam\",\n        \"bedlar\",\n        \"bedote\",\n        \"bedpan\",\n        \"bedrid\",\n        \"bedrop\",\n        \"bedrug\",\n        \"bedsit\",\n        \"bedubs\",\n        \"beduck\",\n        \"beduke\",\n        \"bedung\",\n        \"bedusk\",\n        \"bedust\",\n        \"bedway\",\n        \"bedwet\",\n        \"bedyed\",\n        \"bedyes\",\n        \"beebee\",\n        \"beefed\",\n        \"beeped\",\n        \"beeper\",\n        \"beetle\",\n        \"befall\",\n        \"befell\",\n        \"befits\",\n        \"befool\",\n        \"before\",\n        \"begets\",\n        \"beggar\",\n        \"begged\",\n        \"begins\",\n        \"begnaw\",\n        \"begone\",\n        \"behalf\",\n        \"behave\",\n        \"behead\",\n        \"beheld\",\n        \"behest\",\n        \"behind\",\n        \"behold\",\n        \"behove\",\n        \"beiges\",\n        \"beings\",\n        \"belaud\",\n        \"belays\",\n        \"beldam\",\n        \"belfry\",\n        \"belief\",\n        \"belled\",\n        \"belles\",\n        \"bellow\",\n        \"belong\",\n        \"belows\",\n        \"belted\",\n        \"beluga\",\n        \"bemaul\",\n        \"bemire\",\n        \"bemoan\",\n        \"bemock\",\n        \"bemuds\",\n        \"bemuse\",\n        \"bended\",\n        \"bender\",\n        \"bengal\",\n        \"benign\",\n        \"benumb\",\n        \"benzil\",\n        \"benzol\",\n        \"benzyl\",\n        \"berate\",\n        \"bereft\",\n        \"berets\",\n        \"berths\",\n        \"beryls\",\n        \"beseem\",\n        \"besets\",\n        \"beside\",\n        \"besmut\",\n        \"besort\",\n        \"besots\",\n        \"besoul\",\n        \"bespot\",\n        \"bested\",\n        \"bestir\",\n        \"bestow\",\n        \"bestud\",\n        \"betake\",\n        \"betide\",\n        \"betime\",\n        \"betoil\",\n        \"betoss\",\n        \"betray\",\n        \"betrim\",\n        \"better\",\n        \"bevels\",\n        \"bevies\",\n        \"beware\",\n        \"bewray\",\n        \"beyond\",\n        \"bezoar\",\n        \"bezzle\",\n        \"biarch\",\n        \"biased\",\n        \"biases\",\n        \"bibles\",\n        \"bicarb\",\n        \"biceps\",\n        \"bicker\",\n        \"bidden\",\n        \"bidder\",\n        \"bidets\",\n        \"biding\",\n        \"bifids\",\n        \"bifold\",\n        \"bigamy\",\n        \"bigger\",\n        \"bigots\",\n        \"bigram\",\n        \"bigwig\",\n        \"bijoux\",\n        \"bikers\",\n        \"biking\",\n        \"bikini\",\n        \"bilged\",\n        \"bilges\",\n        \"bilked\",\n        \"bilker\",\n        \"billed\",\n        \"billet\",\n        \"billow\",\n        \"bilobe\",\n        \"binary\",\n        \"binded\",\n        \"binder\",\n        \"binged\",\n        \"binger\",\n        \"binges\",\n        \"binman\",\n        \"binmen\",\n        \"binned\",\n        \"binode\",\n        \"biobag\",\n        \"biodot\",\n        \"bioink\",\n        \"biomes\",\n        \"bionic\",\n        \"biopic\",\n        \"biopsy\",\n        \"biotas\",\n        \"biotic\",\n        \"biotin\",\n        \"bipeds\",\n        \"bipods\",\n        \"bipole\",\n        \"birded\",\n        \"birder\",\n        \"birdie\",\n        \"births\",\n        \"bisect\",\n        \"bishop\",\n        \"bisque\",\n        \"bistro\",\n        \"biters\",\n        \"biting\",\n        \"bitmap\",\n        \"bitset\",\n        \"bitted\",\n        \"bitten\",\n        \"bitter\",\n        \"blabby\",\n        \"blacks\",\n        \"bladed\",\n        \"blades\",\n        \"blamed\",\n        \"blamer\",\n        \"blames\",\n        \"blanch\",\n        \"blanks\",\n        \"blared\",\n        \"blares\",\n        \"blasts\",\n        \"blazed\",\n        \"blazer\",\n        \"blazes\",\n        \"blazon\",\n        \"bleach\",\n        \"bleary\",\n        \"bleats\",\n        \"bleaty\",\n        \"blebby\",\n        \"bleeds\",\n        \"bleeps\",\n        \"blench\",\n        \"blends\",\n        \"blenny\",\n        \"blight\",\n        \"blimps\",\n        \"blinds\",\n        \"blinks\",\n        \"blintz\",\n        \"blithe\",\n        \"bloats\",\n        \"blobby\",\n        \"blocks\",\n        \"blocky\",\n        \"blokes\",\n        \"blokey\",\n        \"blonde\",\n        \"blonds\",\n        \"bloods\",\n        \"bloody\",\n        \"blooms\",\n        \"bloomy\",\n        \"blotch\",\n        \"blotty\",\n        \"blouse\",\n        \"blousy\",\n        \"blower\",\n        \"blowsy\",\n        \"blowze\",\n        \"blowzy\",\n        \"bluest\",\n        \"bluesy\",\n        \"bluets\",\n        \"bluffs\",\n        \"bluing\",\n        \"bluish\",\n        \"blunge\",\n        \"blunts\",\n        \"blurbs\",\n        \"blurry\",\n        \"blurts\",\n        \"boards\",\n        \"boardy\",\n        \"boasts\",\n        \"boated\",\n        \"boater\",\n        \"bobbed\",\n        \"bobber\",\n        \"bobbin\",\n        \"bobble\",\n        \"bobbly\",\n        \"bobcat\",\n        \"bobfly\",\n        \"bocals\",\n        \"bodega\",\n        \"bodice\",\n        \"bodied\",\n        \"bodies\",\n        \"bodily\",\n        \"boding\",\n        \"boffos\",\n        \"bogeys\",\n        \"bogged\",\n        \"boggle\",\n        \"bogies\",\n        \"boiled\",\n        \"boiler\",\n        \"bolded\",\n        \"bolder\",\n        \"boldly\",\n        \"bolero\",\n        \"bolide\",\n        \"bolted\",\n        \"bolter\",\n        \"bolton\",\n        \"bombed\",\n        \"bomber\",\n        \"bonbon\",\n        \"bonded\",\n        \"bongos\",\n        \"bonier\",\n        \"boning\",\n        \"bonked\",\n        \"bonnet\",\n        \"bonnie\",\n        \"bonsai\",\n        \"boobed\",\n        \"booboo\",\n        \"boodle\",\n        \"boogie\",\n        \"boohoo\",\n        \"booing\",\n        \"booked\",\n        \"booker\",\n        \"booksy\",\n        \"boomed\",\n        \"boomer\",\n        \"boosed\",\n        \"booses\",\n        \"boosts\",\n        \"booted\",\n        \"booter\",\n        \"booths\",\n        \"boozed\",\n        \"boozer\",\n        \"boozes\",\n        \"boozey\",\n        \"bopped\",\n        \"bopper\",\n        \"borage\",\n        \"borane\",\n        \"borate\",\n        \"border\",\n        \"boreal\",\n        \"boreen\",\n        \"borers\",\n        \"boring\",\n        \"borons\",\n        \"borrow\",\n        \"borzoi\",\n        \"bosoms\",\n        \"bosons\",\n        \"bossed\",\n        \"bosses\",\n        \"boston\",\n        \"botany\",\n        \"botchy\",\n        \"botfly\",\n        \"bother\",\n        \"botnet\",\n        \"bottle\",\n        \"bottom\",\n        \"boughs\",\n        \"bought\",\n        \"bougie\",\n        \"bounce\",\n        \"bouncy\",\n        \"bounds\",\n        \"bounty\",\n        \"boused\",\n        \"bouser\",\n        \"bouses\",\n        \"bovids\",\n        \"bovine\",\n        \"bovoid\",\n        \"bowels\",\n        \"bowers\",\n        \"bowery\",\n        \"bowfin\",\n        \"bowing\",\n        \"bowled\",\n        \"bowleg\",\n        \"bowler\",\n        \"bowman\",\n        \"bowmen\",\n        \"bowpot\",\n        \"bowsaw\",\n        \"bowwow\",\n        \"boxcar\",\n        \"boxers\",\n        \"boxful\",\n        \"boxier\",\n        \"boxing\",\n        \"boxman\",\n        \"boxmen\",\n        \"boxtop\",\n        \"boying\",\n        \"boyish\",\n        \"braced\",\n        \"bracer\",\n        \"braces\",\n        \"bracts\",\n        \"braggy\",\n        \"brahma\",\n        \"braids\",\n        \"brails\",\n        \"brains\",\n        \"brainy\",\n        \"braise\",\n        \"braize\",\n        \"braked\",\n        \"brakes\",\n        \"branch\",\n        \"brands\",\n        \"brandy\",\n        \"branks\",\n        \"brashy\",\n        \"brassy\",\n        \"bratty\",\n        \"braved\",\n        \"braver\",\n        \"braves\",\n        \"bravos\",\n        \"brawls\",\n        \"brawly\",\n        \"brawns\",\n        \"brawny\",\n        \"brayed\",\n        \"brayer\",\n        \"brazed\",\n        \"brazen\",\n        \"brazes\",\n        \"brazil\",\n        \"breach\",\n        \"breads\",\n        \"breaks\",\n        \"breast\",\n        \"breath\",\n        \"breech\",\n        \"breeds\",\n        \"breeze\",\n        \"breezy\",\n        \"breves\",\n        \"brevet\",\n        \"brewed\",\n        \"brewer\",\n        \"briars\",\n        \"bribed\",\n        \"bribee\",\n        \"briber\",\n        \"bribes\",\n        \"bricks\",\n        \"bricky\",\n        \"bridal\",\n        \"brides\",\n        \"bridge\",\n        \"bridle\",\n        \"briefs\",\n        \"briers\",\n        \"briery\",\n        \"bright\",\n        \"brines\",\n        \"briney\",\n        \"brings\",\n        \"brinks\",\n        \"brises\",\n        \"briths\",\n        \"broach\",\n        \"broads\",\n        \"brogan\",\n        \"brogue\",\n        \"broils\",\n        \"broken\",\n        \"broker\",\n        \"bromic\",\n        \"bronco\",\n        \"broncs\",\n        \"bronze\",\n        \"bronzy\",\n        \"brooch\",\n        \"broods\",\n        \"broody\",\n        \"brooks\",\n        \"brooms\",\n        \"broths\",\n        \"brothy\",\n        \"browed\",\n        \"browns\",\n        \"browse\",\n        \"bruise\",\n        \"brunch\",\n        \"brushy\",\n        \"brutal\",\n        \"brutes\",\n        \"bruxed\",\n        \"bruxer\",\n        \"bubble\",\n        \"bubbly\",\n        \"buboes\",\n        \"buccal\",\n        \"buccan\",\n        \"buccin\",\n        \"bucina\",\n        \"bucine\",\n        \"bucked\",\n        \"bucket\",\n        \"buckle\",\n        \"budded\",\n        \"budder\",\n        \"budged\",\n        \"budger\",\n        \"budges\",\n        \"budget\",\n        \"budgie\",\n        \"budlet\",\n        \"buffed\",\n        \"buffer\",\n        \"buffet\",\n        \"bugeye\",\n        \"bugged\",\n        \"bugger\",\n        \"bugled\",\n        \"bugler\",\n        \"bugles\",\n        \"builds\",\n        \"bulbar\",\n        \"bulbed\",\n        \"bulbel\",\n        \"bulged\",\n        \"bulges\",\n        \"bulked\",\n        \"bullae\",\n        \"bulled\",\n        \"bullet\",\n        \"bumble\",\n        \"bummed\",\n        \"bummer\",\n        \"bumped\",\n        \"bumper\",\n        \"bunchy\",\n        \"bundle\",\n        \"bunged\",\n        \"bungee\",\n        \"bungle\",\n        \"bunion\",\n        \"bunked\",\n        \"bunker\",\n        \"bunted\",\n        \"buoyed\",\n        \"burble\",\n        \"burbly\",\n        \"burden\",\n        \"bureau\",\n        \"burger\",\n        \"burghs\",\n        \"burgle\",\n        \"burial\",\n        \"buried\",\n        \"buries\",\n        \"burlap\",\n        \"burled\",\n        \"burler\",\n        \"burned\",\n        \"burner\",\n        \"burnet\",\n        \"burped\",\n        \"burqas\",\n        \"burred\",\n        \"burros\",\n        \"burrow\",\n        \"bursae\",\n        \"bursal\",\n        \"bursar\",\n        \"bursas\",\n        \"bursts\",\n        \"burton\",\n        \"busboy\",\n        \"bushed\",\n        \"bushel\",\n        \"bushes\",\n        \"busied\",\n        \"busier\",\n        \"busies\",\n        \"busily\",\n        \"busing\",\n        \"busked\",\n        \"busker\",\n        \"buskin\",\n        \"bussed\",\n        \"busses\",\n        \"busted\",\n        \"buster\",\n        \"bustle\",\n        \"busway\",\n        \"butane\",\n        \"butene\",\n        \"butler\",\n        \"butted\",\n        \"butter\",\n        \"buttes\",\n        \"button\",\n        \"butyne\",\n        \"buyers\",\n        \"buying\",\n        \"buyoff\",\n        \"buyout\",\n        \"buzzed\",\n        \"buzzer\",\n        \"buzzes\",\n        \"bygone\",\n        \"bylaws\",\n        \"byline\",\n        \"bypass\",\n        \"bypath\",\n        \"byplay\",\n        \"byroad\",\n        \"byssal\",\n        \"byssin\",\n        \"byssus\",\n        \"byways\",\n        \"byword\",\n        \"cabala\",\n        \"cabals\",\n        \"cabbal\",\n        \"cabbed\",\n        \"cabins\",\n        \"cabled\",\n        \"cabler\",\n        \"cables\",\n        \"cacaos\",\n        \"cached\",\n        \"cacher\",\n        \"caches\",\n        \"cachet\",\n        \"cachou\",\n        \"cackle\",\n        \"cackly\",\n        \"cactus\",\n        \"caddie\",\n        \"cadets\",\n        \"caecal\",\n        \"caecum\",\n        \"caeoma\",\n        \"caesar\",\n        \"caftan\",\n        \"cagier\",\n        \"cagily\",\n        \"caging\",\n        \"cahoot\",\n        \"caiman\",\n        \"cairns\",\n        \"cajole\",\n        \"cakier\",\n        \"caking\",\n        \"calami\",\n        \"calces\",\n        \"calico\",\n        \"califs\",\n        \"caliph\",\n        \"callas\",\n        \"called\",\n        \"caller\",\n        \"callow\",\n        \"callus\",\n        \"calmed\",\n        \"calmer\",\n        \"calmly\",\n        \"calque\",\n        \"calved\",\n        \"calves\",\n        \"calxes\",\n        \"camber\",\n        \"camels\",\n        \"cameos\",\n        \"camera\",\n        \"camped\",\n        \"camper\",\n        \"campus\",\n        \"canals\",\n        \"canape\",\n        \"canard\",\n        \"canary\",\n        \"cancan\",\n        \"cancel\",\n        \"cancer\",\n        \"candid\",\n        \"candle\",\n        \"candor\",\n        \"caners\",\n        \"canids\",\n        \"canine\",\n        \"caning\",\n        \"canker\",\n        \"canned\",\n        \"cannon\",\n        \"cannot\",\n        \"canoed\",\n        \"canoer\",\n        \"canoes\",\n        \"canola\",\n        \"canons\",\n        \"canopy\",\n        \"canted\",\n        \"canter\",\n        \"cantle\",\n        \"canton\",\n        \"cantor\",\n        \"canula\",\n        \"canvas\",\n        \"canyon\",\n        \"capers\",\n        \"capite\",\n        \"caplet\",\n        \"capons\",\n        \"capped\",\n        \"capper\",\n        \"capric\",\n        \"capris\",\n        \"capsid\",\n        \"captor\",\n        \"caract\",\n        \"carafe\",\n        \"carats\",\n        \"carbon\",\n        \"carboy\",\n        \"carded\",\n        \"carder\",\n        \"cardia\",\n        \"careen\",\n        \"career\",\n        \"carers\",\n        \"caress\",\n        \"carets\",\n        \"cargos\",\n        \"carhop\",\n        \"caries\",\n        \"carina\",\n        \"caring\",\n        \"carmen\",\n        \"carnal\",\n        \"carnyx\",\n        \"carobs\",\n        \"carols\",\n        \"carpal\",\n        \"carped\",\n        \"carpel\",\n        \"carper\",\n        \"carpet\",\n        \"carpus\",\n        \"carrot\",\n        \"carted\",\n        \"cartel\",\n        \"carter\",\n        \"carton\",\n        \"carved\",\n        \"carver\",\n        \"carves\",\n        \"caseic\",\n        \"casein\",\n        \"cashed\",\n        \"casher\",\n        \"cashes\",\n        \"cashew\",\n        \"casing\",\n        \"casino\",\n        \"casked\",\n        \"casket\",\n        \"casson\",\n        \"casted\",\n        \"caster\",\n        \"castes\",\n        \"castle\",\n        \"castor\",\n        \"casual\",\n        \"catchy\",\n        \"caters\",\n        \"catgut\",\n        \"cation\",\n        \"catkin\",\n        \"catnap\",\n        \"catnip\",\n        \"catsup\",\n        \"catted\",\n        \"cattle\",\n        \"caucus\",\n        \"caudal\",\n        \"caught\",\n        \"caulis\",\n        \"caulks\",\n        \"causal\",\n        \"caused\",\n        \"causer\",\n        \"causes\",\n        \"cauter\",\n        \"caveat\",\n        \"cavern\",\n        \"cavers\",\n        \"caviar\",\n        \"cavils\",\n        \"caving\",\n        \"cavity\",\n        \"cavort\",\n        \"cawing\",\n        \"cayman\",\n        \"ceased\",\n        \"ceases\",\n        \"cebids\",\n        \"cedars\",\n        \"ceding\",\n        \"celery\",\n        \"celiac\",\n        \"cellar\",\n        \"celled\",\n        \"cellos\",\n        \"celtic\",\n        \"cement\",\n        \"cenote\",\n        \"censer\",\n        \"censor\",\n        \"census\",\n        \"center\",\n        \"centre\",\n        \"cephem\",\n        \"cerate\",\n        \"cereal\",\n        \"cering\",\n        \"cerise\",\n        \"cerium\",\n        \"ceroid\",\n        \"cervid\",\n        \"cervix\",\n        \"cesium\",\n        \"chafed\",\n        \"chafer\",\n        \"chafes\",\n        \"chaffs\",\n        \"chaffy\",\n        \"chains\",\n        \"chairs\",\n        \"chaise\",\n        \"chalet\",\n        \"chalks\",\n        \"chalky\",\n        \"champs\",\n        \"chance\",\n        \"chancy\",\n        \"change\",\n        \"chants\",\n        \"chanty\",\n        \"chapel\",\n        \"chappy\",\n        \"chards\",\n        \"charge\",\n        \"charms\",\n        \"charts\",\n        \"chased\",\n        \"chaser\",\n        \"chases\",\n        \"chasms\",\n        \"chaste\",\n        \"chatty\",\n        \"chaunt\",\n        \"cheapo\",\n        \"cheats\",\n        \"checks\",\n        \"cheeks\",\n        \"cheeky\",\n        \"cheeps\",\n        \"cheers\",\n        \"cheery\",\n        \"cheese\",\n        \"cheesy\",\n        \"chelae\",\n        \"chemic\",\n        \"cheque\",\n        \"cherry\",\n        \"cherts\",\n        \"cherty\",\n        \"cherub\",\n        \"chests\",\n        \"chesty\",\n        \"chewed\",\n        \"chewer\",\n        \"chicks\",\n        \"chided\",\n        \"chides\",\n        \"chiefs\",\n        \"childs\",\n        \"chilis\",\n        \"chilli\",\n        \"chills\",\n        \"chilly\",\n        \"chimed\",\n        \"chimer\",\n        \"chimes\",\n        \"chimps\",\n        \"chinas\",\n        \"chinks\",\n        \"chintz\",\n        \"chippy\",\n        \"chiral\",\n        \"chirps\",\n        \"chirpy\",\n        \"chisel\",\n        \"chitin\",\n        \"chives\",\n        \"chocks\",\n        \"choice\",\n        \"choicy\",\n        \"choirs\",\n        \"choked\",\n        \"choker\",\n        \"chokes\",\n        \"chomps\",\n        \"choose\",\n        \"choosy\",\n        \"choppy\",\n        \"choral\",\n        \"chords\",\n        \"chorea\",\n        \"chored\",\n        \"chores\",\n        \"chorus\",\n        \"chosen\",\n        \"chouse\",\n        \"chroma\",\n        \"chrome\",\n        \"chubby\",\n        \"chucks\",\n        \"chuffs\",\n        \"chuffy\",\n        \"chummy\",\n        \"chumps\",\n        \"chunks\",\n        \"chunky\",\n        \"church\",\n        \"churls\",\n        \"churly\",\n        \"churns\",\n        \"chutes\",\n        \"chymic\",\n        \"cicada\",\n        \"cicala\",\n        \"ciders\",\n        \"cigars\",\n        \"cilium\",\n        \"cinder\",\n        \"cinema\",\n        \"cipher\",\n        \"circle\",\n        \"circus\",\n        \"cirque\",\n        \"cirral\",\n        \"cirrus\",\n        \"ciscos\",\n        \"citers\",\n        \"cither\",\n        \"cities\",\n        \"citify\",\n        \"citing\",\n        \"citric\",\n        \"citron\",\n        \"citrus\",\n        \"civets\",\n        \"civics\",\n        \"clacks\",\n        \"clades\",\n        \"claggy\",\n        \"claims\",\n        \"clammy\",\n        \"clamor\",\n        \"clamps\",\n        \"clangs\",\n        \"clanks\",\n        \"clanky\",\n        \"claret\",\n        \"clasps\",\n        \"classy\",\n        \"clause\",\n        \"claves\",\n        \"clawed\",\n        \"clawer\",\n        \"clayey\",\n        \"cleans\",\n        \"clears\",\n        \"cleats\",\n        \"cleave\",\n        \"clefts\",\n        \"clench\",\n        \"cleome\",\n        \"clergy\",\n        \"cleric\",\n        \"clerks\",\n        \"clever\",\n        \"cliche\",\n        \"clicks\",\n        \"client\",\n        \"cliffs\",\n        \"climax\",\n        \"climbs\",\n        \"climes\",\n        \"clinal\",\n        \"clinch\",\n        \"clings\",\n        \"clingy\",\n        \"clinic\",\n        \"clinks\",\n        \"clique\",\n        \"clitic\",\n        \"cloaca\",\n        \"cloaks\",\n        \"cloche\",\n        \"clocks\",\n        \"cloddy\",\n        \"clodly\",\n        \"cloggy\",\n        \"clomps\",\n        \"clonal\",\n        \"cloned\",\n        \"cloner\",\n        \"clones\",\n        \"clonic\",\n        \"clonks\",\n        \"closed\",\n        \"closer\",\n        \"closes\",\n        \"closet\",\n        \"clothe\",\n        \"cloths\",\n        \"clotty\",\n        \"clouds\",\n        \"cloudy\",\n        \"clouts\",\n        \"cloven\",\n        \"clover\",\n        \"cloves\",\n        \"clowns\",\n        \"cloyed\",\n        \"cloyer\",\n        \"clubby\",\n        \"clucks\",\n        \"clucky\",\n        \"clumps\",\n        \"clumpy\",\n        \"clumsy\",\n        \"clunks\",\n        \"clunky\",\n        \"clutch\",\n        \"cnidae\",\n        \"cnidas\",\n        \"coacts\",\n        \"coaked\",\n        \"coaker\",\n        \"coaled\",\n        \"coaler\",\n        \"coarbs\",\n        \"coarct\",\n        \"coarse\",\n        \"coasts\",\n        \"coated\",\n        \"coaxed\",\n        \"coaxer\",\n        \"coaxes\",\n        \"cobalt\",\n        \"cobbed\",\n        \"cobble\",\n        \"cobnut\",\n        \"cobras\",\n        \"cobweb\",\n        \"coccus\",\n        \"coccyx\",\n        \"cockal\",\n        \"cocked\",\n        \"cocket\",\n        \"cockle\",\n        \"cocoas\",\n        \"cocoon\",\n        \"codded\",\n        \"coddle\",\n        \"coders\",\n        \"codger\",\n        \"codify\",\n        \"coding\",\n        \"codons\",\n        \"coedit\",\n        \"coelom\",\n        \"coerce\",\n        \"coffee\",\n        \"coffer\",\n        \"coffin\",\n        \"coffle\",\n        \"cogent\",\n        \"cogged\",\n        \"cognac\",\n        \"coheir\",\n        \"cohere\",\n        \"cohort\",\n        \"cohosh\",\n        \"coiled\",\n        \"coined\",\n        \"coiner\",\n        \"coitus\",\n        \"cojoin\",\n        \"coking\",\n        \"colder\",\n        \"coldly\",\n        \"coleus\",\n        \"collar\",\n        \"collie\",\n        \"colons\",\n        \"colony\",\n        \"colors\",\n        \"colour\",\n        \"colter\",\n        \"column\",\n        \"combat\",\n        \"combed\",\n        \"comber\",\n        \"combos\",\n        \"comedo\",\n        \"comedy\",\n        \"comely\",\n        \"comers\",\n        \"comets\",\n        \"comfit\",\n        \"comics\",\n        \"coming\",\n        \"commas\",\n        \"commit\",\n        \"common\",\n        \"compel\",\n        \"comply\",\n        \"conchs\",\n        \"concur\",\n        \"condor\",\n        \"condos\",\n        \"confab\",\n        \"confer\",\n        \"confit\",\n        \"confix\",\n        \"conics\",\n        \"coning\",\n        \"conked\",\n        \"conker\",\n        \"conman\",\n        \"conned\",\n        \"consol\",\n        \"consul\",\n        \"convex\",\n        \"convey\",\n        \"convoy\",\n        \"cooing\",\n        \"cooked\",\n        \"cooker\",\n        \"cookie\",\n        \"cooled\",\n        \"cooler\",\n        \"coolly\",\n        \"cooped\",\n        \"coopts\",\n        \"cootie\",\n        \"coowns\",\n        \"copied\",\n        \"copier\",\n        \"copies\",\n        \"coping\",\n        \"copout\",\n        \"copped\",\n        \"copper\",\n        \"copses\",\n        \"copter\",\n        \"copula\",\n        \"corals\",\n        \"corand\",\n        \"corded\",\n        \"cordon\",\n        \"corers\",\n        \"coring\",\n        \"corked\",\n        \"corker\",\n        \"cornea\",\n        \"corned\",\n        \"corner\",\n        \"cornet\",\n        \"cornua\",\n        \"cornum\",\n        \"corona\",\n        \"corpse\",\n        \"corpus\",\n        \"corral\",\n        \"corset\",\n        \"cortex\",\n        \"corymb\",\n        \"cosied\",\n        \"cosier\",\n        \"cosies\",\n        \"cosign\",\n        \"cosily\",\n        \"cosine\",\n        \"cosmic\",\n        \"cosmos\",\n        \"costal\",\n        \"costar\",\n        \"costly\",\n        \"cotter\",\n        \"cotton\",\n        \"cotyla\",\n        \"cotyle\",\n        \"cotype\",\n        \"cougar\",\n        \"coughs\",\n        \"coulee\",\n        \"counts\",\n        \"county\",\n        \"couped\",\n        \"coupes\",\n        \"couple\",\n        \"coupon\",\n        \"course\",\n        \"courts\",\n        \"cousin\",\n        \"covary\",\n        \"covens\",\n        \"covers\",\n        \"covert\",\n        \"covets\",\n        \"covine\",\n        \"coward\",\n        \"cowboy\",\n        \"cowers\",\n        \"cowpie\",\n        \"cowpox\",\n        \"coydog\",\n        \"coyest\",\n        \"coyote\",\n        \"cozeys\",\n        \"cozied\",\n        \"cozier\",\n        \"cozies\",\n        \"cozily\",\n        \"crabby\",\n        \"cracks\",\n        \"cradle\",\n        \"crafts\",\n        \"crafty\",\n        \"craggy\",\n        \"craker\",\n        \"crakes\",\n        \"cramps\",\n        \"crampy\",\n        \"craned\",\n        \"cranes\",\n        \"cranks\",\n        \"cranky\",\n        \"crappy\",\n        \"crated\",\n        \"crater\",\n        \"crates\",\n        \"craton\",\n        \"cravat\",\n        \"craved\",\n        \"craver\",\n        \"craves\",\n        \"crawls\",\n        \"crawly\",\n        \"crayon\",\n        \"crazed\",\n        \"crazes\",\n        \"creaks\",\n        \"creaky\",\n        \"creams\",\n        \"creamy\",\n        \"crease\",\n        \"creasy\",\n        \"create\",\n        \"creche\",\n        \"credit\",\n        \"creeds\",\n        \"creeks\",\n        \"creeps\",\n        \"creepy\",\n        \"crepes\",\n        \"cresol\",\n        \"cressy\",\n        \"crests\",\n        \"cresyl\",\n        \"cretin\",\n        \"crewed\",\n        \"crewel\",\n        \"cricks\",\n        \"criers\",\n        \"crimes\",\n        \"crimps\",\n        \"crimpy\",\n        \"cringe\",\n        \"crises\",\n        \"crisis\",\n        \"crisps\",\n        \"crispy\",\n        \"crista\",\n        \"critic\",\n        \"croaks\",\n        \"croaky\",\n        \"crocks\",\n        \"crocus\",\n        \"crofts\",\n        \"crones\",\n        \"crooks\",\n        \"croons\",\n        \"crores\",\n        \"crotch\",\n        \"crouch\",\n        \"croupy\",\n        \"crowds\",\n        \"crowed\",\n        \"crowns\",\n        \"cruddy\",\n        \"cruder\",\n        \"cruels\",\n        \"cruets\",\n        \"crufts\",\n        \"cruise\",\n        \"crumbs\",\n        \"crumby\",\n        \"crummy\",\n        \"crunch\",\n        \"crurae\",\n        \"crusts\",\n        \"crusty\",\n        \"crutch\",\n        \"cruxes\",\n        \"crwths\",\n        \"crying\",\n        \"crypts\",\n        \"cuatro\",\n        \"cubage\",\n        \"cubane\",\n        \"cubers\",\n        \"cubify\",\n        \"cubing\",\n        \"cubism\",\n        \"cubist\",\n        \"cubits\",\n        \"cuboid\",\n        \"cuckoo\",\n        \"cuddle\",\n        \"cuddly\",\n        \"cudgel\",\n        \"cuffed\",\n        \"culled\",\n        \"cultic\",\n        \"cultus\",\n        \"cumene\",\n        \"cumuli\",\n        \"cupful\",\n        \"cupids\",\n        \"cupola\",\n        \"cupped\",\n        \"cupric\",\n        \"cupula\",\n        \"cupule\",\n        \"curare\",\n        \"curate\",\n        \"curbed\",\n        \"curcin\",\n        \"curded\",\n        \"curdle\",\n        \"curers\",\n        \"curfew\",\n        \"curiae\",\n        \"curial\",\n        \"curing\",\n        \"curios\",\n        \"curium\",\n        \"curled\",\n        \"curler\",\n        \"curlew\",\n        \"cursed\",\n        \"curser\",\n        \"curses\",\n        \"cursor\",\n        \"curtly\",\n        \"curtsy\",\n        \"curved\",\n        \"curves\",\n        \"cuscus\",\n        \"cusped\",\n        \"cuspid\",\n        \"cussed\",\n        \"cusser\",\n        \"cusses\",\n        \"custom\",\n        \"cutely\",\n        \"cutest\",\n        \"cutesy\",\n        \"cuteys\",\n        \"cutins\",\n        \"cutlet\",\n        \"cutoff\",\n        \"cutout\",\n        \"cutter\",\n        \"cuttle\",\n        \"cutups\",\n        \"cyanic\",\n        \"cyanid\",\n        \"cyanin\",\n        \"cyborg\",\n        \"cycled\",\n        \"cycler\",\n        \"cycles\",\n        \"cyclic\",\n        \"cyclin\",\n        \"cygnet\",\n        \"cymbal\",\n        \"cyneol\",\n        \"cynics\",\n        \"cypher\",\n        \"cyprus\",\n        \"cystic\",\n        \"cytoma\",\n        \"dabbed\",\n        \"dabber\",\n        \"dabble\",\n        \"dacite\",\n        \"dacron\",\n        \"dactyl\",\n        \"dadoes\",\n        \"daemon\",\n        \"dafter\",\n        \"daftly\",\n        \"dagger\",\n        \"dahlia\",\n        \"dainty\",\n        \"daises\",\n        \"dalasi\",\n        \"daleth\",\n        \"dalton\",\n        \"damage\",\n        \"damask\",\n        \"dammed\",\n        \"damned\",\n        \"damner\",\n        \"damped\",\n        \"dampen\",\n        \"damper\",\n        \"damply\",\n        \"damsel\",\n        \"danced\",\n        \"dancer\",\n        \"dances\",\n        \"dander\",\n        \"dandle\",\n        \"danger\",\n        \"dangle\",\n        \"dangly\",\n        \"danish\",\n        \"danker\",\n        \"dankly\",\n        \"dapper\",\n        \"dapple\",\n        \"darers\",\n        \"daring\",\n        \"darken\",\n        \"darker\",\n        \"darkly\",\n        \"darned\",\n        \"darner\",\n        \"darted\",\n        \"darter\",\n        \"dashed\",\n        \"dasher\",\n        \"dashes\",\n        \"daters\",\n        \"dating\",\n        \"dative\",\n        \"datums\",\n        \"daubed\",\n        \"dauber\",\n        \"daubes\",\n        \"daunts\",\n        \"davits\",\n        \"dawdle\",\n        \"dawned\",\n        \"daybed\",\n        \"dayfly\",\n        \"dazing\",\n        \"dazzle\",\n        \"deacon\",\n        \"deaden\",\n        \"deader\",\n        \"deadly\",\n        \"deafen\",\n        \"deafer\",\n        \"deafly\",\n        \"deairs\",\n        \"dealer\",\n        \"dearer\",\n        \"dearie\",\n        \"dearly\",\n        \"dearth\",\n        \"deaths\",\n        \"deathy\",\n        \"deaved\",\n        \"deaves\",\n        \"debark\",\n        \"debars\",\n        \"debase\",\n        \"debate\",\n        \"debeak\",\n        \"debits\",\n        \"debone\",\n        \"debris\",\n        \"debtor\",\n        \"debuds\",\n        \"debugs\",\n        \"debunk\",\n        \"deburr\",\n        \"debuts\",\n        \"decade\",\n        \"decals\",\n        \"decamp\",\n        \"decane\",\n        \"decant\",\n        \"decaps\",\n        \"decarb\",\n        \"decare\",\n        \"decart\",\n        \"decays\",\n        \"deceit\",\n        \"decene\",\n        \"decent\",\n        \"decern\",\n        \"decide\",\n        \"decile\",\n        \"decked\",\n        \"deckel\",\n        \"decker\",\n        \"deckle\",\n        \"declaw\",\n        \"decoct\",\n        \"decode\",\n        \"decoke\",\n        \"decors\",\n        \"decoys\",\n        \"decree\",\n        \"decrew\",\n        \"decury\",\n        \"decyne\",\n        \"deduce\",\n        \"deduct\",\n        \"deeded\",\n        \"deejay\",\n        \"deemed\",\n        \"deepen\",\n        \"deeper\",\n        \"deeply\",\n        \"deface\",\n        \"defame\",\n        \"defang\",\n        \"defats\",\n        \"defeat\",\n        \"defect\",\n        \"defend\",\n        \"defers\",\n        \"defied\",\n        \"defier\",\n        \"defies\",\n        \"defile\",\n        \"define\",\n        \"deflea\",\n        \"deflex\",\n        \"defoam\",\n        \"defogs\",\n        \"deform\",\n        \"defoul\",\n        \"defrag\",\n        \"defray\",\n        \"defter\",\n        \"deftly\",\n        \"defuel\",\n        \"defund\",\n        \"defuse\",\n        \"defuze\",\n        \"degage\",\n        \"degerm\",\n        \"degree\",\n        \"degums\",\n        \"degunk\",\n        \"degust\",\n        \"deguts\",\n        \"dehair\",\n        \"dehorn\",\n        \"dehort\",\n        \"dehusk\",\n        \"deiced\",\n        \"deicer\",\n        \"deices\",\n        \"deific\",\n        \"deinks\",\n        \"deisms\",\n        \"deists\",\n        \"deject\",\n        \"delate\",\n        \"delays\",\n        \"delead\",\n        \"delete\",\n        \"delfts\",\n        \"delict\",\n        \"delimb\",\n        \"delime\",\n        \"delink\",\n        \"delint\",\n        \"delist\",\n        \"delphi\",\n        \"deltas\",\n        \"deltic\",\n        \"delude\",\n        \"deluge\",\n        \"deluxe\",\n        \"delved\",\n        \"delver\",\n        \"delves\",\n        \"demand\",\n        \"demaps\",\n        \"demark\",\n        \"demast\",\n        \"demate\",\n        \"demean\",\n        \"dement\",\n        \"demies\",\n        \"demise\",\n        \"demist\",\n        \"demits\",\n        \"demobs\",\n        \"demoed\",\n        \"demons\",\n        \"demote\",\n        \"demure\",\n        \"demurs\",\n        \"denars\",\n        \"denary\",\n        \"dengue\",\n        \"denial\",\n        \"denied\",\n        \"denier\",\n        \"denies\",\n        \"denims\",\n        \"denned\",\n        \"denote\",\n        \"denser\",\n        \"dental\",\n        \"dented\",\n        \"dentil\",\n        \"dentin\",\n        \"denude\",\n        \"deodar\",\n        \"depart\",\n        \"depend\",\n        \"depict\",\n        \"deploy\",\n        \"depone\",\n        \"deport\",\n        \"depose\",\n        \"depots\",\n        \"depths\",\n        \"depute\",\n        \"deputy\",\n        \"derail\",\n        \"derays\",\n        \"deride\",\n        \"derive\",\n        \"dermal\",\n        \"dermic\",\n        \"dermis\",\n        \"derris\",\n        \"desalt\",\n        \"desand\",\n        \"descry\",\n        \"deseed\",\n        \"desert\",\n        \"design\",\n        \"desilt\",\n        \"desire\",\n        \"desist\",\n        \"desman\",\n        \"desmid\",\n        \"despot\",\n        \"detach\",\n        \"detail\",\n        \"detain\",\n        \"detect\",\n        \"detent\",\n        \"deters\",\n        \"detest\",\n        \"detick\",\n        \"detort\",\n        \"detour\",\n        \"detube\",\n        \"detune\",\n        \"detusk\",\n        \"deuced\",\n        \"deuces\",\n        \"devein\",\n        \"devels\",\n        \"devest\",\n        \"device\",\n        \"devils\",\n        \"devise\",\n        \"devoid\",\n        \"devote\",\n        \"devour\",\n        \"devout\",\n        \"dewans\",\n        \"dewier\",\n        \"dewily\",\n        \"dewire\",\n        \"dewlap\",\n        \"dewool\",\n        \"deworm\",\n        \"dexter\",\n        \"dextro\",\n        \"dezinc\",\n        \"dharma\",\n        \"dharna\",\n        \"dholes\",\n        \"dhotis\",\n        \"diacid\",\n        \"diadem\",\n        \"dialed\",\n        \"dialer\",\n        \"dialog\",\n        \"dialup\",\n        \"diaper\",\n        \"diarch\",\n        \"diatom\",\n        \"dibbed\",\n        \"dibber\",\n        \"dibble\",\n        \"dicers\",\n        \"dicier\",\n        \"dicing\",\n        \"dicker\",\n        \"dicots\",\n        \"dictum\",\n        \"dienes\",\n        \"diesel\",\n        \"dieses\",\n        \"diesis\",\n        \"dieted\",\n        \"dieter\",\n        \"dietic\",\n        \"differ\",\n        \"digest\",\n        \"digged\",\n        \"digger\",\n        \"digits\",\n        \"digram\",\n        \"digyny\",\n        \"diking\",\n        \"dilate\",\n        \"dilled\",\n        \"dilute\",\n        \"dimers\",\n        \"dimmed\",\n        \"dimmer\",\n        \"dimple\",\n        \"dimply\",\n        \"dimuon\",\n        \"dinars\",\n        \"diners\",\n        \"dinged\",\n        \"dinger\",\n        \"dinghy\",\n        \"dining\",\n        \"dinker\",\n        \"dinned\",\n        \"dinner\",\n        \"dinted\",\n        \"diodes\",\n        \"dioecy\",\n        \"dioxin\",\n        \"diplex\",\n        \"dipods\",\n        \"dipole\",\n        \"dipped\",\n        \"dipper\",\n        \"direct\",\n        \"direly\",\n        \"direst\",\n        \"dirges\",\n        \"dirham\",\n        \"disarm\",\n        \"disbar\",\n        \"discos\",\n        \"discus\",\n        \"dished\",\n        \"dishes\",\n        \"dismal\",\n        \"dismay\",\n        \"disown\",\n        \"dispel\",\n        \"dissed\",\n        \"disses\",\n        \"distal\",\n        \"disuse\",\n        \"dither\",\n        \"dittos\",\n        \"ditzes\",\n        \"divans\",\n        \"divers\",\n        \"divert\",\n        \"divest\",\n        \"divide\",\n        \"divine\",\n        \"diving\",\n        \"divots\",\n        \"diynal\",\n        \"diynes\",\n        \"djembe\",\n        \"djubed\",\n        \"doable\",\n        \"dobras\",\n        \"docile\",\n        \"docked\",\n        \"docken\",\n        \"docker\",\n        \"docket\",\n        \"doctor\",\n        \"dodder\",\n        \"doddle\",\n        \"dodged\",\n        \"dodger\",\n        \"dodges\",\n        \"dogday\",\n        \"dogear\",\n        \"dogfox\",\n        \"dogged\",\n        \"doggie\",\n        \"dogleg\",\n        \"dogmas\",\n        \"dognap\",\n        \"dogsat\",\n        \"dogsit\",\n        \"dogtag\",\n        \"doings\",\n        \"doling\",\n        \"dollar\",\n        \"dolled\",\n        \"dollop\",\n        \"dolmen\",\n        \"domain\",\n        \"doming\",\n        \"domino\",\n        \"donair\",\n        \"donate\",\n        \"donkey\",\n        \"donned\",\n        \"donors\",\n        \"donuts\",\n        \"doodad\",\n        \"doodle\",\n        \"doomed\",\n        \"doomer\",\n        \"doored\",\n        \"doozie\",\n        \"dopant\",\n        \"dopers\",\n        \"dopier\",\n        \"doping\",\n        \"dorbug\",\n        \"dormer\",\n        \"dorsal\",\n        \"dorsum\",\n        \"dosage\",\n        \"dosing\",\n        \"dotage\",\n        \"dotard\",\n        \"dotcom\",\n        \"doters\",\n        \"dotier\",\n        \"doting\",\n        \"dotish\",\n        \"dotted\",\n        \"dotter\",\n        \"dottle\",\n        \"double\",\n        \"doubly\",\n        \"doubts\",\n        \"douche\",\n        \"doughs\",\n        \"doughy\",\n        \"doused\",\n        \"douser\",\n        \"douses\",\n        \"dovier\",\n        \"dovish\",\n        \"dowels\",\n        \"dowers\",\n        \"dowery\",\n        \"downed\",\n        \"downer\",\n        \"dowsed\",\n        \"dowser\",\n        \"dowses\",\n        \"dowset\",\n        \"doxies\",\n        \"doxing\",\n        \"doxxed\",\n        \"doxxes\",\n        \"doyens\",\n        \"dozens\",\n        \"dozers\",\n        \"dozier\",\n        \"dozily\",\n        \"dozing\",\n        \"drabby\",\n        \"drably\",\n        \"drachm\",\n        \"drafts\",\n        \"drafty\",\n        \"draggy\",\n        \"dragon\",\n        \"drains\",\n        \"drakes\",\n        \"dramas\",\n        \"draped\",\n        \"draper\",\n        \"drapes\",\n        \"drawer\",\n        \"drawls\",\n        \"drayed\",\n        \"drazel\",\n        \"dreads\",\n        \"dreams\",\n        \"dreamt\",\n        \"dreamy\",\n        \"dreary\",\n        \"dredge\",\n        \"dreggy\",\n        \"drench\",\n        \"dressy\",\n        \"driers\",\n        \"driest\",\n        \"drifts\",\n        \"drills\",\n        \"drinks\",\n        \"drippy\",\n        \"drivel\",\n        \"driven\",\n        \"driver\",\n        \"drives\",\n        \"droids\",\n        \"drolly\",\n        \"droned\",\n        \"drones\",\n        \"drools\",\n        \"droops\",\n        \"droopy\",\n        \"dropsy\",\n        \"droves\",\n        \"drowns\",\n        \"drowse\",\n        \"drowsy\",\n        \"drudge\",\n        \"druggy\",\n        \"druids\",\n        \"drunks\",\n        \"drupes\",\n        \"drusen\",\n        \"dryads\",\n        \"dryers\",\n        \"drying\",\n        \"dryish\",\n        \"dryrot\",\n        \"dualin\",\n        \"dually\",\n        \"dubbed\",\n        \"dubber\",\n        \"dubium\",\n        \"ducats\",\n        \"ducked\",\n        \"ducker\",\n        \"ductal\",\n        \"ducted\",\n        \"ductor\",\n        \"dueled\",\n        \"dueler\",\n        \"duffel\",\n        \"duffle\",\n        \"dugout\",\n        \"dulced\",\n        \"dulces\",\n        \"dulcet\",\n        \"dulled\",\n        \"duller\",\n        \"dumbed\",\n        \"dumber\",\n        \"dumbly\",\n        \"dumdum\",\n        \"dumped\",\n        \"dumper\",\n        \"dunces\",\n        \"dunged\",\n        \"dunite\",\n        \"dunked\",\n        \"duopod\",\n        \"dupers\",\n        \"duping\",\n        \"duplex\",\n        \"duress\",\n        \"durian\",\n        \"during\",\n        \"dusted\",\n        \"duster\",\n        \"dustup\",\n        \"dutars\",\n        \"duties\",\n        \"duvets\",\n        \"dwarfs\",\n        \"dweebs\",\n        \"dwells\",\n        \"dyadic\",\n        \"dyeing\",\n        \"dyking\",\n        \"dynamo\",\n        \"dynein\",\n        \"eagles\",\n        \"eaglet\",\n        \"earbud\",\n        \"earful\",\n        \"earned\",\n        \"earner\",\n        \"eartag\",\n        \"earths\",\n        \"earthy\",\n        \"earwax\",\n        \"earwig\",\n        \"easels\",\n        \"easers\",\n        \"easier\",\n        \"easily\",\n        \"easing\",\n        \"easter\",\n        \"eaters\",\n        \"eatery\",\n        \"eating\",\n        \"ebbing\",\n        \"ebooks\",\n        \"ebriid\",\n        \"echoed\",\n        \"echoes\",\n        \"echoey\",\n        \"eclair\",\n        \"ectopy\",\n        \"ectype\",\n        \"eczema\",\n        \"eddied\",\n        \"eddies\",\n        \"edemas\",\n        \"edemic\",\n        \"edgers\",\n        \"edgier\",\n        \"edgily\",\n        \"edging\",\n        \"edible\",\n        \"edicts\",\n        \"edited\",\n        \"editor\",\n        \"educed\",\n        \"educes\",\n        \"educts\",\n        \"eeling\",\n        \"eerier\",\n        \"eerily\",\n        \"efface\",\n        \"effect\",\n        \"effigy\",\n        \"effing\",\n        \"efflux\",\n        \"effort\",\n        \"effuse\",\n        \"eggars\",\n        \"eggcup\",\n        \"eggers\",\n        \"eggier\",\n        \"egging\",\n        \"eggnog\",\n        \"egoism\",\n        \"egoist\",\n        \"egress\",\n        \"egrets\",\n        \"eiders\",\n        \"eighth\",\n        \"eights\",\n        \"eighty\",\n        \"either\",\n        \"ejecta\",\n        \"ejects\",\n        \"elapse\",\n        \"elated\",\n        \"elater\",\n        \"elates\",\n        \"elbows\",\n        \"elders\",\n        \"eldest\",\n        \"elects\",\n        \"elegit\",\n        \"eleven\",\n        \"elfish\",\n        \"elicit\",\n        \"elided\",\n        \"elides\",\n        \"elites\",\n        \"elixed\",\n        \"elixes\",\n        \"elixir\",\n        \"elodea\",\n        \"eloges\",\n        \"elogia\",\n        \"eloign\",\n        \"eloins\",\n        \"eloped\",\n        \"eloper\",\n        \"elopes\",\n        \"eluant\",\n        \"eluate\",\n        \"eluded\",\n        \"eluder\",\n        \"eludes\",\n        \"eluent\",\n        \"eluted\",\n        \"elutes\",\n        \"elutor\",\n        \"eluvia\",\n        \"elvish\",\n        \"emails\",\n        \"embalm\",\n        \"embank\",\n        \"embark\",\n        \"embase\",\n        \"embeds\",\n        \"embers\",\n        \"emblem\",\n        \"embody\",\n        \"emboli\",\n        \"emboss\",\n        \"embryo\",\n        \"embyro\",\n        \"emceed\",\n        \"emcees\",\n        \"emends\",\n        \"emerge\",\n        \"emerse\",\n        \"emesis\",\n        \"emetic\",\n        \"emodin\",\n        \"emojis\",\n        \"emoted\",\n        \"emoter\",\n        \"emotes\",\n        \"empire\",\n        \"employ\",\n        \"emulge\",\n        \"emusic\",\n        \"enable\",\n        \"enacts\",\n        \"enamel\",\n        \"enamor\",\n        \"encalm\",\n        \"encamp\",\n        \"encase\",\n        \"encode\",\n        \"encore\",\n        \"encyst\",\n        \"endear\",\n        \"enders\",\n        \"ending\",\n        \"endive\",\n        \"endows\",\n        \"endure\",\n        \"enemas\",\n        \"energy\",\n        \"enfant\",\n        \"enfold\",\n        //\"engage\",\n        \"engine\",\n        \"engulf\",\n        \"enigma\",\n        \"enjoin\",\n        \"enjoys\",\n        \"enlard\",\n        \"enlist\",\n        \"enlive\",\n        \"enlock\",\n        \"enmesh\",\n        \"enmity\",\n        \"enolic\",\n        \"enough\",\n        \"enrage\",\n        \"enrich\",\n        \"enrobe\",\n        \"enroll\",\n        \"enrols\",\n        \"enseal\",\n        \"ensear\",\n        \"ensign\",\n        \"ensoul\",\n        \"ensued\",\n        \"ensues\",\n        \"ensure\",\n        \"entail\",\n        \"enters\",\n        \"entice\",\n        \"entire\",\n        \"entity\",\n        \"entomb\",\n        \"entrap\",\n        \"entree\",\n        \"envied\",\n        \"envier\",\n        \"envies\",\n        \"envoys\",\n        \"enwrap\",\n        \"enynes\",\n        \"enzone\",\n        \"enzyme\",\n        \"eolian\",\n        \"eomyid\",\n        \"eosine\",\n        \"eparch\",\n        \"epilog\",\n        \"epimer\",\n        \"epipod\",\n        \"epochs\",\n        \"eponym\",\n        \"equals\",\n        \"equate\",\n        \"equids\",\n        \"equine\",\n        \"equips\",\n        \"equity\",\n        \"erased\",\n        \"eraser\",\n        \"erases\",\n        \"erbium\",\n        \"erects\",\n        \"ergons\",\n        \"ermine\",\n        \"eroded\",\n        \"erodes\",\n        \"erotic\",\n        \"errand\",\n        \"errant\",\n        \"errata\",\n        \"erring\",\n        \"errors\",\n        \"erucic\",\n        \"eructs\",\n        \"erupts\",\n        \"ervils\",\n        \"escape\",\n        \"escarp\",\n        \"eschar\",\n        \"eschew\",\n        \"escort\",\n        \"escrow\",\n        \"escudo\",\n        \"eskers\",\n        \"esprit\",\n        \"essays\",\n        \"estate\",\n        \"esteem\",\n        \"esters\",\n        \"estrum\",\n        \"estrus\",\n        \"etched\",\n        \"etcher\",\n        \"etches\",\n        \"ethane\",\n        \"ethene\",\n        \"ethers\",\n        \"ethics\",\n        \"ethnic\",\n        \"ethyls\",\n        \"ethyne\",\n        \"etymon\",\n        \"eulogy\",\n        \"euonym\",\n        \"eupnea\",\n        \"eureka\",\n        \"eutaxy\",\n        \"evaded\",\n        \"evader\",\n        \"evades\",\n        \"evened\",\n        \"evener\",\n        \"evenly\",\n        \"events\",\n        \"everts\",\n        \"evicts\",\n        \"eviler\",\n        \"evilly\",\n        \"evince\",\n        \"evited\",\n        \"evites\",\n        \"evoked\",\n        \"evoker\",\n        \"evokes\",\n        \"evolve\",\n        \"evulse\",\n        \"exabit\",\n        \"exacts\",\n        \"exalts\",\n        \"examen\",\n        \"exarch\",\n        \"exceed\",\n        \"excels\",\n        \"except\",\n        \"excess\",\n        \"excide\",\n        \"excise\",\n        \"excite\",\n        \"excuse\",\n        \"excyst\",\n        \"exempt\",\n        \"exequy\",\n        \"exerts\",\n        \"exhale\",\n        \"exhort\",\n        \"exhume\",\n        \"exiled\",\n        \"exiles\",\n        \"exilic\",\n        \"exists\",\n        \"exited\",\n        \"exodus\",\n        \"exogen\",\n        \"exonym\",\n        \"exopod\",\n        \"exotic\",\n        \"expand\",\n        \"expats\",\n        \"expect\",\n        \"expels\",\n        \"expend\",\n        \"expert\",\n        \"expire\",\n        \"expiry\",\n        \"export\",\n        \"expose\",\n        \"expugn\",\n        \"exsect\",\n        \"extant\",\n        \"extend\",\n        \"extent\",\n        \"extirp\",\n        \"extoll\",\n        \"extols\",\n        \"extort\",\n        \"extras\",\n        \"exuded\",\n        \"exudes\",\n        \"exults\",\n        \"exwife\",\n        \"eyecup\",\n        \"eyeful\",\n        \"eyeing\",\n        \"eyelet\",\n        \"eyelid\",\n        \"eyepit\",\n        \"fabled\",\n        \"fables\",\n        \"fabric\",\n        \"facade\",\n        \"facets\",\n        \"facial\",\n        \"facies\",\n        \"facing\",\n        \"factor\",\n        \"fadein\",\n        \"fading\",\n        \"faecal\",\n        \"faeces\",\n        \"faerie\",\n        \"failed\",\n        \"fainer\",\n        \"faints\",\n        \"fairer\",\n        \"fairly\",\n        \"faiths\",\n        \"fajita\",\n        \"fakers\",\n        \"faking\",\n        \"falcon\",\n        \"fallen\",\n        \"faller\",\n        \"fallow\",\n        \"falser\",\n        \"falter\",\n        \"family\",\n        \"famine\",\n        \"famish\",\n        \"famous\",\n        \"fanged\",\n        \"fanjet\",\n        \"fankle\",\n        \"fanned\",\n        \"fanout\",\n        \"farads\",\n        \"farces\",\n        \"fardel\",\n        \"faring\",\n        \"farmed\",\n        \"farmer\",\n        \"faroff\",\n        \"farout\",\n        \"fascia\",\n        \"fasted\",\n        \"fasten\",\n        \"faster\",\n        \"father\",\n        \"fathom\",\n        \"fatted\",\n        \"fatten\",\n        \"fatter\",\n        \"fatwas\",\n        \"faucal\",\n        \"faucet\",\n        \"faughs\",\n        \"faults\",\n        \"faulty\",\n        \"faunae\",\n        \"faunal\",\n        \"faunas\",\n        \"favors\",\n        \"favour\",\n        \"fawned\",\n        \"fawner\",\n        \"faxing\",\n        \"fazing\",\n        \"fealty\",\n        \"feared\",\n        \"fearer\",\n        \"feasts\",\n        \"feazed\",\n        \"feazes\",\n        \"fecund\",\n        \"fedora\",\n        \"feeble\",\n        \"feebly\",\n        \"feeder\",\n        \"feeler\",\n        \"feesed\",\n        \"feeses\",\n        \"feezed\",\n        \"feezes\",\n        \"feigns\",\n        \"feisty\",\n        \"feline\",\n        \"fellas\",\n        \"felled\",\n        \"feller\",\n        \"fellow\",\n        \"felons\",\n        \"felony\",\n        \"felsic\",\n        \"felted\",\n        \"female\",\n        \"femmes\",\n        \"femurs\",\n        \"fenced\",\n        \"fencer\",\n        \"fences\",\n        \"fended\",\n        \"fender\",\n        \"fennel\",\n        \"ferret\",\n        \"ferric\",\n        \"ferris\",\n        \"fervid\",\n        \"fervor\",\n        \"fescue\",\n        \"fester\",\n        \"fetish\",\n        \"fetors\",\n        \"fetter\",\n        \"feudal\",\n        \"feuded\",\n        \"fevers\",\n        \"fewest\",\n        \"fezzed\",\n        \"fezzes\",\n        \"fiance\",\n        \"fiasco\",\n        \"fibbed\",\n        \"fibber\",\n        \"fibers\",\n        \"fibred\",\n        \"fibres\",\n        \"fibril\",\n        \"fibrin\",\n        \"fibula\",\n        \"fickle\",\n        \"fiddle\",\n        \"fiddly\",\n        \"fidget\",\n        \"fields\",\n        \"fiends\",\n        \"fierce\",\n        \"fiesta\",\n        \"fifths\",\n        \"figged\",\n        \"fights\",\n        \"figure\",\n        \"filets\",\n        \"filial\",\n        \"filing\",\n        \"filled\",\n        \"filler\",\n        \"fillet\",\n        \"fillup\",\n        \"filmed\",\n        \"filter\",\n        \"filths\",\n        \"filthy\",\n        \"finale\",\n        \"finals\",\n        \"finder\",\n        \"finely\",\n        \"finery\",\n        \"finest\",\n        \"finger\",\n        \"finial\",\n        \"fining\",\n        \"finish\",\n        \"finite\",\n        \"finned\",\n        \"fipple\",\n        \"firers\",\n        \"firing\",\n        \"firmed\",\n        \"firmer\",\n        \"firmly\",\n        \"firsts\",\n        \"fiscal\",\n        \"fished\",\n        \"fisher\",\n        \"fishes\",\n        \"fitful\",\n        \"fitted\",\n        \"fitter\",\n        \"fivers\",\n        \"fivish\",\n        \"fixate\",\n        \"fixers\",\n        \"fixing\",\n        \"fixity\",\n        \"fixups\",\n        \"fizzed\",\n        \"fizzer\",\n        \"fizzes\",\n        \"fizzle\",\n        \"fjords\",\n        \"flabby\",\n        \"flacks\",\n        \"flaffs\",\n        \"flails\",\n        \"flaked\",\n        \"flakes\",\n        \"flakey\",\n        \"flambe\",\n        \"flamed\",\n        \"flamen\",\n        \"flames\",\n        \"flange\",\n        \"flanks\",\n        \"flared\",\n        \"flares\",\n        \"flashy\",\n        \"flasks\",\n        \"flatly\",\n        \"flaunt\",\n        \"flavin\",\n        \"flavor\",\n        \"flawed\",\n        \"flaxen\",\n        \"flaxes\",\n        \"flayed\",\n        \"flayer\",\n        \"flecks\",\n        \"flecky\",\n        \"fledge\",\n        \"fleece\",\n        \"fleecy\",\n        \"fleets\",\n        \"flench\",\n        \"flense\",\n        \"fleshy\",\n        \"flexed\",\n        \"flexes\",\n        \"flexor\",\n        \"flicks\",\n        \"fliers\",\n        \"flight\",\n        \"flimsy\",\n        \"flinch\",\n        \"flings\",\n        \"flints\",\n        \"flinty\",\n        \"flippy\",\n        \"flirts\",\n        \"flirty\",\n        \"floats\",\n        \"floaty\",\n        \"flocks\",\n        \"flocky\",\n        \"floods\",\n        \"floors\",\n        \"floppy\",\n        \"floral\",\n        \"floret\",\n        \"florin\",\n        \"flossy\",\n        \"flours\",\n        \"floury\",\n        \"flouts\",\n        \"flowed\",\n        \"flower\",\n        \"floxed\",\n        \"floxes\",\n        \"fluent\",\n        \"fluffs\",\n        \"fluffy\",\n        \"flugel\",\n        \"fluids\",\n        \"fluked\",\n        \"flukes\",\n        \"flukey\",\n        \"flumed\",\n        \"flumes\",\n        \"flumps\",\n        \"flunks\",\n        \"flunky\",\n        \"flurry\",\n        \"fluted\",\n        \"fluter\",\n        \"flutes\",\n        \"fluxed\",\n        \"fluxer\",\n        \"fluxes\",\n        \"flybys\",\n        \"flyers\",\n        \"flying\",\n        \"flyoff\",\n        \"flyway\",\n        \"foaled\",\n        \"foamed\",\n        \"foamer\",\n        \"fobbed\",\n        \"fodder\",\n        \"foetal\",\n        \"foetid\",\n        \"foetus\",\n        \"fogash\",\n        \"fogbow\",\n        \"fogdog\",\n        \"fogeys\",\n        \"fogged\",\n        \"fogies\",\n        \"foible\",\n        \"foiled\",\n        \"foists\",\n        \"foisty\",\n        \"folate\",\n        \"folded\",\n        \"folder\",\n        \"foldup\",\n        \"foleys\",\n        \"folios\",\n        \"folium\",\n        \"folksy\",\n        \"follow\",\n        \"foment\",\n        \"fonded\",\n        \"fonder\",\n        \"fondle\",\n        \"fondly\",\n        \"fondue\",\n        \"fooled\",\n        \"footed\",\n        \"footer\",\n        \"footsy\",\n        \"foozle\",\n        \"forage\",\n        \"forays\",\n        \"forbid\",\n        \"forced\",\n        \"forcep\",\n        \"forcer\",\n        \"forces\",\n        \"forego\",\n        \"forest\",\n        \"forged\",\n        \"forger\",\n        \"forges\",\n        \"forget\",\n        \"forgot\",\n        \"forint\",\n        \"forked\",\n        \"forker\",\n        \"formal\",\n        \"format\",\n        \"formed\",\n        \"former\",\n        \"formic\",\n        \"formin\",\n        \"fornix\",\n        \"forsee\",\n        \"fortes\",\n        \"forums\",\n        \"fossil\",\n        \"foster\",\n        \"fought\",\n        \"fouled\",\n        \"fouler\",\n        \"founds\",\n        \"fourth\",\n        \"foveae\",\n        \"foveal\",\n        \"fowler\",\n        \"foxier\",\n        \"foxily\",\n        \"foxing\",\n        \"foyers\",\n        \"fozier\",\n        \"fracas\",\n        \"fracks\",\n        \"framed\",\n        \"framer\",\n        \"frames\",\n        \"francs\",\n        \"franks\",\n        \"fratch\",\n        \"frater\",\n        \"frauds\",\n        \"frayed\",\n        \"freaks\",\n        \"freaky\",\n        \"freely\",\n        \"freest\",\n        \"freeze\",\n        \"frenzy\",\n        \"freons\",\n        \"fresco\",\n        \"fretty\",\n        \"friars\",\n        \"friary\",\n        \"friday\",\n        \"fridge\",\n        \"friend\",\n        \"frieze\",\n        \"fright\",\n        \"frigid\",\n        \"frijol\",\n        \"frills\",\n        \"frilly\",\n        \"fringe\",\n        \"fringy\",\n        \"frisks\",\n        \"frisky\",\n        \"frizzy\",\n        \"frocks\",\n        \"froggy\",\n        \"frolic\",\n        \"fronds\",\n        \"fronts\",\n        \"froren\",\n        \"frosts\",\n        \"frosty\",\n        \"froths\",\n        \"frothy\",\n        \"frowns\",\n        \"frowny\",\n        \"frowst\",\n        \"frowsy\",\n        \"frowzy\",\n        \"frozen\",\n        \"frugal\",\n        \"fruits\",\n        \"fruity\",\n        \"frumps\",\n        \"frumpy\",\n        \"fryers\",\n        \"frying\",\n        \"frypan\",\n        \"fucose\",\n        \"fuddle\",\n        \"fudged\",\n        \"fudges\",\n        \"fueled\",\n        \"fueler\",\n        \"fuffed\",\n        \"fuffle\",\n        \"fugacy\",\n        \"fugued\",\n        \"fugues\",\n        \"fuhrer\",\n        \"fukiic\",\n        \"fulfil\",\n        \"fulgur\",\n        \"fuller\",\n        \"fumble\",\n        \"fumier\",\n        \"fuming\",\n        \"funded\",\n        \"funder\",\n        \"fundus\",\n        \"fungal\",\n        \"fungus\",\n        \"funked\",\n        \"funker\",\n        \"funnel\",\n        \"funner\",\n        \"furane\",\n        \"furans\",\n        \"furies\",\n        \"furled\",\n        \"furler\",\n        \"furred\",\n        \"furrow\",\n        \"fusees\",\n        \"fusels\",\n        \"fusers\",\n        \"fusing\",\n        \"fusion\",\n        \"fussed\",\n        \"fusser\",\n        \"fusses\",\n        \"futile\",\n        \"futons\",\n        \"future\",\n        \"fuzing\",\n        \"fuzzed\",\n        \"fuzzes\",\n        \"gabbed\",\n        \"gabber\",\n        \"gabble\",\n        \"gabbro\",\n        \"gabled\",\n        \"gabler\",\n        \"gables\",\n        \"gadfly\",\n        \"gadget\",\n        \"gaelic\",\n        \"gaffed\",\n        \"gaffer\",\n        \"gaffes\",\n        \"gagged\",\n        \"gagger\",\n        \"gaggle\",\n        \"gaging\",\n        \"gaiety\",\n        \"gained\",\n        \"gainer\",\n        \"gainly\",\n        \"gaited\",\n        \"gaiter\",\n        \"galaxy\",\n        \"galena\",\n        \"galled\",\n        \"galley\",\n        \"gallic\",\n        \"gallon\",\n        \"gallop\",\n        \"gallow\",\n        \"galoot\",\n        \"galore\",\n        \"galosh\",\n        \"gambit\",\n        \"gamble\",\n        \"gambol\",\n        \"gamely\",\n        \"gamers\",\n        \"gamest\",\n        \"gamete\",\n        \"gamier\",\n        \"gaming\",\n        \"gammas\",\n        \"gamuts\",\n        \"gander\",\n        \"ganefs\",\n        \"ganevs\",\n        \"ganged\",\n        \"ganofs\",\n        \"gantry\",\n        \"gaoled\",\n        \"gaoler\",\n        \"gaping\",\n        \"gapped\",\n        \"gapper\",\n        \"garage\",\n        \"garbed\",\n        \"garble\",\n        \"garden\",\n        \"gargle\",\n        \"garish\",\n        \"garlic\",\n        \"garner\",\n        \"garnet\",\n        \"garret\",\n        \"garter\",\n        \"gashed\",\n        \"gasher\",\n        \"gashes\",\n        \"gasify\",\n        \"gasket\",\n        \"gaslit\",\n        \"gasped\",\n        \"gasper\",\n        \"gassed\",\n        \"gasser\",\n        \"gasses\",\n        \"gastly\",\n        \"gateau\",\n        \"gather\",\n        \"gating\",\n        \"gators\",\n        \"gauche\",\n        \"gauged\",\n        \"gauges\",\n        \"gaunts\",\n        \"gauzed\",\n        \"gauzes\",\n        \"gavage\",\n        \"gavels\",\n        \"gawked\",\n        \"gawker\",\n        \"gawped\",\n        \"gawper\",\n        \"gayest\",\n        \"gayety\",\n        \"gazebo\",\n        \"gazers\",\n        \"gazing\",\n        \"gazump\",\n        \"geared\",\n        \"geckos\",\n        \"geeked\",\n        \"geisha\",\n        \"gelate\",\n        \"gelato\",\n        \"gelcap\",\n        \"gelded\",\n        \"gelder\",\n        \"gelled\",\n        \"gelose\",\n        \"gemmed\",\n        \"gender\",\n        \"genera\",\n        \"genets\",\n        \"genial\",\n        \"genies\",\n        \"genius\",\n        \"genoas\",\n        \"genome\",\n        \"genres\",\n        \"gentle\",\n        \"gently\",\n        \"gentry\",\n        \"geodal\",\n        \"geodes\",\n        \"geodic\",\n        \"geoids\",\n        \"geomap\",\n        \"geonym\",\n        \"geotag\",\n        \"gerbil\",\n        \"getter\",\n        \"geyser\",\n        \"ghetto\",\n        \"ghosts\",\n        \"ghouls\",\n        \"giants\",\n        \"gibbon\",\n        \"giblet\",\n        \"gidjak\",\n        \"gifted\",\n        \"gigged\",\n        \"giggle\",\n        \"giggly\",\n        \"gijaks\",\n        \"gilded\",\n        \"gilder\",\n        \"gimbal\",\n        \"gimped\",\n        \"ginger\",\n        \"ginkgo\",\n        \"ginned\",\n        \"girded\",\n        \"girder\",\n        \"girdle\",\n        \"girlie\",\n        \"girned\",\n        \"girnel\",\n        \"girner\",\n        \"girths\",\n        \"gismos\",\n        \"givens\",\n        \"givers\",\n        \"giving\",\n        \"gizmos\",\n        \"glades\",\n        \"gladly\",\n        \"glamor\",\n        \"glamps\",\n        \"glance\",\n        \"glands\",\n        \"glared\",\n        \"glares\",\n        \"glassy\",\n        \"glazed\",\n        \"glazes\",\n        \"gleams\",\n        \"gleamy\",\n        \"gleans\",\n        \"gleeks\",\n        \"gleets\",\n        \"gleety\",\n        \"glibly\",\n        \"glided\",\n        \"glider\",\n        \"glides\",\n        \"glints\",\n        \"glinty\",\n        \"glioma\",\n        \"glitch\",\n        \"glitzy\",\n        \"gloams\",\n        \"gloats\",\n        \"global\",\n        \"globby\",\n        \"globed\",\n        \"globes\",\n        \"glooms\",\n        \"gloomy\",\n        \"glossy\",\n        \"gloved\",\n        \"glover\",\n        \"gloves\",\n        \"glowed\",\n        \"glower\",\n        \"glozed\",\n        \"glozes\",\n        \"gluers\",\n        \"gluier\",\n        \"gluing\",\n        \"glumly\",\n        \"gluons\",\n        \"gluten\",\n        \"glycan\",\n        \"glycic\",\n        \"glycol\",\n        \"glyphs\",\n        \"gnarls\",\n        \"gnarly\",\n        \"gnarrs\",\n        \"gnatty\",\n        \"gnawed\",\n        \"gnawer\",\n        \"gneiss\",\n        \"gnomes\",\n        \"gnomic\",\n        \"gnomon\",\n        \"gnoses\",\n        \"gnosis\",\n        \"goaded\",\n        \"goalie\",\n        \"goanna\",\n        \"goatee\",\n        \"gobbed\",\n        \"gobber\",\n        \"gobbet\",\n        \"gobble\",\n        \"gobies\",\n        \"goblet\",\n        \"goblin\",\n        \"godson\",\n        \"gofers\",\n        \"goggle\",\n        \"goings\",\n        \"goiter\",\n        \"goitre\",\n        \"golden\",\n        \"golfed\",\n        \"golfer\",\n        \"gonads\",\n        \"goners\",\n        \"gonged\",\n        \"gonifs\",\n        \"gonofs\",\n        \"goober\",\n        \"goodby\",\n        \"goodie\",\n        \"goofed\",\n        \"google\",\n        \"googly\",\n        \"googol\",\n        \"gooier\",\n        \"goosed\",\n        \"gooses\",\n        \"goozle\",\n        \"gopher\",\n        \"gorged\",\n        \"gorges\",\n        \"gorget\",\n        \"gorgon\",\n        \"gorier\",\n        \"gorily\",\n        \"goring\",\n        \"gospel\",\n        \"gossip\",\n        \"gotcha\",\n        \"gothic\",\n        \"gotten\",\n        \"gouged\",\n        \"gouger\",\n        \"gouges\",\n        \"goundy\",\n        \"gourde\",\n        \"gourds\",\n        \"govern\",\n        \"gowned\",\n        \"grabby\",\n        \"graced\",\n        \"graces\",\n        \"graded\",\n        \"grader\",\n        \"grades\",\n        \"grafts\",\n        \"graham\",\n        \"grails\",\n        \"grains\",\n        \"grainy\",\n        \"grammy\",\n        \"grands\",\n        \"granny\",\n        \"grants\",\n        \"granum\",\n        \"grapes\",\n        \"graphs\",\n        \"grasps\",\n        \"grassy\",\n        \"grated\",\n        \"grater\",\n        \"grates\",\n        \"gratis\",\n        \"graved\",\n        \"gravel\",\n        \"graven\",\n        \"graver\",\n        \"graves\",\n        \"gravid\",\n        \"grayed\",\n        \"grayer\",\n        \"grazed\",\n        \"grazer\",\n        \"grazes\",\n        \"grease\",\n        \"greasy\",\n        \"greats\",\n        \"greedy\",\n        \"greens\",\n        \"greets\",\n        \"greyed\",\n        \"greyer\",\n        \"griefs\",\n        \"grieve\",\n        \"grille\",\n        \"grills\",\n        \"grimed\",\n        \"grimes\",\n        \"grimly\",\n        \"grinch\",\n        \"grinds\",\n        \"griots\",\n        \"griped\",\n        \"griper\",\n        \"gripes\",\n        \"grippy\",\n        \"grisly\",\n        \"gritty\",\n        \"groans\",\n        \"grocer\",\n        \"groggy\",\n        \"groins\",\n        \"gromet\",\n        \"grooms\",\n        \"groove\",\n        \"groovy\",\n        \"groped\",\n        \"groper\",\n        \"gropes\",\n        \"grotto\",\n        \"grotty\",\n        \"grouch\",\n        \"ground\",\n        \"groups\",\n        \"grouse\",\n        \"grouts\",\n        \"groved\",\n        \"grovel\",\n        \"grover\",\n        \"groves\",\n        \"grovet\",\n        \"growed\",\n        \"grower\",\n        \"growls\",\n        \"growly\",\n        //\"growth\",\n        \"grubby\",\n        \"grudge\",\n        \"gruels\",\n        \"gruffs\",\n        \"gruffy\",\n        \"grumps\",\n        \"grumpy\",\n        \"grunge\",\n        \"grungy\",\n        \"grunts\",\n        \"guanos\",\n        \"guards\",\n        \"guavas\",\n        \"guests\",\n        \"guffaw\",\n        \"guggle\",\n        //\"guided\",\n        \"guider\",\n        \"guides\",\n        \"guilds\",\n        \"guiled\",\n        \"guiles\",\n        \"guilts\",\n        \"guilty\",\n        \"guinea\",\n        \"guises\",\n        \"guitar\",\n        \"guitjo\",\n        \"gulags\",\n        \"gulden\",\n        \"gulled\",\n        \"gullet\",\n        \"gulley\",\n        \"gulped\",\n        \"gulper\",\n        \"gumbos\",\n        \"gummed\",\n        \"gundog\",\n        \"gunite\",\n        \"gunman\",\n        \"gunmen\",\n        \"gunned\",\n        \"gunner\",\n        \"gunter\",\n        \"gurgle\",\n        \"gurgly\",\n        \"gurner\",\n        \"gurney\",\n        \"gushed\",\n        \"gusher\",\n        \"gushes\",\n        \"gusset\",\n        \"gusted\",\n        \"gutted\",\n        \"gutter\",\n        \"guzzle\",\n        \"gypped\",\n        \"gypper\",\n        \"gypsum\",\n        \"gyrate\",\n        \"habits\",\n        \"hacked\",\n        \"hacker\",\n        \"hackle\",\n        \"hadean\",\n        \"hadron\",\n        \"haemic\",\n        \"haemin\",\n        \"hafter\",\n        \"hagged\",\n        \"haggis\",\n        \"haggle\",\n        \"haglet\",\n        \"hailed\",\n        \"hairdo\",\n        \"haired\",\n        \"haitch\",\n        \"hakata\",\n        \"halide\",\n        \"halite\",\n        \"hallow\",\n        \"hallux\",\n        \"haloed\",\n        \"haloes\",\n        \"halted\",\n        \"halter\",\n        \"halved\",\n        \"halver\",\n        \"halves\",\n        \"hamaxe\",\n        \"hamlet\",\n        \"hammed\",\n        \"hammer\",\n        \"hamper\",\n        \"handed\",\n        \"hander\",\n        \"handle\",\n        \"hangar\",\n        \"hanged\",\n        \"hanger\",\n        \"hangup\",\n        \"hanker\",\n        \"hankie\",\n        \"happed\",\n        \"happen\",\n        \"hapter\",\n        \"haptic\",\n        \"harass\",\n        \"harbor\",\n        \"harden\",\n        \"harder\",\n        \"hardly\",\n        \"hardup\",\n        \"harems\",\n        \"harked\",\n        \"harken\",\n        \"harlem\",\n        \"harlot\",\n        \"harmed\",\n        \"harmer\",\n        \"harped\",\n        \"harper\",\n        \"harrow\",\n        \"hashed\",\n        \"hashes\",\n        \"hassle\",\n        \"hasted\",\n        \"hasten\",\n        \"hastes\",\n        \"hatbox\",\n        \"haters\",\n        \"hatful\",\n        \"hating\",\n        \"hatpin\",\n        \"hatred\",\n        \"hatted\",\n        \"hatter\",\n        \"hauled\",\n        \"hauler\",\n        \"haunch\",\n        \"haunts\",\n        \"hauyne\",\n        \"havens\",\n        \"having\",\n        \"hawing\",\n        \"hawked\",\n        \"hawker\",\n        \"hawser\",\n        \"hawses\",\n        \"haybox\",\n        \"haycap\",\n        \"hayers\",\n        \"haying\",\n        \"haymow\",\n        \"hazard\",\n        \"hazels\",\n        \"hazers\",\n        \"hazier\",\n        \"hazily\",\n        \"hazing\",\n        \"hazmat\",\n        \"headed\",\n        \"header\",\n        \"headon\",\n        \"healds\",\n        \"healed\",\n        \"healer\",\n        \"health\",\n        \"heaped\",\n        \"heaper\",\n        \"hearer\",\n        \"hearse\",\n        \"hearth\",\n        \"hearts\",\n        \"hearty\",\n        \"heated\",\n        \"heater\",\n        \"heaths\",\n        \"heathy\",\n        \"heaved\",\n        \"heaven\",\n        \"heaver\",\n        \"heaves\",\n        \"heckle\",\n        \"hectic\",\n        \"hedged\",\n        \"hedger\",\n        \"hedges\",\n        \"heeded\",\n        \"heehaw\",\n        \"heeled\",\n        \"hefted\",\n        \"hefter\",\n        \"heifer\",\n        \"height\",\n        \"heired\",\n        \"heists\",\n        \"helios\",\n        \"helium\",\n        \"hellos\",\n        \"helmed\",\n        \"helmet\",\n        \"helped\",\n        \"helper\",\n        \"hemmed\",\n        \"hemmer\",\n        \"hennas\",\n        \"henrys\",\n        \"herald\",\n        \"herbal\",\n        \"herbed\",\n        \"herber\",\n        \"herded\",\n        \"herder\",\n        \"hereby\",\n        \"herein\",\n        \"hereof\",\n        \"hereon\",\n        \"heresy\",\n        \"hereto\",\n        \"hermit\",\n        \"hernia\",\n        \"heroes\",\n        \"heroic\",\n        \"heroin\",\n        \"herons\",\n        \"herpes\",\n        \"hewers\",\n        \"hewing\",\n        \"hexane\",\n        \"hexene\",\n        \"hexing\",\n        \"hexone\",\n        \"hexose\",\n        \"hexyne\",\n        \"heyday\",\n        \"hiatal\",\n        \"hiatus\",\n        \"hiccup\",\n        \"hickey\",\n        \"hidden\",\n        \"hiders\",\n        \"hiding\",\n        \"higher\",\n        \"highly\",\n        \"hijabs\",\n        \"hijack\",\n        \"hijinx\",\n        \"hikers\",\n        \"hiking\",\n        \"hilled\",\n        \"hinder\",\n        \"hinged\",\n        \"hinges\",\n        \"hinted\",\n        \"hinter\",\n        \"hiphop\",\n        \"hipped\",\n        \"hipper\",\n        \"hippie\",\n        \"hippos\",\n        \"hirers\",\n        \"hiring\",\n        \"hissed\",\n        \"hisser\",\n        \"hisses\",\n        \"hither\",\n        \"hitman\",\n        \"hitmen\",\n        \"hitter\",\n        \"hiving\",\n        \"hoagie\",\n        \"hoards\",\n        \"hoarse\",\n        \"hoaxed\",\n        \"hoaxer\",\n        \"hoaxes\",\n        \"hobbit\",\n        \"hobble\",\n        \"hobday\",\n        \"hobnob\",\n        \"hocked\",\n        \"hockey\",\n        \"hoeful\",\n        \"hoeing\",\n        \"hogged\",\n        \"hogger\",\n        \"hogtie\",\n        \"hoists\",\n        \"holden\",\n        \"holder\",\n        \"holdup\",\n        \"holier\",\n        \"holing\",\n        \"holism\",\n        \"holler\",\n        \"hollow\",\n        \"homage\",\n        \"hombre\",\n        \"homely\",\n        \"homers\",\n        \"homier\",\n        \"homily\",\n        \"homing\",\n        \"honers\",\n        \"honest\",\n        \"honeys\",\n        \"honing\",\n        \"honked\",\n        \"honker\",\n        \"honors\",\n        \"honour\",\n        \"hooded\",\n        \"hoodie\",\n        \"hoodoo\",\n        \"hoofed\",\n        \"hoofer\",\n        \"hooked\",\n        \"hooker\",\n        \"hookup\",\n        \"hooped\",\n        \"hooray\",\n        \"hooted\",\n        \"hooved\",\n        \"hooven\",\n        \"hoover\",\n        \"hooves\",\n        \"hoping\",\n        \"hopped\",\n        \"hopper\",\n        \"hopple\",\n        \"hordes\",\n        \"horned\",\n        \"hornet\",\n        \"horrid\",\n        \"horror\",\n        \"horsed\",\n        \"horses\",\n        \"horsey\",\n        \"hosers\",\n        \"hosier\",\n        \"hosing\",\n        \"hostas\",\n        \"hosted\",\n        \"hostel\",\n        \"hotair\",\n        \"hotbed\",\n        \"hotbox\",\n        \"hotdog\",\n        \"hotels\",\n        \"hotpot\",\n        \"hotrod\",\n        \"hotted\",\n        \"hotter\",\n        \"hottub\",\n        \"hounds\",\n        \"hourly\",\n        \"housed\",\n        \"houses\",\n        \"hovels\",\n        \"hovers\",\n        \"howard\",\n        \"howled\",\n        \"howler\",\n        \"howtos\",\n        \"hubbed\",\n        \"hubber\",\n        \"hubble\",\n        \"hubbub\",\n        \"hubcap\",\n        \"hubris\",\n        \"huddle\",\n        \"huffed\",\n        \"hugely\",\n        \"hugest\",\n        \"hugged\",\n        \"hugger\",\n        \"hulked\",\n        \"hulled\",\n        \"huller\",\n        \"humane\",\n        \"humans\",\n        \"humble\",\n        \"humbly\",\n        \"humbug\",\n        \"humite\",\n        \"hummed\",\n        \"hummer\",\n        \"hummus\",\n        \"humors\",\n        \"humour\",\n        \"humous\",\n        \"humped\",\n        \"humper\",\n        \"humpie\",\n        \"humvee\",\n        \"hunchy\",\n        \"hunger\",\n        \"hungry\",\n        \"hunker\",\n        \"hunted\",\n        \"hunter\",\n        \"hurdle\",\n        \"hurled\",\n        \"hurler\",\n        \"hurrah\",\n        \"hurted\",\n        \"hurter\",\n        \"hurtle\",\n        \"hushed\",\n        \"hushes\",\n        \"husked\",\n        \"husker\",\n        \"huskie\",\n        \"hustle\",\n        \"hutted\",\n        \"hutzpa\",\n        \"hyaena\",\n        \"hyalin\",\n        \"hybrid\",\n        \"hybris\",\n        \"hydras\",\n        \"hydric\",\n        \"hyenas\",\n        \"hylids\",\n        \"hymens\",\n        \"hymnal\",\n        \"hymned\",\n        \"hymner\",\n        \"hyphen\",\n        \"hyping\",\n        \"iambic\",\n        \"ibexes\",\n        \"ibises\",\n        \"iceage\",\n        \"icebox\",\n        \"icecap\",\n        \"icedam\",\n        \"iceman\",\n        \"icemen\",\n        \"icicle\",\n        \"iciest\",\n        \"icings\",\n        \"ickier\",\n        \"iconic\",\n        \"ideals\",\n        \"idents\",\n        \"idiocy\",\n        \"idioms\",\n        \"idiots\",\n        \"idlers\",\n        \"idlest\",\n        \"idling\",\n        \"idylls\",\n        \"igloos\",\n        \"ignite\",\n        \"ignore\",\n        \"iguana\",\n        \"iliums\",\n        \"illite\",\n        \"illium\",\n        \"illume\",\n        \"imaged\",\n        \"imager\",\n        \"images\",\n        \"imagos\",\n        \"imbeds\",\n        \"imbibe\",\n        \"imbued\",\n        \"imides\",\n        \"immune\",\n        \"immure\",\n        \"impact\",\n        \"impair\",\n        \"impala\",\n        \"impale\",\n        \"impart\",\n        \"impede\",\n        \"impels\",\n        \"impend\",\n        \"imping\",\n        \"impish\",\n        \"implex\",\n        \"import\",\n        \"impose\",\n        \"improv\",\n        \"impugn\",\n        \"impure\",\n        \"inanes\",\n        \"inborn\",\n        \"inbred\",\n        \"incant\",\n        \"incase\",\n        \"incell\",\n        \"incest\",\n        \"inched\",\n        \"incher\",\n        \"inches\",\n        \"incise\",\n        \"incite\",\n        \"income\",\n        \"incubi\",\n        \"inculp\",\n        \"incurs\",\n        \"indeed\",\n        \"indent\",\n        \"indian\",\n        \"indict\",\n        \"indies\",\n        \"indigo\",\n        \"indite\",\n        \"indium\",\n        \"indole\",\n        \"indoor\",\n        \"indraw\",\n        \"indrew\",\n        \"induce\",\n        \"induct\",\n        \"infamy\",\n        \"infant\",\n        \"infect\",\n        \"infers\",\n        \"infest\",\n        \"infill\",\n        \"infirm\",\n        \"inflow\",\n        \"influx\",\n        \"infold\",\n        \"inform\",\n        \"infuse\",\n        \"ingest\",\n        \"ingots\",\n        \"inhale\",\n        \"inhole\",\n        \"inimic\",\n        \"inject\",\n        \"injoin\",\n        \"injoke\",\n        \"injure\",\n        \"injury\",\n        \"inkier\",\n        \"inking\",\n        \"inkjet\",\n        \"inkpad\",\n        \"inkpot\",\n        \"inlaid\",\n        \"inland\",\n        \"inlaws\",\n        \"inlays\",\n        \"inlets\",\n        \"inline\",\n        \"inlock\",\n        \"inmate\",\n        \"inmesh\",\n        \"inmixt\",\n        \"inmost\",\n        \"innate\",\n        \"inning\",\n        \"inodes\",\n        \"inputs\",\n        \"inroad\",\n        \"inrush\",\n        \"insane\",\n        \"inseam\",\n        \"insect\",\n        \"insert\",\n        \"insets\",\n        \"inside\",\n        \"insist\",\n        \"insitu\",\n        \"insole\",\n        \"instar\",\n        \"instep\",\n        \"insult\",\n        \"insure\",\n        \"intact\",\n        \"intake\",\n        \"intend\",\n        \"intent\",\n        \"intern\",\n        \"intext\",\n        \"intone\",\n        \"intort\",\n        \"intron\",\n        \"intuit\",\n        \"inturn\",\n        \"inulas\",\n        \"inulin\",\n        \"inured\",\n        \"inures\",\n        \"invade\",\n        \"invect\",\n        \"invent\",\n        \"invert\",\n        \"invest\",\n        \"invite\",\n        \"invivo\",\n        \"invoke\",\n        \"inward\",\n        \"inwell\",\n        \"inwick\",\n        \"inwove\",\n        \"iodide\",\n        \"iodine\",\n        \"iodise\",\n        \"iodism\",\n        \"iodite\",\n        \"iodize\",\n        \"iodous\",\n        \"iolite\",\n        \"ionise\",\n        \"ionize\",\n        \"ionone\",\n        \"iotize\",\n        \"ipecac\",\n        \"iphone\",\n        \"irater\",\n        \"ireful\",\n        \"irenic\",\n        \"iridis\",\n        \"irises\",\n        \"iritic\",\n        \"iritis\",\n        \"irking\",\n        \"ironed\",\n        \"ironer\",\n        \"ironic\",\n        \"ironym\",\n        \"irreal\",\n        \"ischii\",\n        \"island\",\n        \"islets\",\n        \"isobar\",\n        \"isogon\",\n        \"isohel\",\n        \"isomer\",\n        \"isonym\",\n        \"isopod\",\n        \"issued\",\n        \"issuer\",\n        \"issues\",\n        \"italic\",\n        \"itched\",\n        \"itches\",\n        \"itself\",\n        \"jabbed\",\n        \"jabber\",\n        \"jackal\",\n        \"jacked\",\n        \"jacket\",\n        \"jading\",\n        \"jadish\",\n        \"jagged\",\n        \"jaguar\",\n        \"jailed\",\n        \"jailer\",\n        \"jailor\",\n        \"jalopy\",\n        \"jamjar\",\n        \"jammed\",\n        \"jammer\",\n        \"jampot\",\n        \"jangle\",\n        \"jangly\",\n        \"japans\",\n        \"jarful\",\n        \"jargon\",\n        \"jarred\",\n        \"jasper\",\n        \"jaunts\",\n        \"jaunty\",\n        \"jawing\",\n        \"jazzed\",\n        \"jazzes\",\n        \"jeered\",\n        \"jeerer\",\n        \"jehadi\",\n        \"jehads\",\n        \"jejuna\",\n        \"jejune\",\n        \"jejuni\",\n        \"jelled\",\n        \"jellos\",\n        \"jembes\",\n        \"jerked\",\n        \"jerker\",\n        \"jersey\",\n        \"jested\",\n        \"jester\",\n        \"jetlag\",\n        \"jetted\",\n        \"jetway\",\n        \"jewels\",\n        \"jibers\",\n        \"jibing\",\n        \"jigged\",\n        \"jiggle\",\n        \"jiggly\",\n        \"jigsaw\",\n        \"jihadi\",\n        \"jihads\",\n        \"jilted\",\n        \"jilter\",\n        \"jingle\",\n        \"jingly\",\n        \"jinked\",\n        \"jinker\",\n        \"jinxed\",\n        \"jinxer\",\n        \"jinxes\",\n        \"jitter\",\n        \"jivers\",\n        \"jivier\",\n        \"jiving\",\n        \"jobbed\",\n        \"jobber\",\n        \"jockey\",\n        \"jocose\",\n        \"jocund\",\n        \"jogged\",\n        \"jogger\",\n        \"joined\",\n        \"joiner\",\n        \"joints\",\n        \"jointy\",\n        \"joists\",\n        \"jojoba\",\n        \"jokers\",\n        \"joking\",\n        \"jolted\",\n        \"jolter\",\n        \"joshed\",\n        \"josher\",\n        \"joshes\",\n        \"jostle\",\n        \"jotted\",\n        \"jotter\",\n        \"joules\",\n        \"jounce\",\n        \"jouncy\",\n        \"jousts\",\n        \"jovial\",\n        \"jowled\",\n        \"jowler\",\n        \"joyful\",\n        \"joying\",\n        \"joyous\",\n        \"joypop\",\n        \"judged\",\n        \"judger\",\n        \"judges\",\n        \"jugate\",\n        \"jugful\",\n        \"jugged\",\n        \"juggle\",\n        \"jugums\",\n        \"juiced\",\n        \"juicer\",\n        \"juices\",\n        \"juicey\",\n        \"jujube\",\n        \"juking\",\n        \"juleps\",\n        \"julies\",\n        \"jumble\",\n        \"jumbly\",\n        \"jumped\",\n        \"jumper\",\n        \"jungle\",\n        \"junior\",\n        \"junked\",\n        \"junker\",\n        \"junket\",\n        \"juntas\",\n        \"juried\",\n        \"juries\",\n        \"jurist\",\n        \"jurors\",\n        \"juster\",\n        \"justle\",\n        \"justly\",\n        \"jutted\",\n        \"kababs\",\n        \"kabala\",\n        \"kabals\",\n        \"kabaya\",\n        \"kabbal\",\n        \"kabobs\",\n        \"kaftan\",\n        \"kahuna\",\n        \"kaiser\",\n        \"kankar\",\n        \"kaolin\",\n        \"kaonic\",\n        \"kappas\",\n        \"karate\",\n        \"karats\",\n        \"karite\",\n        \"karmas\",\n        \"karmic\",\n        \"karsts\",\n        \"karyon\",\n        \"kasher\",\n        \"katals\",\n        \"kayaks\",\n        \"kazoos\",\n        \"kebabs\",\n        \"keeked\",\n        \"keeker\",\n        \"keeled\",\n        \"keened\",\n        \"keener\",\n        \"keenly\",\n        \"keeper\",\n        \"keloid\",\n        \"kelped\",\n        \"kelper\",\n        \"kelpie\",\n        \"kelvin\",\n        \"kennel\",\n        \"kepped\",\n        \"kerned\",\n        \"kernel\",\n        \"ketols\",\n        \"ketone\",\n        \"ketose\",\n        \"kettle\",\n        \"kevlar\",\n        \"keyfob\",\n        \"keying\",\n        \"keylog\",\n        \"keypad\",\n        \"keyset\",\n        \"keyway\",\n        \"khakis\",\n        \"kibble\",\n        \"kibitz\",\n        \"kicked\",\n        \"kicker\",\n        \"kidded\",\n        \"kidder\",\n        \"kiddie\",\n        \"kiddos\",\n        \"kidnap\",\n        \"kidney\",\n        \"killed\",\n        \"killer\",\n        \"kilned\",\n        \"kilted\",\n        \"kilter\",\n        \"kimono\",\n        \"kinase\",\n        \"kinder\",\n        \"kindle\",\n        \"kindly\",\n        \"kingly\",\n        \"kinked\",\n        \"kiosks\",\n        \"kipper\",\n        \"kirtle\",\n        \"kissed\",\n        \"kisser\",\n        \"kisses\",\n        \"kiting\",\n        \"kitten\",\n        \"kittle\",\n        \"klutzy\",\n        \"knacks\",\n        \"knarle\",\n        \"knarls\",\n        \"knarly\",\n        \"knarry\",\n        \"knaurl\",\n        \"knaurs\",\n        \"knaves\",\n        \"kneads\",\n        \"kneels\",\n        \"knells\",\n        \"knifed\",\n        \"knifes\",\n        \"knight\",\n        \"knives\",\n        \"knobby\",\n        \"knocks\",\n        \"knolls\",\n        \"knolly\",\n        \"knotty\",\n        \"knower\",\n        \"knowns\",\n        \"knubby\",\n        \"knurle\",\n        \"knurls\",\n        \"knurly\",\n        \"knurry\",\n        \"koalas\",\n        \"koodoo\",\n        \"kooked\",\n        \"koruna\",\n        \"kosher\",\n        \"kronas\",\n        \"krones\",\n        \"kroons\",\n        \"kudzus\",\n        \"kungfu\",\n        \"kvetch\",\n        \"kwacha\",\n        \"kwanza\",\n        \"laager\",\n        \"labels\",\n        \"labial\",\n        \"labile\",\n        \"labium\",\n        \"labors\",\n        \"labour\",\n        \"lacers\",\n        \"lacier\",\n        \"lacily\",\n        \"lacing\",\n        \"lacked\",\n        \"lackey\",\n        \"lactic\",\n        \"lacuna\",\n        \"ladder\",\n        \"laddie\",\n        \"ladies\",\n        \"lading\",\n        \"ladled\",\n        \"ladles\",\n        \"lagers\",\n        \"lagged\",\n        \"lagger\",\n        \"lagoon\",\n        \"lahars\",\n        \"laired\",\n        \"lakers\",\n        \"lambda\",\n        \"lambed\",\n        \"lamely\",\n        \"lament\",\n        \"lamest\",\n        \"lamina\",\n        \"lanced\",\n        \"lancer\",\n        \"lances\",\n        \"lancet\",\n        \"landed\",\n        \"lander\",\n        \"langue\",\n        \"langur\",\n        \"lanker\",\n        \"lankly\",\n        \"lanugo\",\n        \"lapdog\",\n        \"lapels\",\n        \"lapful\",\n        \"lapped\",\n        \"lapsed\",\n        \"lapses\",\n        \"laptop\",\n        \"larded\",\n        \"larder\",\n        \"larger\",\n        \"larges\",\n        \"largos\",\n        \"lariat\",\n        \"larked\",\n        \"larvae\",\n        \"larval\",\n        \"larvas\",\n        \"larynx\",\n        \"lasers\",\n        \"lashed\",\n        \"lasher\",\n        \"lashes\",\n        \"lasses\",\n        \"lassie\",\n        \"lassos\",\n        \"lasted\",\n        \"lastly\",\n        \"lately\",\n        \"latent\",\n        \"latest\",\n        \"lathed\",\n        \"lather\",\n        \"lathes\",\n        \"latino\",\n        \"latite\",\n        \"latkes\",\n        \"latter\",\n        \"lattes\",\n        \"lauded\",\n        \"laughs\",\n        \"launch\",\n        \"laurel\",\n        \"lavage\",\n        \"lavash\",\n        \"laveer\",\n        \"laving\",\n        \"lavish\",\n        \"lawful\",\n        \"lawman\",\n        \"lawmen\",\n        \"lawned\",\n        \"lawyer\",\n        \"laxest\",\n        \"laxism\",\n        \"laxist\",\n        \"laxity\",\n        \"layers\",\n        \"layery\",\n        \"laying\",\n        \"layman\",\n        \"laymen\",\n        \"layoff\",\n        \"layout\",\n        \"layups\",\n        \"lazier\",\n        \"lazies\",\n        \"lazily\",\n        \"lazing\",\n        \"leaded\",\n        \"leaden\",\n        \"leader\",\n        \"leafed\",\n        \"league\",\n        \"leaked\",\n        \"leaker\",\n        \"leaned\",\n        \"leaner\",\n        \"leanly\",\n        \"leanto\",\n        \"leaped\",\n        \"leaper\",\n        \"learns\",\n        \"learnt\",\n        \"leased\",\n        \"leaser\",\n        \"leases\",\n        \"leasow\",\n        \"leaved\",\n        \"leaven\",\n        \"leaver\",\n        \"leaves\",\n        \"lecher\",\n        \"leches\",\n        \"lectin\",\n        \"ledged\",\n        \"ledger\",\n        \"ledges\",\n        \"leered\",\n        \"leeway\",\n        \"lefter\",\n        \"leftie\",\n        \"legacy\",\n        \"legate\",\n        \"legend\",\n        \"legged\",\n        \"legion\",\n        \"legman\",\n        \"legmen\",\n        \"legume\",\n        \"lemons\",\n        \"lemony\",\n        \"lemurs\",\n        \"lender\",\n        \"length\",\n        \"lenite\",\n        \"lenses\",\n        \"lentil\",\n        \"leones\",\n        \"lepers\",\n        \"leptin\",\n        \"lepton\",\n        \"lesion\",\n        \"lessee\",\n        \"lessen\",\n        \"lesser\",\n        \"lesson\",\n        \"lessor\",\n        \"lester\",\n        \"lethal\",\n        \"letter\",\n        \"leveed\",\n        \"levees\",\n        \"levels\",\n        \"levers\",\n        \"levied\",\n        \"levier\",\n        \"levies\",\n        \"levity\",\n        \"lewder\",\n        \"lewdly\",\n        \"lexeme\",\n        \"liable\",\n        \"liaise\",\n        \"libate\",\n        \"libels\",\n        \"libido\",\n        \"lichen\",\n        \"licked\",\n        \"licker\",\n        \"lidded\",\n        \"lifers\",\n        \"lifted\",\n        \"lifter\",\n        \"ligand\",\n        \"ligase\",\n        \"ligate\",\n        \"lights\",\n        \"lignin\",\n        \"ligule\",\n        \"likely\",\n        \"likens\",\n        \"likest\",\n        \"liking\",\n        \"lilacs\",\n        \"lilies\",\n        \"lilted\",\n        \"limbed\",\n        \"limber\",\n        \"limbic\",\n        \"limier\",\n        \"liming\",\n        \"limits\",\n        \"limned\",\n        \"limped\",\n        \"limper\",\n        \"limpet\",\n        \"limpid\",\n        \"limply\",\n        \"linage\",\n        \"linden\",\n        \"lineal\",\n        \"linear\",\n        \"linens\",\n        \"liners\",\n        \"lineup\",\n        \"linger\",\n        \"lingua\",\n        \"lining\",\n        \"linked\",\n        \"linker\",\n        \"linkup\",\n        \"linnet\",\n        \"lintel\",\n        \"lionet\",\n        \"lionly\",\n        \"lipase\",\n        \"lipids\",\n        \"lipoic\",\n        \"lipoma\",\n        \"lipped\",\n        \"liquid\",\n        \"liquor\",\n        \"lirked\",\n        \"lisbon\",\n        \"lisped\",\n        \"lisper\",\n        \"listed\",\n        \"listen\",\n        \"litany\",\n        \"liters\",\n        \"lithic\",\n        \"litmus\",\n        \"litres\",\n        \"litter\",\n        \"little\",\n        \"lively\",\n        \"livens\",\n        \"livers\",\n        \"livery\",\n        \"living\",\n        \"lixive\",\n        \"lizard\",\n        \"llamas\",\n        \"loaded\",\n        \"loader\",\n        \"loafed\",\n        \"loafer\",\n        \"loaned\",\n        \"loaner\",\n        \"loathe\",\n        \"loathy\",\n        \"loaves\",\n        \"lobate\",\n        \"lobbed\",\n        \"lobber\",\n        \"lobing\",\n        \"lobule\",\n        \"locale\",\n        \"locals\",\n        \"locate\",\n        \"locked\",\n        \"locker\",\n        \"locket\",\n        \"lockup\",\n        \"locule\",\n        \"loculi\",\n        \"locust\",\n        \"lodged\",\n        \"lodger\",\n        \"lodges\",\n        \"lofted\",\n        \"logged\",\n        \"logger\",\n        \"logics\",\n        \"logins\",\n        \"logjam\",\n        \"logoff\",\n        \"logout\",\n        \"loiter\",\n        \"lonely\",\n        \"loners\",\n        \"longae\",\n        \"longed\",\n        \"longer\",\n        \"loofah\",\n        \"looked\",\n        \"looker\",\n        \"lookup\",\n        \"loomed\",\n        \"looney\",\n        \"loonie\",\n        \"looped\",\n        \"loosed\",\n        \"loosen\",\n        \"looser\",\n        \"looses\",\n        \"looted\",\n        \"looter\",\n        \"loping\",\n        \"lopped\",\n        \"lopper\",\n        \"lorate\",\n        \"lordly\",\n        \"lories\",\n        \"losers\",\n        \"losing\",\n        \"losses\",\n        \"lotion\",\n        \"louder\",\n        \"loudly\",\n        \"lounge\",\n        \"loused\",\n        \"louses\",\n        \"louver\",\n        \"louvre\",\n        \"lovage\",\n        \"lovely\",\n        \"lovers\",\n        \"loving\",\n        \"lowers\",\n        \"lowest\",\n        \"lowfat\",\n        \"lowlit\",\n        \"lubing\",\n        \"lucent\",\n        \"lucite\",\n        \"lucked\",\n        \"luffas\",\n        \"luffed\",\n        \"lugged\",\n        \"lugger\",\n        \"lulled\",\n        \"lumbar\",\n        \"lumber\",\n        \"lumens\",\n        \"lummox\",\n        \"lumped\",\n        \"lunacy\",\n        \"lunars\",\n        \"lunary\",\n        \"lunate\",\n        \"lunged\",\n        \"lunges\",\n        \"lunier\",\n        \"lunies\",\n        \"lupeol\",\n        \"lupine\",\n        \"lupins\",\n        \"lurers\",\n        \"luring\",\n        \"lurked\",\n        \"lurker\",\n        \"lusher\",\n        \"lushly\",\n        \"lusted\",\n        \"luster\",\n        \"lustre\",\n        \"luteal\",\n        \"lutein\",\n        \"luteum\",\n        \"lutist\",\n        \"lutite\",\n        \"luxate\",\n        \"luxury\",\n        \"lyases\",\n        \"lychee\",\n        \"lycras\",\n        \"lymphs\",\n        \"lymphy\",\n        \"lynxes\",\n        \"lyrate\",\n        \"lyrics\",\n        \"lyrist\",\n        \"lysate\",\n        \"lysine\",\n        \"macaws\",\n        \"mackle\",\n        \"macros\",\n        \"macula\",\n        \"macule\",\n        \"madame\",\n        \"madams\",\n        \"madden\",\n        \"madder\",\n        \"madefy\",\n        \"madman\",\n        \"madmen\",\n        \"madras\",\n        \"mafias\",\n        \"mafics\",\n        \"maggot\",\n        \"maglev\",\n        \"magmas\",\n        \"magnet\",\n        \"magnon\",\n        \"magnum\",\n        \"magpie\",\n        \"maiden\",\n        \"mailed\",\n        \"mailer\",\n        \"maimed\",\n        \"maimer\",\n        \"mainly\",\n        \"majors\",\n        \"makers\",\n        \"makeup\",\n        \"making\",\n        \"malady\",\n        \"malice\",\n        \"malign\",\n        \"mallee\",\n        \"mallet\",\n        \"mallow\",\n        \"malted\",\n        \"mambas\",\n        \"mambos\",\n        \"mammal\",\n        \"mammon\",\n        \"manage\",\n        \"manats\",\n        \"manger\",\n        \"mangey\",\n        \"mangle\",\n        \"mangos\",\n        \"maniac\",\n        \"manias\",\n        \"manics\",\n        \"manila\",\n        \"manned\",\n        \"manner\",\n        \"manors\",\n        \"mantel\",\n        \"mantis\",\n        \"mantle\",\n        \"mantra\",\n        \"manual\",\n        \"manure\",\n        \"maples\",\n        \"mapped\",\n        \"mapper\",\n        \"maraca\",\n        \"maraud\",\n        \"marble\",\n        \"marbly\",\n        \"margin\",\n        \"marina\",\n        \"marine\",\n        \"markas\",\n        \"marked\",\n        \"marker\",\n        \"market\",\n        \"markup\",\n        \"marlin\",\n        \"marmot\",\n        \"maroon\",\n        \"marque\",\n        \"marred\",\n        \"marrer\",\n        \"marrow\",\n        \"marshy\",\n        \"marten\",\n        \"martin\",\n        \"martyr\",\n        \"marula\",\n        \"marvel\",\n        \"masada\",\n        \"masala\",\n        \"mascot\",\n        \"mashed\",\n        \"masher\",\n        \"mashes\",\n        \"mashup\",\n        \"masked\",\n        \"masker\",\n        \"masons\",\n        \"masque\",\n        \"massed\",\n        \"masses\",\n        \"massif\",\n        \"masted\",\n        \"master\",\n        \"mastic\",\n        \"maters\",\n        \"mateys\",\n        \"mating\",\n        \"matrix\",\n        \"matron\",\n        \"matted\",\n        \"matter\",\n        \"mattes\",\n        \"mature\",\n        \"mauled\",\n        \"mauler\",\n        \"mauves\",\n        \"mavens\",\n        \"mavins\",\n        \"maxima\",\n        \"maxims\",\n        \"maybug\",\n        \"mayday\",\n        \"mayfly\",\n        \"mayhap\",\n        \"mayhem\",\n        \"mayors\",\n        \"mazers\",\n        \"mazier\",\n        \"mazily\",\n        \"mazing\",\n        \"mbilas\",\n        \"mbiras\",\n        \"meadow\",\n        \"meager\",\n        \"meagre\",\n        \"meaner\",\n        \"meanie\",\n        \"meanly\",\n        \"measly\",\n        \"meatus\",\n        \"medals\",\n        \"meddle\",\n        \"medfly\",\n        \"medial\",\n        \"median\",\n        \"medias\",\n        \"medics\",\n        \"medium\",\n        \"medius\",\n        \"medley\",\n        \"medusa\",\n        \"meeker\",\n        \"meekly\",\n        \"meeter\",\n        \"melded\",\n        \"melees\",\n        \"mellow\",\n        \"melody\",\n        \"melons\",\n        \"melted\",\n        \"melter\",\n        \"member\",\n        \"memoir\",\n        \"memory\",\n        \"menace\",\n        \"menage\",\n        \"mended\",\n        \"mender\",\n        \"menial\",\n        \"menses\",\n        \"mental\",\n        //\"mentor\",\n        \"meotic\",\n        \"meowed\",\n        \"meower\",\n        \"mercer\",\n        \"merely\",\n        \"merest\",\n        \"merged\",\n        \"merger\",\n        \"merges\",\n        \"mering\",\n        \"merits\",\n        \"merman\",\n        \"mermen\",\n        \"meront\",\n        \"meshed\",\n        \"mesher\",\n        \"meshes\",\n        \"mesons\",\n        \"messed\",\n        \"messes\",\n        \"metals\",\n        \"meteor\",\n        \"meters\",\n        \"method\",\n        \"methyl\",\n        \"metres\",\n        \"metric\",\n        \"metros\",\n        \"mettle\",\n        \"mewing\",\n        \"miasma\",\n        \"miasms\",\n        \"mickey\",\n        \"micron\",\n        \"midair\",\n        \"midday\",\n        \"midden\",\n        \"middle\",\n        \"midges\",\n        \"midget\",\n        \"midgut\",\n        \"midrib\",\n        \"midway\",\n        \"miffed\",\n        \"mighty\",\n        \"milder\",\n        \"mildew\",\n        \"mildly\",\n        \"milieu\",\n        \"milked\",\n        \"milker\",\n        \"milled\",\n        \"miller\",\n        \"millet\",\n        \"milord\",\n        \"mimeos\",\n        \"mimics\",\n        \"miming\",\n        \"mimosa\",\n        \"minced\",\n        \"mincer\",\n        \"minces\",\n        \"mindat\",\n        \"minded\",\n        \"minder\",\n        \"miners\",\n        \"mingle\",\n        \"minify\",\n        \"minima\",\n        \"minimi\",\n        \"minims\",\n        \"mining\",\n        \"minion\",\n        \"minnow\",\n        \"minors\",\n        \"minted\",\n        \"minter\",\n        \"minuet\",\n        \"minute\",\n        \"minxes\",\n        \"minyan\",\n        \"miosis\",\n        \"mirage\",\n        \"miring\",\n        \"mirror\",\n        \"misadd\",\n        \"misaim\",\n        \"miscue\",\n        \"miscut\",\n        \"misdid\",\n        \"misers\",\n        \"misery\",\n        \"misfed\",\n        \"misfit\",\n        \"mishap\",\n        \"miskey\",\n        \"mislay\",\n        \"misled\",\n        \"mislit\",\n        \"mispay\",\n        \"mispen\",\n        \"missal\",\n        \"missay\",\n        \"missed\",\n        \"misses\",\n        \"missus\",\n        \"misted\",\n        \"mister\",\n        \"mistle\",\n        \"mistry\",\n        \"misuse\",\n        \"miters\",\n        \"mitier\",\n        \"mitral\",\n        \"mitred\",\n        \"mitres\",\n        \"mitted\",\n        \"mitten\",\n        \"mixers\",\n        \"mixing\",\n        \"mixups\",\n        \"mizzly\",\n        \"mnemic\",\n        \"mnemon\",\n        \"moaned\",\n        \"moaner\",\n        \"moated\",\n        \"mobbed\",\n        \"mobber\",\n        \"mobile\",\n        \"mochas\",\n        \"mocked\",\n        \"mocker\",\n        \"mockup\",\n        \"modals\",\n        \"modded\",\n        \"models\",\n        \"modems\",\n        \"modern\",\n        \"modest\",\n        \"modify\",\n        \"modula\",\n        \"module\",\n        \"moduli\",\n        \"modulo\",\n        \"moguls\",\n        \"mohair\",\n        \"mohars\",\n        \"mohawk\",\n        \"mohels\",\n        \"moiety\",\n        \"molars\",\n        \"molded\",\n        \"molest\",\n        \"molted\",\n        \"molten\",\n        \"moment\",\n        \"mommas\",\n        \"monads\",\n        \"monday\",\n        \"moneys\",\n        \"monger\",\n        \"mongol\",\n        \"monies\",\n        \"monism\",\n        \"monkey\",\n        \"monoid\",\n        \"monops\",\n        \"months\",\n        \"mooing\",\n        \"moolah\",\n        \"mooned\",\n        \"moored\",\n        \"mooted\",\n        \"mooter\",\n        \"mopeds\",\n        \"mopers\",\n        \"mopery\",\n        \"mopier\",\n        \"moping\",\n        \"mopish\",\n        \"mopped\",\n        \"mopper\",\n        \"moppet\",\n        \"morale\",\n        \"morals\",\n        \"morass\",\n        \"morays\",\n        \"morbid\",\n        \"morels\",\n        \"morgue\",\n        \"morons\",\n        \"morose\",\n        \"morphs\",\n        \"morrow\",\n        \"morsel\",\n        \"mortal\",\n        \"mortar\",\n        \"morula\",\n        \"mosaic\",\n        \"mosque\",\n        \"mossed\",\n        \"mosses\",\n        \"mostly\",\n        \"motels\",\n        \"mother\",\n        \"motifs\",\n        \"motile\",\n        \"motion\",\n        \"motive\",\n        \"motley\",\n        \"motors\",\n        \"mottle\",\n        \"mottos\",\n        \"moujik\",\n        \"moulds\",\n        \"mouldy\",\n        \"moulin\",\n        \"moults\",\n        \"mounds\",\n        \"mounts\",\n        \"mourns\",\n        \"moused\",\n        \"mouser\",\n        \"mouses\",\n        \"mousey\",\n        \"mousse\",\n        \"mouths\",\n        \"mouthy\",\n        \"movers\",\n        \"movies\",\n        \"moving\",\n        \"mowers\",\n        \"mowing\",\n        \"mucins\",\n        \"mucked\",\n        \"mucker\",\n        \"mucoid\",\n        \"mucosa\",\n        \"mucous\",\n        \"mucros\",\n        \"mudcap\",\n        \"muddle\",\n        \"mudlog\",\n        \"muesli\",\n        \"muffed\",\n        \"muffin\",\n        \"muffle\",\n        \"mugful\",\n        \"mugged\",\n        \"mugger\",\n        \"mujiks\",\n        \"mukluk\",\n        \"mulish\",\n        \"mulled\",\n        \"muller\",\n        \"mullet\",\n        \"mumble\",\n        \"mumbly\",\n        \"munged\",\n        \"munger\",\n        \"munify\",\n        \"munite\",\n        \"muonic\",\n        \"muppet\",\n        \"murals\",\n        \"murder\",\n        \"murine\",\n        \"murmur\",\n        \"muroid\",\n        \"murray\",\n        \"muscle\",\n        \"muscly\",\n        \"musers\",\n        \"museum\",\n        \"mushed\",\n        \"musher\",\n        \"mushes\",\n        \"musics\",\n        \"musing\",\n        \"muskeg\",\n        \"musket\",\n        \"muskox\",\n        \"muslin\",\n        \"mussel\",\n        \"muster\",\n        \"mutant\",\n        \"mutate\",\n        \"mutely\",\n        \"mutest\",\n        \"muting\",\n        \"mutiny\",\n        \"mutism\",\n        \"mutter\",\n        \"mutton\",\n        \"mutual\",\n        \"muzhik\",\n        \"muzjik\",\n        \"muzzle\",\n        \"mycoin\",\n        \"myelin\",\n        \"myogen\",\n        \"myomas\",\n        \"myonym\",\n        \"myopia\",\n        \"myopic\",\n        \"myosin\",\n        \"myotic\",\n        \"myotis\",\n        \"myriad\",\n        \"myrtle\",\n        \"myself\",\n        \"mystic\",\n        \"mythic\",\n        \"mythos\",\n        \"myxoid\",\n        \"myxoma\",\n        \"nabbed\",\n        \"nabobs\",\n        \"nachos\",\n        \"nagged\",\n        \"nagger\",\n        \"naiads\",\n        \"nailed\",\n        \"nailer\",\n        \"nairas\",\n        \"naiver\",\n        \"nakfas\",\n        \"namely\",\n        \"namers\",\n        \"naming\",\n        \"nanobe\",\n        \"napkin\",\n        \"napped\",\n        \"napper\",\n        \"narrow\",\n        \"nasals\",\n        \"nation\",\n        \"native\",\n        \"natter\",\n        \"nature\",\n        \"naught\",\n        \"nausea\",\n        \"navajo\",\n        \"navels\",\n        \"navies\",\n        \"nazism\",\n        \"neaped\",\n        \"nearby\",\n        \"neared\",\n        \"nearer\",\n        \"nearly\",\n        \"neaten\",\n        \"neater\",\n        \"neatly\",\n        \"nebula\",\n        \"necked\",\n        \"necker\",\n        \"necral\",\n        \"nectar\",\n        \"needed\",\n        \"needer\",\n        \"needle\",\n        \"negate\",\n        \"neighs\",\n        \"nekton\",\n        \"nelson\",\n        \"nepers\",\n        \"nephew\",\n        \"nerved\",\n        \"nerves\",\n        \"nested\",\n        \"nester\",\n        \"nestle\",\n        \"netcom\",\n        \"nether\",\n        \"netted\",\n        \"netter\",\n        \"nettle\",\n        \"neumes\",\n        \"neural\",\n        \"neuron\",\n        \"neuter\",\n        \"newbie\",\n        \"newels\",\n        \"newest\",\n        \"newish\",\n        \"newton\",\n        \"ngwees\",\n        \"niacin\",\n        \"nibbed\",\n        \"nibber\",\n        \"nibble\",\n        \"nicely\",\n        \"nicest\",\n        \"nicety\",\n        \"niches\",\n        \"nicked\",\n        \"nickel\",\n        \"nicker\",\n        \"nickle\",\n        \"nieces\",\n        \"niello\",\n        \"niggly\",\n        \"nights\",\n        \"nimble\",\n        \"nimbly\",\n        \"ninety\",\n        \"ninjas\",\n        \"ninths\",\n        \"nipped\",\n        \"nipper\",\n        \"nipple\",\n        \"nitric\",\n        \"nitryl\",\n        \"nitwit\",\n        \"nobled\",\n        \"nobler\",\n        \"nobles\",\n        \"nobody\",\n        \"nocked\",\n        \"nodded\",\n        \"nodder\",\n        \"nodule\",\n        \"noggin\",\n        \"noised\",\n        \"noises\",\n        \"noload\",\n        \"nomads\",\n        \"nonage\",\n        \"nonane\",\n        \"nonart\",\n        \"nonces\",\n        \"noncop\",\n        \"noncut\",\n        \"nondog\",\n        \"nonegg\",\n        \"nonego\",\n        \"nonene\",\n        \"nonfan\",\n        \"nonfat\",\n        \"nonfed\",\n        \"nonfee\",\n        \"nonfit\",\n        \"nongay\",\n        \"nongod\",\n        \"nonjew\",\n        \"nonjob\",\n        \"nonlab\",\n        \"nonmud\",\n        \"nonoil\",\n        \"nonpro\",\n        \"nontax\",\n        \"nonuse\",\n        \"nonyne\",\n        \"noodle\",\n        \"noosed\",\n        \"nooser\",\n        \"nooses\",\n        \"nordic\",\n        \"norite\",\n        \"normal\",\n        \"normed\",\n        \"nosean\",\n        \"noseys\",\n        \"nosier\",\n        \"nosily\",\n        \"nosing\",\n        \"nosode\",\n        \"notary\",\n        \"notate\",\n        \"notice\",\n        \"notify\",\n        \"noting\",\n        \"notion\",\n        \"notist\",\n        \"nougat\",\n        \"nought\",\n        \"novels\",\n        \"novice\",\n        \"noways\",\n        \"nowise\",\n        \"nozzle\",\n        \"nuance\",\n        \"nubbed\",\n        \"nubble\",\n        \"nubbly\",\n        \"nuclei\",\n        \"nudest\",\n        \"nudged\",\n        \"nudges\",\n        \"nudies\",\n        \"nudify\",\n        \"nudism\",\n        \"nudist\",\n        \"nudity\",\n        \"nugget\",\n        \"nuking\",\n        \"numbed\",\n        \"number\",\n        \"numbly\",\n        \"nursed\",\n        \"nurser\",\n        \"nurses\",\n        \"nutjob\",\n        \"nutlet\",\n        \"nutmeg\",\n        \"nutted\",\n        \"nutter\",\n        \"nuzzle\",\n        \"nylons\",\n        \"nymphs\",\n        \"oafish\",\n        \"oaring\",\n        \"obduce\",\n        \"obduct\",\n        \"obeyed\",\n        \"obeyer\",\n        \"object\",\n        \"objure\",\n        \"oblast\",\n        \"oblate\",\n        \"oblige\",\n        \"obloid\",\n        \"oblong\",\n        \"oboist\",\n        \"obsess\",\n        \"obtain\",\n        \"obtuse\",\n        \"obvert\",\n        \"occult\",\n        \"occupy\",\n        \"occurs\",\n        \"oceans\",\n        \"ocelot\",\n        \"ochers\",\n        \"ochrea\",\n        \"ochres\",\n        \"octals\",\n        \"octane\",\n        \"octant\",\n        \"octave\",\n        \"octene\",\n        \"octets\",\n        \"octopi\",\n        \"octose\",\n        \"octyne\",\n        \"ocular\",\n        \"oculus\",\n        \"oddest\",\n        \"oddity\",\n        \"odessa\",\n        \"odious\",\n        \"odists\",\n        \"odonym\",\n        \"odored\",\n        \"odours\",\n        \"oecist\",\n        \"oedema\",\n        \"oeuvre\",\n        \"offcut\",\n        \"offend\",\n        \"offers\",\n        \"office\",\n        \"offset\",\n        \"oghams\",\n        \"oglers\",\n        \"ogling\",\n        \"ogress\",\n        \"oikist\",\n        \"oilcan\",\n        \"oilers\",\n        \"oilier\",\n        \"oiling\",\n        \"oilman\",\n        \"oilmen\",\n        \"oilrig\",\n        \"oinked\",\n        \"okayed\",\n        \"oldest\",\n        \"oldies\",\n        \"oleate\",\n        \"olefin\",\n        \"olives\",\n        \"omegas\",\n        \"omelet\",\n        \"omnium\",\n        \"onchip\",\n        \"oneoff\",\n        \"oneway\",\n        \"onions\",\n        \"oniony\",\n        \"online\",\n        \"onload\",\n        \"onsets\",\n        \"onsite\",\n        \"onward\",\n        \"onyxes\",\n        \"oocyst\",\n        \"oocyte\",\n        \"oodles\",\n        \"oogamy\",\n        \"oohing\",\n        \"ooidal\",\n        \"oolite\",\n        \"oolith\",\n        \"oology\",\n        \"oolong\",\n        \"ootids\",\n        \"ootype\",\n        \"oozers\",\n        \"oozier\",\n        \"oozily\",\n        \"oozing\",\n        \"oozoid\",\n        \"opaque\",\n        \"opcode\",\n        \"opened\",\n        \"opener\",\n        \"openly\",\n        \"operas\",\n        \"operon\",\n        \"opiate\",\n        \"opined\",\n        \"opines\",\n        \"opioid\",\n        \"opiums\",\n        \"oppose\",\n        \"optics\",\n        \"opting\",\n        \"option\",\n        \"oracle\",\n        \"orally\",\n        \"orange\",\n        \"orated\",\n        \"orates\",\n        \"orator\",\n        \"orbits\",\n        \"orchid\",\n        \"ordain\",\n        \"ordeal\",\n        \"orders\",\n        \"organs\",\n        \"orient\",\n        \"origin\",\n        \"oriole\",\n        \"ornate\",\n        \"ornery\",\n        \"orogen\",\n        \"oronym\",\n        \"orphan\",\n        \"oscars\",\n        \"oscula\",\n        \"osmium\",\n        \"osprey\",\n        \"ossein\",\n        \"ossify\",\n        \"osteon\",\n        \"ostler\",\n        \"others\",\n        \"otitis\",\n        \"otters\",\n        \"ouijas\",\n        \"ounces\",\n        \"ousted\",\n        \"ouster\",\n        \"outage\",\n        \"outbat\",\n        \"outbeg\",\n        \"outbet\",\n        \"outbid\",\n        \"outbox\",\n        \"outbud\",\n        \"outbuy\",\n        \"outcry\",\n        \"outdid\",\n        \"outers\",\n        \"outfit\",\n        \"outfly\",\n        \"outfox\",\n        \"outgas\",\n        \"outgun\",\n        \"outing\",\n        \"outjet\",\n        \"outjut\",\n        \"outlaw\",\n        \"outlay\",\n        \"outled\",\n        \"outlet\",\n        \"outlie\",\n        \"outman\",\n        \"output\",\n        \"outran\",\n        \"outrap\",\n        \"outrig\",\n        \"outrun\",\n        \"outsat\",\n        \"outsaw\",\n        \"outsee\",\n        \"outset\",\n        \"outsit\",\n        \"outwit\",\n        \"ovated\",\n        \"ovates\",\n        \"overdo\",\n        \"overly\",\n        \"overos\",\n        \"ovines\",\n        \"ovoids\",\n        \"ovular\",\n        \"ovules\",\n        \"owlery\",\n        \"owlets\",\n        \"owlier\",\n        \"owling\",\n        \"owlish\",\n        \"owners\",\n        \"owning\",\n        \"oxalic\",\n        \"oxbane\",\n        \"oxbird\",\n        \"oxbows\",\n        \"oxboys\",\n        \"oxcart\",\n        \"oxeyes\",\n        \"oxford\",\n        \"oxherd\",\n        \"oxhide\",\n        \"oxides\",\n        \"oxidic\",\n        \"oxlike\",\n        \"oxlips\",\n        \"oxslip\",\n        \"oxtail\",\n        \"oxters\",\n        \"oxygen\",\n        \"oxymel\",\n        \"oxyopy\",\n        \"oyster\",\n        \"ozalid\",\n        \"paanga\",\n        \"pablum\",\n        \"pacers\",\n        \"pacify\",\n        \"pacing\",\n        \"packed\",\n        \"packer\",\n        \"packet\",\n        \"padded\",\n        \"padder\",\n        \"paddle\",\n        \"padres\",\n        \"paella\",\n        \"pagans\",\n        \"pagers\",\n        \"paging\",\n        \"pagoda\",\n        \"pained\",\n        \"paints\",\n        \"painty\",\n        \"paired\",\n        \"pajama\",\n        \"palace\",\n        \"palate\",\n        \"palely\",\n        \"palest\",\n        \"palled\",\n        \"pallet\",\n        \"pallid\",\n        \"pallor\",\n        \"palmar\",\n        \"palmed\",\n        \"palter\",\n        \"paltry\",\n        \"pampas\",\n        \"pamper\",\n        \"pandas\",\n        \"pander\",\n        \"panels\",\n        \"panfry\",\n        \"panful\",\n        \"panics\",\n        \"panini\",\n        \"panino\",\n        \"panned\",\n        \"panted\",\n        \"panter\",\n        \"pantry\",\n        \"papacy\",\n        \"papaya\",\n        \"papers\",\n        \"papery\",\n        \"pappus\",\n        \"papule\",\n        \"papyri\",\n        \"parade\",\n        \"parcel\",\n        \"parchy\",\n        \"pardon\",\n        \"parent\",\n        \"parers\",\n        \"parged\",\n        \"parges\",\n        \"parget\",\n        \"pariah\",\n        \"paring\",\n        \"parish\",\n        \"parity\",\n        \"parkas\",\n        \"parked\",\n        \"parker\",\n        \"parlay\",\n        \"parley\",\n        \"parlor\",\n        \"parody\",\n        \"parole\",\n        \"parral\",\n        \"parrot\",\n        \"parsec\",\n        \"parsed\",\n        \"parser\",\n        \"parses\",\n        \"parson\",\n        \"parted\",\n        \"partly\",\n        \"pascal\",\n        \"passed\",\n        \"passer\",\n        \"passes\",\n        \"pastas\",\n        \"pasted\",\n        \"pastel\",\n        \"pastes\",\n        \"pastey\",\n        \"pastor\",\n        \"pastry\",\n        \"pataca\",\n        \"patchy\",\n        \"patent\",\n        \"pathos\",\n        \"patina\",\n        \"patine\",\n        \"patios\",\n        \"patrol\",\n        \"patron\",\n        \"patted\",\n        \"patter\",\n        \"paunch\",\n        \"pauper\",\n        \"paused\",\n        \"pauses\",\n        \"paving\",\n        \"pawing\",\n        \"pawned\",\n        \"paxwax\",\n        \"payday\",\n        \"payees\",\n        \"payers\",\n        \"paying\",\n        \"payoff\",\n        \"payola\",\n        \"payout\",\n        \"peaces\",\n        \"peachy\",\n        \"peaked\",\n        \"pealed\",\n        \"peanut\",\n        \"peapod\",\n        \"pearls\",\n        \"pearly\",\n        \"pebble\",\n        \"pebbly\",\n        \"pecans\",\n        \"pecked\",\n        \"pecker\",\n        \"pecten\",\n        \"pectic\",\n        \"pectin\",\n        \"pedals\",\n        \"pedant\",\n        \"pedate\",\n        \"peddle\",\n        \"peeked\",\n        \"peeled\",\n        \"peeler\",\n        \"peeped\",\n        \"peeper\",\n        \"peered\",\n        \"peeved\",\n        \"peever\",\n        \"peeves\",\n        \"peewee\",\n        \"pegbox\",\n        \"pegged\",\n        \"pegleg\",\n        \"pelite\",\n        \"pellet\",\n        \"pelted\",\n        \"pelter\",\n        \"pelvic\",\n        \"pelvis\",\n        \"pencil\",\n        \"pended\",\n        \"penile\",\n        \"penman\",\n        \"penmen\",\n        \"penned\",\n        \"penner\",\n        \"penpal\",\n        \"pentup\",\n        \"pentyl\",\n        \"penult\",\n        \"penury\",\n        \"people\",\n        \"pepful\",\n        \"pepped\",\n        \"pepper\",\n        \"pepsin\",\n        \"peptic\",\n        \"perils\",\n        \"period\",\n        \"perish\",\n        \"perked\",\n        \"permed\",\n        \"permit\",\n        \"person\",\n        \"perter\",\n        \"pertly\",\n        \"perula\",\n        \"perule\",\n        \"peruse\",\n        \"pester\",\n        \"pestle\",\n        \"pestos\",\n        \"petals\",\n        \"petard\",\n        \"peters\",\n        \"petite\",\n        \"petnap\",\n        \"petrel\",\n        \"petrol\",\n        \"petted\",\n        \"pewees\",\n        \"pewits\",\n        \"pewter\",\n        \"phased\",\n        \"phases\",\n        \"pheese\",\n        \"pheeze\",\n        \"phenol\",\n        \"phenom\",\n        \"phenyl\",\n        \"pheons\",\n        \"phizes\",\n        \"phizog\",\n        \"phlegm\",\n        \"phloem\",\n        \"phobia\",\n        \"phobic\",\n        \"phoned\",\n        \"phones\",\n        \"phoney\",\n        \"phonic\",\n        \"phonon\",\n        \"phooey\",\n        \"photic\",\n        \"photon\",\n        \"photos\",\n        \"phoxim\",\n        \"phrase\",\n        \"phylae\",\n        \"phylum\",\n        \"phymas\",\n        \"phytic\",\n        \"pianos\",\n        \"piazza\",\n        \"pickax\",\n        \"picked\",\n        \"picker\",\n        \"picket\",\n        \"pickle\",\n        \"pickup\",\n        \"picnic\",\n        \"picric\",\n        \"piddle\",\n        \"piddly\",\n        \"pieced\",\n        \"pieces\",\n        \"pieing\",\n        \"pieman\",\n        \"piemen\",\n        \"pierce\",\n        \"pietas\",\n        \"pietic\",\n        \"piffle\",\n        \"pigeon\",\n        \"pigged\",\n        \"piglet\",\n        \"pigout\",\n        \"pigpen\",\n        \"pigsty\",\n        \"pikers\",\n        \"piking\",\n        \"pilafs\",\n        \"pilate\",\n        \"pileup\",\n        \"pilfer\",\n        \"piling\",\n        \"pillar\",\n        \"pillow\",\n        \"piloid\",\n        \"pilose\",\n        \"pilots\",\n        \"pimped\",\n        \"pimple\",\n        \"pimply\",\n        \"pincer\",\n        \"pineal\",\n        \"pinene\",\n        \"pinged\",\n        \"pinger\",\n        \"pingle\",\n        \"pingos\",\n        \"pining\",\n        \"pinion\",\n        \"pinked\",\n        \"pinken\",\n        \"pinker\",\n        \"pinkey\",\n        \"pinkie\",\n        \"pinkly\",\n        \"pinnae\",\n        \"pinned\",\n        \"pintos\",\n        \"pinups\",\n        \"pinyin\",\n        \"pinyon\",\n        \"pipers\",\n        \"piping\",\n        \"pipits\",\n        \"pippin\",\n        \"piqued\",\n        \"piques\",\n        \"piquet\",\n        \"piracy\",\n        \"pirate\",\n        \"pisoid\",\n        \"pistil\",\n        \"pistol\",\n        \"piston\",\n        \"pitchy\",\n        \"pithed\",\n        \"pithes\",\n        \"pitied\",\n        \"pitier\",\n        \"pities\",\n        \"pitman\",\n        \"pitmen\",\n        \"pitons\",\n        \"pitsaw\",\n        \"pitted\",\n        \"pitter\",\n        \"pivots\",\n        \"pixels\",\n        \"pixies\",\n        \"pixmap\",\n        \"pizzas\",\n        \"placed\",\n        \"placer\",\n        \"places\",\n        \"placid\",\n        \"plague\",\n        \"plaids\",\n        \"plains\",\n        \"plaits\",\n        \"planar\",\n        \"planed\",\n        \"planer\",\n        \"planes\",\n        \"planet\",\n        \"planks\",\n        \"plants\",\n        \"plaque\",\n        \"plashy\",\n        \"plasma\",\n        \"plasty\",\n        \"plated\",\n        \"plater\",\n        \"plates\",\n        \"playas\",\n        \"played\",\n        \"player\",\n        \"plazas\",\n        \"pleads\",\n        \"please\",\n        \"pleats\",\n        \"plebby\",\n        \"pledge\",\n        \"pleion\",\n        \"plenty\",\n        \"pleura\",\n        \"plexor\",\n        \"plexus\",\n        \"pliant\",\n        \"pliers\",\n        \"plight\",\n        \"plinks\",\n        \"plinth\",\n        \"ploids\",\n        \"ploidy\",\n        \"plonks\",\n        \"plooks\",\n        \"plooky\",\n        \"plough\",\n        \"plouks\",\n        \"plouky\",\n        \"plover\",\n        \"plowed\",\n        \"plower\",\n        \"plucks\",\n        \"pluckt\",\n        \"plucky\",\n        \"pluffs\",\n        \"pluffy\",\n        \"pluggy\",\n        \"plugin\",\n        \"plumbs\",\n        \"plumed\",\n        \"plumes\",\n        \"plummy\",\n        \"plumps\",\n        \"plunge\",\n        \"plunks\",\n        \"plunky\",\n        \"plural\",\n        \"pluses\",\n        \"plushy\",\n        \"pluton\",\n        \"plying\",\n        \"pocked\",\n        \"pocket\",\n        \"podand\",\n        \"podded\",\n        \"podium\",\n        \"podsol\",\n        \"podzol\",\n        \"poetic\",\n        \"poetly\",\n        \"poetry\",\n        \"points\",\n        \"pointy\",\n        \"poised\",\n        \"poises\",\n        \"poison\",\n        \"pokers\",\n        \"pokier\",\n        \"poking\",\n        \"polars\",\n        \"poleax\",\n        \"police\",\n        \"policy\",\n        \"poling\",\n        \"polios\",\n        \"polish\",\n        \"polite\",\n        \"polkas\",\n        \"pollax\",\n        \"polled\",\n        \"pollen\",\n        \"pollex\",\n        \"polyol\",\n        \"polyps\",\n        \"pomade\",\n        \"pomelo\",\n        \"pommel\",\n        \"pompom\",\n        \"pomsky\",\n        \"poncho\",\n        \"ponder\",\n        \"ponies\",\n        \"poodle\",\n        \"poofed\",\n        \"poofer\",\n        \"poohed\",\n        \"pooled\",\n        \"pooped\",\n        \"pooper\",\n        \"poorer\",\n        \"poorly\",\n        \"popest\",\n        \"popeye\",\n        \"popgun\",\n        \"poplar\",\n        \"poplin\",\n        \"popoff\",\n        \"popped\",\n        \"popper\",\n        \"popups\",\n        \"poring\",\n        \"porked\",\n        \"porker\",\n        \"poroma\",\n        \"porose\",\n        \"porous\",\n        \"portal\",\n        \"ported\",\n        \"porter\",\n        \"portly\",\n        \"posada\",\n        \"posers\",\n        \"poseur\",\n        \"poshed\",\n        \"posher\",\n        \"posies\",\n        \"posing\",\n        \"posits\",\n        \"posses\",\n        \"posset\",\n        \"possum\",\n        \"postal\",\n        \"posted\",\n        \"poster\",\n        \"postil\",\n        \"postop\",\n        \"potage\",\n        \"potash\",\n        \"potato\",\n        \"potboy\",\n        \"poteen\",\n        \"potent\",\n        \"potful\",\n        \"pother\",\n        \"potica\",\n        \"potion\",\n        \"potman\",\n        \"potmen\",\n        \"potpie\",\n        \"potted\",\n        \"potter\",\n        \"pottle\",\n        \"pouffe\",\n        \"poults\",\n        \"pounce\",\n        \"pounds\",\n        \"poured\",\n        \"pourer\",\n        \"pouted\",\n        \"pouter\",\n        \"powder\",\n        \"powers\",\n        \"powwow\",\n        \"poxier\",\n        \"praise\",\n        \"prance\",\n        \"pranks\",\n        \"prated\",\n        \"prater\",\n        \"prates\",\n        \"prawns\",\n        \"praxis\",\n        \"prayed\",\n        \"prayer\",\n        \"preach\",\n        \"preamp\",\n        \"prearm\",\n        \"prebuy\",\n        \"precut\",\n        \"predry\",\n        \"preens\",\n        \"prefab\",\n        \"prefer\",\n        \"prefit\",\n        \"prefix\",\n        \"premed\",\n        \"premet\",\n        \"premix\",\n        \"preons\",\n        \"prepay\",\n        \"preppy\",\n        \"preset\",\n        \"pretan\",\n        \"pretax\",\n        \"pretty\",\n        \"prevue\",\n        \"prewar\",\n        \"preyed\",\n        \"priced\",\n        \"pricer\",\n        \"prices\",\n        \"pricey\",\n        \"pricks\",\n        \"prided\",\n        \"prides\",\n        \"priest\",\n        \"primal\",\n        \"primed\",\n        \"primer\",\n        \"primes\",\n        \"primly\",\n        \"primps\",\n        \"prince\",\n        \"prints\",\n        \"prions\",\n        \"priors\",\n        \"priory\",\n        \"prisms\",\n        \"prismy\",\n        \"prison\",\n        \"prissy\",\n        \"prized\",\n        \"prizes\",\n        \"probed\",\n        \"prober\",\n        \"probes\",\n        \"profit\",\n        \"prolix\",\n        \"prolog\",\n        \"promos\",\n        \"prompt\",\n        \"proner\",\n        \"prongs\",\n        \"proofs\",\n        \"propel\",\n        \"proper\",\n        \"propyl\",\n        \"prosed\",\n        \"proton\",\n        \"proved\",\n        \"proven\",\n        \"prover\",\n        \"proves\",\n        \"prowls\",\n        \"prudes\",\n        \"pruned\",\n        \"pruner\",\n        \"prunes\",\n        \"pryers\",\n        \"prying\",\n        \"psalms\",\n        \"psalmy\",\n        \"psions\",\n        \"psyche\",\n        \"psycho\",\n        \"psychs\",\n        \"pterin\",\n        \"ptosis\",\n        \"public\",\n        \"pucker\",\n        \"puddle\",\n        \"puddly\",\n        \"pueblo\",\n        \"puffed\",\n        \"puffer\",\n        \"puffin\",\n        \"pugils\",\n        \"pukers\",\n        \"puking\",\n        \"pulled\",\n        \"puller\",\n        \"pullet\",\n        \"pulley\",\n        \"pullup\",\n        \"pulped\",\n        \"pulper\",\n        \"pulpit\",\n        \"pulsar\",\n        \"pulsed\",\n        \"pulser\",\n        \"pulses\",\n        \"pumelo\",\n        \"pumice\",\n        \"pummel\",\n        \"pumped\",\n        \"pumper\",\n        \"punchy\",\n        \"pundit\",\n        \"punier\",\n        \"punish\",\n        \"punned\",\n        \"punner\",\n        \"punted\",\n        \"punter\",\n        \"pupate\",\n        \"pupils\",\n        \"pupped\",\n        \"puppet\",\n        \"pureed\",\n        \"purees\",\n        \"purely\",\n        \"purest\",\n        \"purfle\",\n        \"purfly\",\n        \"purged\",\n        \"purger\",\n        \"purges\",\n        \"purify\",\n        \"purine\",\n        \"purism\",\n        \"purist\",\n        \"purity\",\n        \"purlin\",\n        \"purple\",\n        \"purply\",\n        \"purred\",\n        \"pursed\",\n        \"purser\",\n        \"purses\",\n        \"pursue\",\n        \"purvey\",\n        \"pushed\",\n        \"pusher\",\n        \"pushes\",\n        \"pushup\",\n        \"pusses\",\n        \"putoff\",\n        \"putrid\",\n        \"putsch\",\n        \"putted\",\n        \"putter\",\n        \"puttos\",\n        \"puzzle\",\n        \"pyemia\",\n        \"pyemic\",\n        \"pyjama\",\n        \"pylons\",\n        \"pylori\",\n        \"pyrene\",\n        \"pyrite\",\n        \"pyrone\",\n        \"pyrope\",\n        \"python\",\n        \"pyuria\",\n        \"qabala\",\n        \"qabals\",\n        \"qabbal\",\n        \"qanats\",\n        \"qindar\",\n        \"qintar\",\n        \"qiviut\",\n        \"quacks\",\n        \"quacky\",\n        \"quaffs\",\n        \"quails\",\n        \"quaint\",\n        \"quaked\",\n        \"quaker\",\n        \"quakes\",\n        \"qualms\",\n        \"qualmy\",\n        \"quanta\",\n        \"quarks\",\n        \"quarry\",\n        \"quarts\",\n        \"quartz\",\n        \"quasar\",\n        \"quaver\",\n        \"qubits\",\n        \"qubyte\",\n        \"queasy\",\n        \"queazy\",\n        \"queens\",\n        \"queers\",\n        \"queery\",\n        \"quelch\",\n        \"quells\",\n        \"quench\",\n        \"quests\",\n        \"quetch\",\n        \"queued\",\n        \"queuer\",\n        \"queues\",\n        \"qugate\",\n        \"quiche\",\n        \"quiets\",\n        \"quiffs\",\n        \"quight\",\n        \"quills\",\n        \"quilly\",\n        \"quilts\",\n        \"quince\",\n        \"quinic\",\n        \"quinoa\",\n        \"quinol\",\n        \"quinsy\",\n        \"quints\",\n        \"quippy\",\n        \"quired\",\n        \"quires\",\n        \"quirks\",\n        \"quirky\",\n        \"quited\",\n        \"quiver\",\n        \"quizzy\",\n        \"qulliq\",\n        \"quorum\",\n        \"quotas\",\n        \"quoted\",\n        \"quotee\",\n        \"quoter\",\n        \"quotes\",\n        \"qutrit\",\n        \"rababs\",\n        \"rabbet\",\n        \"rabbis\",\n        \"rabbit\",\n        \"rabble\",\n        \"rabies\",\n        \"raceme\",\n        \"racers\",\n        \"rachet\",\n        \"rachis\",\n        \"racial\",\n        \"racier\",\n        \"racily\",\n        \"racing\",\n        \"racism\",\n        \"racist\",\n        \"racked\",\n        \"racker\",\n        \"racket\",\n        \"racoon\",\n        \"radars\",\n        \"radial\",\n        \"radian\",\n        \"radios\",\n        \"radish\",\n        \"radium\",\n        \"radius\",\n        \"radome\",\n        \"radons\",\n        \"radula\",\n        \"raffia\",\n        \"raffle\",\n        \"rafted\",\n        \"rafter\",\n        \"ragbag\",\n        \"ragers\",\n        \"ragged\",\n        \"raging\",\n        \"ragout\",\n        \"ragtag\",\n        \"ragtop\",\n        \"raided\",\n        \"raider\",\n        \"railed\",\n        \"rained\",\n        \"raised\",\n        \"raiser\",\n        \"raises\",\n        \"raisin\",\n        \"rakers\",\n        \"raking\",\n        \"rakish\",\n        \"ramble\",\n        \"ramets\",\n        \"ramify\",\n        \"ramjet\",\n        \"rammed\",\n        \"rammer\",\n        \"ramose\",\n        \"ramped\",\n        \"ramrod\",\n        \"rancid\",\n        \"rancor\",\n        \"random\",\n        \"ranged\",\n        \"ranger\",\n        \"ranges\",\n        \"ranids\",\n        \"ranked\",\n        \"ranker\",\n        \"ransom\",\n        \"ranted\",\n        \"ranter\",\n        \"rapers\",\n        \"raphid\",\n        \"rapids\",\n        \"raping\",\n        \"rapist\",\n        \"rapped\",\n        \"rappel\",\n        \"rapper\",\n        \"raptly\",\n        \"raptor\",\n        \"rarefy\",\n        \"rarely\",\n        \"rarest\",\n        \"rarify\",\n        \"raring\",\n        \"rarity\",\n        \"rascal\",\n        \"rasher\",\n        \"rashes\",\n        \"rashly\",\n        \"rasped\",\n        \"rasper\",\n        \"raster\",\n        \"raters\",\n        \"rather\",\n        \"ratify\",\n        \"rating\",\n        \"ration\",\n        \"ratios\",\n        \"ratted\",\n        \"ratter\",\n        \"rattle\",\n        \"rattly\",\n        \"ratton\",\n        \"raucid\",\n        \"raunch\",\n        \"ravage\",\n        \"ravels\",\n        \"ravens\",\n        \"ravers\",\n        \"ravine\",\n        \"raving\",\n        \"ravish\",\n        \"rawest\",\n        \"raxing\",\n        \"raying\",\n        \"rayons\",\n        \"razeed\",\n        \"razees\",\n        \"razers\",\n        \"razing\",\n        \"razors\",\n        \"razzed\",\n        \"razzes\",\n        \"reachy\",\n        \"reacts\",\n        \"readds\",\n        \"reader\",\n        \"readme\",\n        \"reagin\",\n        \"reaked\",\n        \"reaker\",\n        \"realer\",\n        \"really\",\n        \"realms\",\n        \"realty\",\n        \"reamed\",\n        \"reamer\",\n        \"reaped\",\n        \"reaper\",\n        \"reared\",\n        \"rearms\",\n        \"reasks\",\n        \"reason\",\n        \"reasts\",\n        \"reaved\",\n        \"reaver\",\n        \"reaves\",\n        \"reavow\",\n        \"rebabs\",\n        \"reback\",\n        \"rebags\",\n        \"rebait\",\n        \"rebake\",\n        \"rebale\",\n        \"rebans\",\n        \"rebars\",\n        \"rebase\",\n        \"rebate\",\n        \"rebath\",\n        \"rebell\",\n        \"rebels\",\n        \"rebids\",\n        \"rebill\",\n        \"rebind\",\n        \"rebins\",\n        \"rebite\",\n        \"rebled\",\n        \"reblog\",\n        \"reboil\",\n        \"rebond\",\n        \"rebook\",\n        \"reboot\",\n        \"rebops\",\n        \"rebore\",\n        \"reborn\",\n        \"rebred\",\n        \"rebuff\",\n        \"rebuke\",\n        \"reburn\",\n        \"rebury\",\n        \"rebute\",\n        \"rebuts\",\n        \"rebuys\",\n        \"recall\",\n        \"recane\",\n        \"recant\",\n        \"recaps\",\n        \"recase\",\n        \"recast\",\n        \"recede\",\n        \"recent\",\n        \"recess\",\n        \"rechew\",\n        \"recipe\",\n        \"recite\",\n        \"recked\",\n        \"reckon\",\n        \"reclad\",\n        \"reclip\",\n        \"reclog\",\n        \"recoal\",\n        \"recoat\",\n        \"recock\",\n        \"recode\",\n        \"recoil\",\n        \"recoin\",\n        \"recomb\",\n        \"recons\",\n        \"recook\",\n        \"recool\",\n        \"recopy\",\n        \"record\",\n        \"recork\",\n        \"recoup\",\n        \"rectal\",\n        \"rector\",\n        \"rectum\",\n        \"recure\",\n        \"recurl\",\n        \"recurs\",\n        \"recuse\",\n        \"recuts\",\n        \"redact\",\n        \"redate\",\n        \"redden\",\n        \"redder\",\n        \"redeal\",\n        \"redeem\",\n        \"redefy\",\n        \"redeny\",\n        \"redeye\",\n        \"redial\",\n        \"redink\",\n        \"redips\",\n        \"redipt\",\n        \"redock\",\n        \"redone\",\n        \"redons\",\n        \"redose\",\n        \"redrag\",\n        \"redraw\",\n        \"redrew\",\n        \"redrug\",\n        \"redubs\",\n        \"reduce\",\n        \"reduct\",\n        \"redyed\",\n        \"redyes\",\n        \"reecho\",\n        \"reedit\",\n        \"reefed\",\n        \"reeked\",\n        \"reeker\",\n        \"reeled\",\n        \"reeler\",\n        \"reemit\",\n        \"reests\",\n        \"reeves\",\n        \"reface\",\n        \"refect\",\n        \"refeed\",\n        \"refers\",\n        \"refile\",\n        \"refill\",\n        \"refilm\",\n        \"refind\",\n        \"refine\",\n        \"refire\",\n        \"refits\",\n        \"reflag\",\n        \"reflex\",\n        \"reflip\",\n        \"reflog\",\n        \"reflow\",\n        \"reflux\",\n        \"refold\",\n        \"reform\",\n        \"refret\",\n        \"refuel\",\n        \"refuge\",\n        \"refund\",\n        \"refurl\",\n        \"refuse\",\n        \"refute\",\n        \"regain\",\n        \"regale\",\n        \"regard\",\n        \"regave\",\n        \"regear\",\n        \"regels\",\n        \"regent\",\n        \"reggae\",\n        \"regild\",\n        \"regime\",\n        \"region\",\n        \"regive\",\n        \"reglow\",\n        \"reglue\",\n        \"regrab\",\n        \"regret\",\n        \"regrew\",\n        \"regrip\",\n        \"regrow\",\n        \"rehabs\",\n        \"rehang\",\n        \"reharm\",\n        \"rehash\",\n        \"reheap\",\n        \"rehear\",\n        \"reheat\",\n        \"reheel\",\n        \"rehems\",\n        \"rehide\",\n        \"rehire\",\n        \"rehome\",\n        \"rehone\",\n        \"rehook\",\n        \"rehung\",\n        \"reiced\",\n        \"reices\",\n        \"reigns\",\n        \"reined\",\n        \"reinks\",\n        \"reject\",\n        \"rejets\",\n        \"rejigs\",\n        \"rejogs\",\n        \"rejoin\",\n        \"rekeys\",\n        \"reknit\",\n        \"reknot\",\n        \"relace\",\n        \"relaid\",\n        \"relast\",\n        \"relate\",\n        \"relays\",\n        \"relent\",\n        \"relics\",\n        \"relict\",\n        \"relied\",\n        \"relief\",\n        \"relier\",\n        \"relies\",\n        \"reline\",\n        \"relink\",\n        \"relish\",\n        \"relist\",\n        \"relive\",\n        \"reload\",\n        \"reloan\",\n        \"relock\",\n        \"relogs\",\n        \"relook\",\n        \"remade\",\n        \"remail\",\n        \"remain\",\n        \"remake\",\n        \"remand\",\n        \"remaps\",\n        \"remark\",\n        \"remate\",\n        \"remedy\",\n        \"remeet\",\n        \"remelt\",\n        \"remend\",\n        \"remesh\",\n        \"remind\",\n        \"remine\",\n        \"remint\",\n        \"remiss\",\n        \"remits\",\n        \"remixt\",\n        \"remold\",\n        \"remote\",\n        \"remove\",\n        \"remows\",\n        \"renail\",\n        \"renals\",\n        \"rename\",\n        \"render\",\n        \"renege\",\n        \"renest\",\n        \"renets\",\n        \"renews\",\n        \"rennet\",\n        \"rennin\",\n        \"renown\",\n        \"rental\",\n        \"rented\",\n        \"renter\",\n        \"reoils\",\n        \"reopen\",\n        \"repace\",\n        \"repack\",\n        \"repage\",\n        \"repaid\",\n        \"repair\",\n        \"repark\",\n        \"repass\",\n        \"repave\",\n        \"repays\",\n        \"repeal\",\n        \"repeat\",\n        \"repeel\",\n        \"repegs\",\n        \"repels\",\n        \"repens\",\n        \"repent\",\n        \"reperk\",\n        \"repile\",\n        \"repine\",\n        \"repins\",\n        \"repipe\",\n        \"replan\",\n        \"replay\",\n        \"repled\",\n        \"replot\",\n        \"replow\",\n        \"replug\",\n        \"repoll\",\n        \"repops\",\n        \"report\",\n        \"repose\",\n        \"repost\",\n        \"repots\",\n        \"repour\",\n        \"repray\",\n        \"repump\",\n        \"repute\",\n        \"rerack\",\n        \"rerape\",\n        \"reread\",\n        \"rerent\",\n        \"reroll\",\n        \"reroof\",\n        \"reroot\",\n        \"reruns\",\n        \"resaid\",\n        \"resail\",\n        \"resale\",\n        \"resand\",\n        \"resave\",\n        \"resawn\",\n        \"resaws\",\n        \"resays\",\n        \"rescan\",\n        \"rescue\",\n        \"reseal\",\n        \"reseat\",\n        \"resect\",\n        \"reseed\",\n        \"reseek\",\n        \"resell\",\n        \"resend\",\n        \"resent\",\n        \"resets\",\n        \"resewn\",\n        \"resews\",\n        \"reshim\",\n        \"reship\",\n        \"reshod\",\n        \"reshoe\",\n        \"reshot\",\n        \"reshow\",\n        \"reside\",\n        \"resift\",\n        \"resign\",\n        \"resins\",\n        \"resiny\",\n        \"resist\",\n        \"resits\",\n        \"resize\",\n        \"reskew\",\n        \"reskim\",\n        \"resnap\",\n        \"resnub\",\n        \"resoak\",\n        \"resods\",\n        \"resoil\",\n        \"resold\",\n        \"resole\",\n        \"resorb\",\n        \"resort\",\n        \"resown\",\n        \"resows\",\n        \"respan\",\n        \"respin\",\n        \"respot\",\n        \"respun\",\n        \"rested\",\n        \"restem\",\n        \"restep\",\n        \"rester\",\n        \"restir\",\n        \"result\",\n        \"resume\",\n        \"resums\",\n        \"retack\",\n        \"retags\",\n        \"retail\",\n        \"retain\",\n        \"retake\",\n        \"retape\",\n        \"retaps\",\n        \"retard\",\n        \"retask\",\n        \"reteam\",\n        \"retear\",\n        \"reteed\",\n        \"retees\",\n        \"retell\",\n        \"retest\",\n        \"rethaw\",\n        \"retied\",\n        \"reties\",\n        \"retile\",\n        \"retill\",\n        \"retilt\",\n        \"retime\",\n        \"retina\",\n        \"retint\",\n        \"retire\",\n        \"retold\",\n        \"retook\",\n        \"retool\",\n        \"retore\",\n        \"retorn\",\n        \"retort\",\n        \"retour\",\n        \"retrap\",\n        \"retree\",\n        \"retrim\",\n        \"retune\",\n        \"return\",\n        \"retuse\",\n        \"retype\",\n        \"reurge\",\n        \"reused\",\n        \"reuses\",\n        \"revamp\",\n        \"reveal\",\n        \"revels\",\n        \"reverb\",\n        \"revere\",\n        \"revers\",\n        \"revert\",\n        \"revery\",\n        \"review\",\n        \"revile\",\n        \"revise\",\n        \"revive\",\n        \"revoke\",\n        \"revolt\",\n        \"revote\",\n        \"revues\",\n        \"revved\",\n        \"rewalk\",\n        \"reward\",\n        \"rewarm\",\n        \"rewarn\",\n        \"rewash\",\n        \"reweds\",\n        \"reweld\",\n        \"rewets\",\n        \"rewind\",\n        \"rewipe\",\n        \"rewire\",\n        \"reword\",\n        \"rework\",\n        \"rewove\",\n        \"rewrap\",\n        \"rezero\",\n        \"rezips\",\n        \"rezone\",\n        \"rhemes\",\n        \"rhesus\",\n        \"rhetic\",\n        \"rhetor\",\n        \"rheums\",\n        \"rheumy\",\n        \"rhexes\",\n        \"rhexia\",\n        \"rhexis\",\n        \"rhinos\",\n        \"rhombi\",\n        \"rhombs\",\n        \"rhotic\",\n        \"rhymed\",\n        \"rhymer\",\n        \"rhymes\",\n        \"rhythm\",\n        \"ribbed\",\n        \"ribber\",\n        \"ribbon\",\n        \"ribeye\",\n        \"riblet\",\n        \"ribose\",\n        \"ricers\",\n        \"richer\",\n        \"riches\",\n        \"richly\",\n        \"ricing\",\n        \"ricked\",\n        \"ridded\",\n        \"ridden\",\n        \"riddle\",\n        \"riders\",\n        \"ridged\",\n        \"ridges\",\n        \"riding\",\n        \"rifled\",\n        \"rifler\",\n        \"rifles\",\n        \"rifted\",\n        \"rigged\",\n        \"rights\",\n        \"righty\",\n        \"rigids\",\n        \"rigors\",\n        \"rigour\",\n        \"riling\",\n        \"rilles\",\n        \"rillet\",\n        \"riming\",\n        \"rimmed\",\n        \"rimose\",\n        \"rinded\",\n        \"ringed\",\n        \"ringer\",\n        \"rinked\",\n        \"rinker\",\n        \"rinsed\",\n        \"rinser\",\n        \"rinses\",\n        \"rioted\",\n        \"rioter\",\n        \"ripely\",\n        \"ripens\",\n        \"ripest\",\n        \"ripoff\",\n        \"ripped\",\n        \"ripper\",\n        \"ripple\",\n        \"ripply\",\n        \"risers\",\n        \"rising\",\n        \"risked\",\n        \"risker\",\n        \"risque\",\n        \"ritual\",\n        \"rivals\",\n        \"rivers\",\n        \"rivets\",\n        \"riving\",\n        \"riyals\",\n        \"roadie\",\n        \"roamed\",\n        \"roamer\",\n        \"roared\",\n        \"roarer\",\n        \"roasts\",\n        \"robabs\",\n        \"robbed\",\n        \"robber\",\n        \"robbin\",\n        \"robing\",\n        \"robins\",\n        \"robots\",\n        \"robust\",\n        \"rocked\",\n        \"rocker\",\n        \"rocket\",\n        \"rococo\",\n        \"rodded\",\n        \"rodder\",\n        \"rodent\",\n        \"rodeos\",\n        \"roding\",\n        \"rogers\",\n        \"rogues\",\n        \"roiled\",\n        \"rolled\",\n        \"roller\",\n        \"romped\",\n        \"romper\",\n        \"roofed\",\n        \"roofer\",\n        \"rooked\",\n        \"rookie\",\n        \"roomed\",\n        \"roomer\",\n        \"roosts\",\n        \"rooted\",\n        \"rooter\",\n        \"ropers\",\n        \"ropier\",\n        \"ropily\",\n        \"roping\",\n        \"rosary\",\n        \"rosier\",\n        \"rosily\",\n        \"rosins\",\n        \"roster\",\n        \"rotary\",\n        \"rotate\",\n        \"rotgut\",\n        \"rotons\",\n        \"rotors\",\n        \"rotted\",\n        \"rotten\",\n        \"rotter\",\n        \"rotund\",\n        \"roughs\",\n        \"roughy\",\n        \"rounds\",\n        \"roused\",\n        \"rouses\",\n        \"routed\",\n        \"router\",\n        \"routes\",\n        \"rovers\",\n        \"roving\",\n        \"rowers\",\n        \"rowing\",\n        \"royals\",\n        \"rubabs\",\n        \"rubbed\",\n        \"rubber\",\n        \"rubble\",\n        \"rubefy\",\n        \"rubied\",\n        \"rubies\",\n        \"rubles\",\n        \"ruboff\",\n        \"rubout\",\n        \"rubric\",\n        \"ruckus\",\n        \"rudder\",\n        \"rudely\",\n        \"rudest\",\n        \"rudite\",\n        \"rueful\",\n        \"ruffed\",\n        \"ruffle\",\n        \"ruffly\",\n        \"rufous\",\n        \"rugged\",\n        \"rugger\",\n        \"rugose\",\n        \"rugrat\",\n        \"ruined\",\n        \"rulers\",\n        \"ruling\",\n        \"rumbas\",\n        \"rumble\",\n        \"rumbly\",\n        \"rummer\",\n        \"rumors\",\n        \"rumour\",\n        \"rumped\",\n        \"rumple\",\n        \"rumply\",\n        \"rumpus\",\n        \"runins\",\n        \"runnel\",\n        \"runner\",\n        \"runoff\",\n        \"runway\",\n        \"rupees\",\n        \"rupiah\",\n        \"rushed\",\n        \"rusher\",\n        \"rushes\",\n        \"russet\",\n        \"rusted\",\n        \"ruster\",\n        \"rustic\",\n        \"rustle\",\n        \"rutile\",\n        \"rutted\",\n        \"sabers\",\n        \"sabino\",\n        \"sabled\",\n        \"sables\",\n        \"sabred\",\n        \"sabres\",\n        \"sachet\",\n        \"sacked\",\n        \"sacker\",\n        \"sacral\",\n        \"sacred\",\n        \"sacrum\",\n        \"sadden\",\n        \"sadder\",\n        \"saddle\",\n        \"sadism\",\n        \"sadist\",\n        \"safari\",\n        \"safely\",\n        \"safest\",\n        \"safety\",\n        \"sagely\",\n        \"sagest\",\n        \"sagged\",\n        \"sagger\",\n        \"sagier\",\n        \"sailed\",\n        \"sailer\",\n        \"sailor\",\n        \"saints\",\n        \"salaam\",\n        \"salads\",\n        \"salame\",\n        \"salami\",\n        \"salary\",\n        \"saline\",\n        \"saliva\",\n        \"sallow\",\n        \"salmon\",\n        \"salons\",\n        \"saloon\",\n        \"salted\",\n        \"salter\",\n        \"salute\",\n        \"salved\",\n        \"salver\",\n        \"salves\",\n        \"salvia\",\n        \"samara\",\n        \"sambar\",\n        \"sambas\",\n        \"samekh\",\n        \"sample\",\n        \"sandal\",\n        \"sanded\",\n        \"sander\",\n        \"sanely\",\n        \"sanest\",\n        \"sanity\",\n        \"sansus\",\n        \"sanzas\",\n        \"sapped\",\n        \"sapper\",\n        \"sarape\",\n        \"sashay\",\n        \"sashed\",\n        \"sashes\",\n        \"sassed\",\n        \"sasses\",\n        \"sateen\",\n        \"sating\",\n        \"satins\",\n        \"satiny\",\n        \"satire\",\n        \"satrap\",\n        \"satyrs\",\n        \"sauced\",\n        \"saucer\",\n        \"sauces\",\n        \"saunas\",\n        \"sautes\",\n        \"savage\",\n        \"savant\",\n        \"savers\",\n        \"saving\",\n        \"savior\",\n        \"savors\",\n        \"savory\",\n        \"savour\",\n        \"sawers\",\n        \"sawfly\",\n        \"sawing\",\n        \"sawman\",\n        \"sawmen\",\n        \"sawpit\",\n        \"sawyer\",\n        \"sayers\",\n        \"sayest\",\n        \"saying\",\n        \"scabby\",\n        \"scalar\",\n        \"scalds\",\n        \"scaled\",\n        \"scaler\",\n        \"scales\",\n        \"scalps\",\n        \"scampi\",\n        \"scamps\",\n        \"scanty\",\n        \"scapes\",\n        \"scarab\",\n        \"scarce\",\n        \"scared\",\n        \"scarer\",\n        \"scares\",\n        \"scarey\",\n        \"scarfs\",\n        \"scarps\",\n        \"scarry\",\n        \"scathe\",\n        \"scatty\",\n        \"scenes\",\n        \"scenic\",\n        \"scents\",\n        \"schema\",\n        \"scheme\",\n        \"schism\",\n        \"schist\",\n        \"schizy\",\n        \"schlep\",\n        //\"school\",\n        \"schorl\",\n        \"schtik\",\n        \"schwas\",\n        \"scilla\",\n        \"sclera\",\n        \"scoffs\",\n        \"scolds\",\n        \"scolex\",\n        \"sconce\",\n        \"scones\",\n        \"scoops\",\n        \"scoots\",\n        \"scoped\",\n        \"scopes\",\n        \"scorch\",\n        \"scored\",\n        \"scorer\",\n        \"scores\",\n        \"scoria\",\n        \"scorns\",\n        \"scotch\",\n        \"scours\",\n        \"scouts\",\n        \"scowls\",\n        \"scrags\",\n        \"scrape\",\n        \"scraps\",\n        \"scrawl\",\n        \"scream\",\n        \"screed\",\n        \"screen\",\n        \"screes\",\n        \"screws\",\n        \"screwy\",\n        \"scribe\",\n        \"scried\",\n        \"scries\",\n        \"scrimp\",\n        \"scrims\",\n        \"scrips\",\n        \"script\",\n        \"scroll\",\n        \"scrota\",\n        \"scrubs\",\n        \"scruff\",\n        \"scrums\",\n        \"scryer\",\n        \"scubas\",\n        \"scuffs\",\n        \"sculks\",\n        \"sculls\",\n        \"sculpt\",\n        \"scummy\",\n        \"scurry\",\n        \"scurvy\",\n        \"scutes\",\n        \"scutum\",\n        \"scuzzy\",\n        \"scythe\",\n        \"seabag\",\n        \"seabed\",\n        \"seadog\",\n        \"seafog\",\n        \"seahog\",\n        \"sealed\",\n        \"sealer\",\n        \"seaman\",\n        \"seamed\",\n        \"seamen\",\n        \"seamer\",\n        \"seance\",\n        \"searat\",\n        \"search\",\n        \"seared\",\n        \"searer\",\n        \"season\",\n        \"seated\",\n        \"seater\",\n        \"seaway\",\n        \"secant\",\n        \"seccos\",\n        \"secede\",\n        \"secern\",\n        \"second\",\n        \"secret\",\n        \"sector\",\n        \"secund\",\n        \"secure\",\n        \"sedans\",\n        \"sedate\",\n        \"sedges\",\n        \"seduce\",\n        \"sedums\",\n        \"seeded\",\n        \"seeder\",\n        \"seeing\",\n        \"seeker\",\n        \"seemed\",\n        \"seemly\",\n        \"seeped\",\n        \"seesaw\",\n        \"seethe\",\n        \"segued\",\n        \"segues\",\n        \"seismo\",\n        \"seitan\",\n        \"seiten\",\n        \"seized\",\n        \"seizer\",\n        \"seizes\",\n        \"seldom\",\n        \"select\",\n        \"selfie\",\n        \"seller\",\n        \"selsyn\",\n        \"selves\",\n        \"semens\",\n        \"senary\",\n        \"senate\",\n        \"sender\",\n        \"senile\",\n        \"senior\",\n        \"sennas\",\n        \"senora\",\n        \"senors\",\n        \"sensed\",\n        \"senses\",\n        \"sensor\",\n        \"sentry\",\n        \"sepals\",\n        \"sepias\",\n        \"sepoys\",\n        \"sepsis\",\n        \"septae\",\n        \"septal\",\n        \"septet\",\n        \"septic\",\n        \"septum\",\n        \"sequel\",\n        \"sequin\",\n        \"seracs\",\n        \"serail\",\n        \"serape\",\n        \"seraph\",\n        \"serene\",\n        \"serest\",\n        \"serges\",\n        \"serial\",\n        \"series\",\n        \"serifs\",\n        \"serine\",\n        \"sering\",\n        \"sermon\",\n        \"serous\",\n        \"serums\",\n        \"serval\",\n        \"served\",\n        \"server\",\n        \"serves\",\n        \"sesame\",\n        \"sestet\",\n        \"setoff\",\n        \"settee\",\n        \"setter\",\n        \"settle\",\n        \"settop\",\n        \"setups\",\n        \"sevens\",\n        \"severe\",\n        \"severs\",\n        \"sewage\",\n        \"sewers\",\n        \"sewing\",\n        \"sexier\",\n        \"sexily\",\n        \"sexism\",\n        \"sexist\",\n        \"sextan\",\n        \"sextet\",\n        \"sexton\",\n        \"sexual\",\n        \"shabby\",\n        \"shacks\",\n        \"shaded\",\n        \"shader\",\n        \"shades\",\n        \"shadow\",\n        \"shafts\",\n        \"shaggy\",\n        \"shaken\",\n        \"shaker\",\n        \"shakes\",\n        \"shaled\",\n        \"shales\",\n        \"shaley\",\n        \"shaman\",\n        \"shamed\",\n        \"shames\",\n        \"shanks\",\n        \"shanty\",\n        \"shaped\",\n        \"shaper\",\n        \"shapes\",\n        \"shards\",\n        \"shared\",\n        \"sharer\",\n        \"shares\",\n        \"sharks\",\n        \"sharps\",\n        \"sharpy\",\n        \"shaved\",\n        \"shaven\",\n        \"shaver\",\n        \"shaves\",\n        \"shawls\",\n        \"sheafs\",\n        \"shears\",\n        \"sheath\",\n        \"sheave\",\n        \"sheens\",\n        \"sheeps\",\n        \"sheers\",\n        \"sheets\",\n        \"sheikh\",\n        \"sheiks\",\n        \"shells\",\n        \"shelly\",\n        \"shelve\",\n        \"sheqel\",\n        \"sherif\",\n        \"sherpa\",\n        \"sherry\",\n        \"shewed\",\n        \"shield\",\n        \"shiest\",\n        \"shifts\",\n        \"shifty\",\n        \"shills\",\n        \"shimmy\",\n        \"shined\",\n        \"shiner\",\n        \"shines\",\n        \"shinto\",\n        \"shinty\",\n        \"shires\",\n        \"shirks\",\n        \"shirts\",\n        \"shiver\",\n        \"shlock\",\n        \"shmear\",\n        \"shmoes\",\n        \"shoals\",\n        \"shoaly\",\n        \"shocks\",\n        \"shoddy\",\n        \"shoers\",\n        \"shofar\",\n        \"shogun\",\n        \"shooed\",\n        \"shooks\",\n        \"shoots\",\n        \"shored\",\n        \"shores\",\n        \"shorts\",\n        \"shorty\",\n        \"should\",\n        \"shouts\",\n        \"shouty\",\n        \"shoved\",\n        \"shovel\",\n        \"shover\",\n        \"shoves\",\n        \"showed\",\n        \"shower\",\n        \"shrank\",\n        \"shreds\",\n        \"shrewd\",\n        \"shrews\",\n        \"shriek\",\n        \"shrift\",\n        \"shrike\",\n        \"shrill\",\n        \"shrimp\",\n        \"shrine\",\n        \"shrink\",\n        \"shrive\",\n        \"shroud\",\n        \"shrubs\",\n        \"shrugs\",\n        \"shrunk\",\n        \"shtick\",\n        \"shtiks\",\n        \"shucks\",\n        \"shunts\",\n        \"shutin\",\n        \"shutup\",\n        \"shyers\",\n        \"shyest\",\n        \"shying\",\n        \"sicced\",\n        \"sicked\",\n        \"sicken\",\n        \"sicker\",\n        \"sickle\",\n        \"sickly\",\n        \"sickos\",\n        \"siding\",\n        \"sidled\",\n        \"sidler\",\n        \"sidles\",\n        \"sieged\",\n        \"sieges\",\n        \"sienna\",\n        \"sierra\",\n        \"siesta\",\n        \"sieved\",\n        \"sieves\",\n        \"sifted\",\n        \"sifter\",\n        \"sighed\",\n        \"sigher\",\n        \"sights\",\n        \"sigmas\",\n        \"signal\",\n        \"signed\",\n        \"signee\",\n        \"signer\",\n        \"signet\",\n        \"signor\",\n        \"sikidy\",\n        \"silane\",\n        \"silent\",\n        \"silica\",\n        \"silken\",\n        \"silted\",\n        \"silvan\",\n        \"silver\",\n        \"simian\",\n        \"simile\",\n        \"simmer\",\n        \"simper\",\n        \"simple\",\n        \"simply\",\n        \"sinews\",\n        \"sinewy\",\n        \"sinful\",\n        \"singed\",\n        \"singer\",\n        \"singes\",\n        \"single\",\n        \"singly\",\n        \"sinker\",\n        \"sinned\",\n        \"sinner\",\n        \"sinoid\",\n        \"sinter\",\n        \"siphon\",\n        \"sipped\",\n        \"sipper\",\n        \"sirens\",\n        \"siring\",\n        \"siskin\",\n        \"sister\",\n        \"sitars\",\n        \"sitcom\",\n        \"siting\",\n        \"sitins\",\n        \"sitter\",\n        \"situps\",\n        \"sixers\",\n        \"sixgun\",\n        \"sixing\",\n        \"sixmos\",\n        \"sixths\",\n        \"sizars\",\n        \"sizers\",\n        \"sizing\",\n        \"sizzle\",\n        \"skaith\",\n        \"skated\",\n        \"skater\",\n        \"skates\",\n        \"skeely\",\n        \"skelps\",\n        \"sketch\",\n        \"skewed\",\n        \"skewer\",\n        \"skibob\",\n        \"skiddy\",\n        \"skidoo\",\n        \"skiers\",\n        \"skiffs\",\n        \"skiing\",\n        \"skijor\",\n        \"skills\",\n        \"skimps\",\n        \"skimpy\",\n        \"skinks\",\n        \"skinny\",\n        \"skirls\",\n        \"skirts\",\n        \"skulks\",\n        \"skulls\",\n        \"skunks\",\n        \"skunky\",\n        \"slacks\",\n        \"slaggy\",\n        \"slalom\",\n        \"slangs\",\n        \"slangy\",\n        \"slants\",\n        \"slated\",\n        \"slater\",\n        \"slates\",\n        \"slatey\",\n        \"slaved\",\n        \"slaves\",\n        \"slavic\",\n        \"slayed\",\n        \"slayer\",\n        \"sleave\",\n        \"sleaze\",\n        \"sleazy\",\n        \"sledge\",\n        \"sleeks\",\n        \"sleeps\",\n        \"sleepy\",\n        \"sleets\",\n        \"sleety\",\n        \"sleeve\",\n        \"sleezy\",\n        \"sleigh\",\n        \"sleuth\",\n        \"slewed\",\n        \"sliced\",\n        \"slicer\",\n        \"slices\",\n        \"slicks\",\n        \"slider\",\n        \"slides\",\n        \"sliest\",\n        \"slight\",\n        \"slimed\",\n        \"slimes\",\n        \"slimly\",\n        \"slings\",\n        \"slinks\",\n        \"slinky\",\n        \"slippy\",\n        \"slipup\",\n        \"slitty\",\n        \"sliver\",\n        \"slobby\",\n        \"slogan\",\n        \"sloops\",\n        \"sloped\",\n        \"sloper\",\n        \"slopes\",\n        \"sloppy\",\n        \"sloshy\",\n        \"sloths\",\n        \"slouch\",\n        \"slough\",\n        \"sloven\",\n        \"slowed\",\n        \"slower\",\n        \"slowly\",\n        \"sludge\",\n        \"sludgy\",\n        \"sluice\",\n        \"slummy\",\n        \"slumps\",\n        \"slumpy\",\n        \"slurps\",\n        \"slurry\",\n        \"slushy\",\n        \"slyest\",\n        \"smacks\",\n        \"smalls\",\n        \"smarms\",\n        \"smarmy\",\n        \"smarts\",\n        \"smarty\",\n        \"smears\",\n        \"smeary\",\n        \"smells\",\n        \"smelly\",\n        \"smelts\",\n        \"smiled\",\n        \"smiler\",\n        \"smiles\",\n        \"smiley\",\n        \"smirch\",\n        \"smirks\",\n        \"smirky\",\n        \"smiter\",\n        \"smites\",\n        \"smiths\",\n        \"smithy\",\n        \"smocks\",\n        \"smoggy\",\n        \"smoked\",\n        \"smoker\",\n        \"smokes\",\n        \"smokey\",\n        \"smooch\",\n        \"smooth\",\n        \"smudge\",\n        \"smudgy\",\n        \"smugly\",\n        \"snacks\",\n        \"snafus\",\n        \"snaggy\",\n        \"snails\",\n        \"snaily\",\n        \"snaked\",\n        \"snakes\",\n        \"snakey\",\n        \"snappy\",\n        \"snared\",\n        \"snarer\",\n        \"snares\",\n        \"snarfs\",\n        \"snarks\",\n        \"snarky\",\n        \"snarls\",\n        \"snarly\",\n        \"snatch\",\n        \"snazzy\",\n        \"sneaks\",\n        \"sneaky\",\n        \"sneers\",\n        \"sneeze\",\n        \"sneezy\",\n        \"snicks\",\n        \"snider\",\n        \"sniffs\",\n        \"sniffy\",\n        \"sniped\",\n        \"sniper\",\n        \"snipes\",\n        \"snippy\",\n        \"snitch\",\n        \"snivel\",\n        \"snobby\",\n        \"snoeks\",\n        \"snoods\",\n        \"snoops\",\n        \"snoopy\",\n        \"snoots\",\n        \"snooty\",\n        \"snooze\",\n        \"snoozy\",\n        \"snopes\",\n        \"snored\",\n        \"snorer\",\n        \"snores\",\n        \"snorts\",\n        \"snorty\",\n        \"snotty\",\n        \"snouts\",\n        \"snouty\",\n        \"snowed\",\n        \"snubby\",\n        \"snudge\",\n        \"snuffs\",\n        \"snuffy\",\n        \"snugly\",\n        \"soaked\",\n        \"soaker\",\n        \"soaped\",\n        \"soaper\",\n        \"soared\",\n        \"soarer\",\n        \"sobbed\",\n        \"sobber\",\n        \"sobers\",\n        \"sobors\",\n        \"soccer\",\n        \"social\",\n        \"socked\",\n        \"socket\",\n        \"sodded\",\n        \"sodden\",\n        \"sodger\",\n        \"sodium\",\n        \"sodomy\",\n        \"soffit\",\n        \"softas\",\n        \"soften\",\n        \"softer\",\n        \"softie\",\n        \"softly\",\n        \"sogged\",\n        \"soiled\",\n        \"soiree\",\n        \"solace\",\n        \"solder\",\n        \"solely\",\n        \"solemn\",\n        \"solids\",\n        \"soloed\",\n        \"solute\",\n        \"solved\",\n        \"solver\",\n        \"solves\",\n        \"somber\",\n        \"sombre\",\n        \"somite\",\n        \"somoni\",\n        \"sonars\",\n        \"sonata\",\n        \"sondes\",\n        \"sonics\",\n        \"sonify\",\n        \"sonnet\",\n        \"sooner\",\n        \"sooted\",\n        \"soothe\",\n        \"sooths\",\n        \"sophta\",\n        \"sopite\",\n        \"sopors\",\n        \"sopped\",\n        \"sopper\",\n        \"sorbed\",\n        \"sorbet\",\n        \"sorbic\",\n        \"sordid\",\n        \"sorely\",\n        \"sorest\",\n        \"sorgho\",\n        \"sorgos\",\n        \"sorrel\",\n        \"sorrow\",\n        \"sortal\",\n        \"sorted\",\n        \"sorter\",\n        \"sortie\",\n        \"sought\",\n        \"souled\",\n        \"sounds\",\n        \"souped\",\n        \"source\",\n        \"soured\",\n        \"sourer\",\n        \"sourly\",\n        \"sowers\",\n        \"sowing\",\n        \"sozzle\",\n        \"sozzly\",\n        \"spaced\",\n        \"spacer\",\n        \"spaces\",\n        \"spacey\",\n        \"spaded\",\n        \"spader\",\n        \"spades\",\n        \"spadix\",\n        \"spalls\",\n        \"spammy\",\n        \"spanks\",\n        \"spared\",\n        \"sparer\",\n        \"spares\",\n        \"sparks\",\n        \"sparky\",\n        \"sparry\",\n        \"sparse\",\n        \"spasms\",\n        \"spathe\",\n        \"spawns\",\n        \"spayed\",\n        \"speaks\",\n        \"spears\",\n        \"specie\",\n        \"specks\",\n        \"specky\",\n        \"speech\",\n        \"speeds\",\n        \"speedy\",\n        \"spells\",\n        \"spends\",\n        \"sperms\",\n        \"spermy\",\n        \"spewed\",\n        \"spewer\",\n        \"sphene\",\n        \"sphere\",\n        \"sphery\",\n        \"sphinx\",\n        \"spiced\",\n        \"spicer\",\n        \"spices\",\n        \"spicey\",\n        \"spider\",\n        \"spiels\",\n        \"spiers\",\n        \"spiffs\",\n        \"spiffy\",\n        \"spigot\",\n        \"spiked\",\n        \"spiker\",\n        \"spikes\",\n        \"spills\",\n        \"spinal\",\n        \"spined\",\n        \"spinel\",\n        \"spines\",\n        \"spinet\",\n        \"spinny\",\n        \"spinon\",\n        \"spiral\",\n        \"spirea\",\n        \"spired\",\n        \"spires\",\n        \"spirit\",\n        \"spirts\",\n        \"spited\",\n        \"spites\",\n        \"splash\",\n        \"splats\",\n        \"splays\",\n        \"spleen\",\n        \"splice\",\n        \"spline\",\n        \"splint\",\n        \"splits\",\n        \"splosh\",\n        \"spoils\",\n        \"spoilt\",\n        \"spoken\",\n        \"spokes\",\n        \"sponge\",\n        \"spongy\",\n        \"spoofs\",\n        \"spoofy\",\n        \"spooks\",\n        \"spooky\",\n        \"spools\",\n        \"spoons\",\n        \"spoors\",\n        \"spored\",\n        \"spores\",\n        \"sporic\",\n        \"sports\",\n        \"sporty\",\n        \"spotty\",\n        \"spouse\",\n        \"spouts\",\n        \"sprags\",\n        \"sprain\",\n        \"sprang\",\n        \"sprats\",\n        \"sprawl\",\n        \"sprays\",\n        \"spread\",\n        \"sprees\",\n        \"sprier\",\n        \"sprigs\",\n        \"spring\",\n        \"sprint\",\n        \"sprite\",\n        \"sprits\",\n        \"spritz\",\n        \"sprout\",\n        \"spruce\",\n        \"sprucy\",\n        \"sprung\",\n        \"spryer\",\n        \"spryly\",\n        \"spumed\",\n        \"spumes\",\n        \"spunky\",\n        \"spurge\",\n        \"spurns\",\n        \"spurry\",\n        \"spurts\",\n        \"sputum\",\n        \"spying\",\n        \"squabs\",\n        \"squads\",\n        \"squall\",\n        \"square\",\n        \"squash\",\n        \"squats\",\n        \"squawk\",\n        \"squeak\",\n        \"squeal\",\n        \"squibs\",\n        \"squids\",\n        \"squint\",\n        \"squire\",\n        \"squirm\",\n        \"squirt\",\n        \"squish\",\n        \"sringa\",\n        \"stable\",\n        \"stably\",\n        \"stacks\",\n        \"staffs\",\n        \"staged\",\n        \"stager\",\n        \"stages\",\n        \"stains\",\n        \"stairs\",\n        \"staked\",\n        \"stakes\",\n        \"stalag\",\n        \"staled\",\n        \"staler\",\n        \"stales\",\n        \"stalks\",\n        \"stalky\",\n        \"stalls\",\n        \"stamen\",\n        \"stamps\",\n        \"stance\",\n        \"stanch\",\n        \"stands\",\n        \"stanol\",\n        \"stanza\",\n        \"stapes\",\n        \"staple\",\n        \"starch\",\n        \"stared\",\n        \"starer\",\n        \"stares\",\n        \"starry\",\n        \"starts\",\n        \"starve\",\n        \"stasis\",\n        \"stated\",\n        \"staten\",\n        \"stater\",\n        \"states\",\n        \"static\",\n        \"statin\",\n        \"statue\",\n        \"status\",\n        \"staved\",\n        \"staves\",\n        \"stayed\",\n        \"stayer\",\n        \"steady\",\n        \"steaks\",\n        \"steals\",\n        \"steams\",\n        \"steamy\",\n        \"steeds\",\n        \"steels\",\n        \"steely\",\n        \"steeps\",\n        \"steers\",\n        \"steins\",\n        \"stemmy\",\n        \"stench\",\n        \"stenos\",\n        \"stents\",\n        \"steppe\",\n        \"stepup\",\n        \"stereo\",\n        \"sterna\",\n        \"sterns\",\n        \"sterol\",\n        \"stevia\",\n        \"stewed\",\n        \"sticks\",\n        \"sticky\",\n        \"stiffs\",\n        \"stifle\",\n        \"stigma\",\n        \"stills\",\n        \"stilly\",\n        \"stilts\",\n        \"stilty\",\n        \"stings\",\n        \"stingy\",\n        \"stinks\",\n        \"stinky\",\n        \"stints\",\n        \"stipes\",\n        \"stitch\",\n        \"stived\",\n        \"stiver\",\n        \"stives\",\n        \"stocks\",\n        \"stocky\",\n        \"stodgy\",\n        \"stogey\",\n        \"stogie\",\n        \"stoics\",\n        \"stoked\",\n        \"stoker\",\n        \"stokes\",\n        \"stolen\",\n        \"stoles\",\n        \"stolid\",\n        \"stomal\",\n        \"stomas\",\n        \"stomps\",\n        \"stoned\",\n        \"stoner\",\n        \"stones\",\n        \"stoney\",\n        \"stooge\",\n        \"stools\",\n        \"stoops\",\n        \"storax\",\n        \"stored\",\n        \"stores\",\n        \"storey\",\n        \"storks\",\n        \"storms\",\n        \"stormy\",\n        \"stoups\",\n        \"stoury\",\n        \"stoves\",\n        \"stowed\",\n        \"strain\",\n        \"strait\",\n        \"strand\",\n        \"straps\",\n        \"strata\",\n        \"straws\",\n        \"strawy\",\n        \"strays\",\n        \"streak\",\n        \"stream\",\n        \"street\",\n        \"stress\",\n        \"strewn\",\n        \"strews\",\n        \"strick\",\n        \"strict\",\n        \"stride\",\n        \"strife\",\n        \"strike\",\n        \"string\",\n        \"stripe\",\n        \"strips\",\n        \"stript\",\n        \"stripy\",\n        \"strive\",\n        \"stroam\",\n        \"strobe\",\n        \"strode\",\n        \"stroke\",\n        \"stroll\",\n        \"stroma\",\n        \"strong\",\n        \"strops\",\n        \"strove\",\n        \"strown\",\n        \"struck\",\n        \"strums\",\n        \"strung\",\n        \"struts\",\n        \"stubby\",\n        \"stucco\",\n        \"studio\",\n        \"stuffs\",\n        \"stuffy\",\n        \"stumps\",\n        \"stumpy\",\n        \"stunts\",\n        \"stunty\",\n        \"stupas\",\n        \"stuped\",\n        \"stuper\",\n        \"stupes\",\n        \"stupid\",\n        \"stupor\",\n        \"sturdy\",\n        \"styful\",\n        \"stylar\",\n        \"styled\",\n        \"styler\",\n        \"styles\",\n        \"stylet\",\n        \"stylia\",\n        \"stylus\",\n        \"stymie\",\n        \"styrax\",\n        \"styrol\",\n        \"suaver\",\n        \"subahs\",\n        \"subbed\",\n        \"subdue\",\n        \"sublet\",\n        \"submit\",\n        \"subnet\",\n        \"suborn\",\n        \"subpar\",\n        \"subsea\",\n        \"subset\",\n        \"subtle\",\n        \"subtly\",\n        \"suburb\",\n        \"subway\",\n        \"succor\",\n        \"sucked\",\n        \"sucker\",\n        \"suckle\",\n        \"suckup\",\n        \"sudate\",\n        \"sudden\",\n        \"sudsed\",\n        \"sudser\",\n        \"sudses\",\n        \"sueded\",\n        \"suedes\",\n        \"suffer\",\n        \"suffix\",\n        \"sugars\",\n        \"sugary\",\n        \"suited\",\n        \"suiter\",\n        \"suites\",\n        \"suitor\",\n        \"sulcus\",\n        \"sulfas\",\n        \"sulfur\",\n        \"sulked\",\n        \"sulker\",\n        \"sullen\",\n        \"sultan\",\n        \"sultry\",\n        \"sumach\",\n        \"sumacs\",\n        \"summed\",\n        \"summer\",\n        \"summit\",\n        \"summon\",\n        \"sunbed\",\n        \"sunbow\",\n        \"sundae\",\n        \"sunday\",\n        \"sundog\",\n        \"sundry\",\n        \"sunhat\",\n        \"sunken\",\n        \"sunlit\",\n        \"sunned\",\n        \"sunray\",\n        \"sunset\",\n        \"suntan\",\n        \"sunups\",\n        \"sunway\",\n        \"superb\",\n        \"supers\",\n        \"supine\",\n        \"supped\",\n        \"supper\",\n        \"supple\",\n        \"supply\",\n        \"surely\",\n        \"surest\",\n        \"surety\",\n        \"surfed\",\n        \"surfer\",\n        \"surged\",\n        \"surger\",\n        \"surges\",\n        \"surtax\",\n        \"survey\",\n        \"sutler\",\n        \"suture\",\n        \"svelte\",\n        \"swabby\",\n        \"swamis\",\n        \"swamps\",\n        \"swampy\",\n        \"swanks\",\n        \"swanky\",\n        \"swards\",\n        \"swardy\",\n        \"swarms\",\n        \"swashy\",\n        \"swathe\",\n        \"swaths\",\n        \"swayed\",\n        \"swayer\",\n        \"swears\",\n        \"sweats\",\n        \"sweaty\",\n        \"sweeps\",\n        \"sweets\",\n        \"swells\",\n        \"swerve\",\n        \"swifts\",\n        \"swills\",\n        \"swines\",\n        \"swings\",\n        \"swiped\",\n        \"swiper\",\n        \"swipes\",\n        \"swirls\",\n        \"swirly\",\n        \"swishy\",\n        \"switch\",\n        \"swivel\",\n        \"swoons\",\n        \"swoony\",\n        \"swoops\",\n        \"swoopy\",\n        \"swoosh\",\n        \"swords\",\n        \"sylphs\",\n        \"sylphy\",\n        \"sylvae\",\n        \"sylvan\",\n        \"sylvas\",\n        \"sylvin\",\n        \"symbol\",\n        \"synced\",\n        \"syndic\",\n        \"synods\",\n        \"syntan\",\n        \"syntax\",\n        \"syphon\",\n        \"syrinx\",\n        \"syrups\",\n        \"syrupy\",\n        \"system\",\n        \"syzygy\",\n        \"tabbed\",\n        \"tabled\",\n        \"tables\",\n        \"tablet\",\n        \"taboos\",\n        \"tabued\",\n        \"tacked\",\n        \"tacker\",\n        \"tackey\",\n        \"tackle\",\n        \"tactic\",\n        \"tagged\",\n        \"taggee\",\n        \"tagger\",\n        \"tahini\",\n        \"tailed\",\n        \"tailor\",\n        \"taints\",\n        \"takers\",\n        \"taking\",\n        \"talcum\",\n        \"talent\",\n        \"talked\",\n        \"talkee\",\n        \"talker\",\n        \"talkie\",\n        \"taller\",\n        \"tallow\",\n        \"talmud\",\n        \"talons\",\n        \"tamale\",\n        \"tamely\",\n        \"tamers\",\n        \"tamest\",\n        \"taming\",\n        \"tamped\",\n        \"tamper\",\n        \"tampon\",\n        \"tandem\",\n        \"tangle\",\n        \"tangly\",\n        \"tangos\",\n        \"tanked\",\n        \"tanker\",\n        \"tanned\",\n        \"tanner\",\n        \"tannin\",\n        \"tanuki\",\n        \"taoism\",\n        \"taoist\",\n        \"tapers\",\n        \"taping\",\n        \"tapirs\",\n        \"tapped\",\n        \"tapper\",\n        \"target\",\n        \"tariff\",\n        \"tarmac\",\n        \"tarnal\",\n        \"tarots\",\n        \"tarpan\",\n        \"tarred\",\n        \"tarrow\",\n        \"tarsal\",\n        \"tarsus\",\n        \"tartan\",\n        \"tartar\",\n        \"tarter\",\n        \"tartly\",\n        \"tasers\",\n        \"tasked\",\n        \"tasker\",\n        \"tassel\",\n        \"tasted\",\n        \"taster\",\n        \"tastes\",\n        \"tatoos\",\n        \"tatter\",\n        \"tattle\",\n        \"tattoo\",\n        \"taught\",\n        \"taunts\",\n        \"taupes\",\n        \"tauten\",\n        \"tauter\",\n        \"tautly\",\n        \"tavern\",\n        \"tawdry\",\n        \"tawney\",\n        \"taxers\",\n        \"taxied\",\n        \"taxies\",\n        \"taxing\",\n        \"taxman\",\n        \"taxmen\",\n        \"tazzas\",\n        \"teabag\",\n        \"teabox\",\n        \"teacup\",\n        \"teamed\",\n        \"teamer\",\n        \"teapot\",\n        \"teared\",\n        \"tearer\",\n        \"teased\",\n        \"teasel\",\n        \"teaser\",\n        \"teases\",\n        \"teated\",\n        \"teazed\",\n        \"teazel\",\n        \"teazes\",\n        \"teazle\",\n        \"techie\",\n        \"techno\",\n        \"tedium\",\n        \"teeing\",\n        \"teemed\",\n        \"teemer\",\n        \"teensy\",\n        \"teepee\",\n        \"teeter\",\n        \"teethe\",\n        \"teflon\",\n        \"telcos\",\n        \"teller\",\n        \"telnet\",\n        \"temper\",\n        \"temple\",\n        \"tempos\",\n        \"tempts\",\n        \"tenant\",\n        \"tended\",\n        \"tender\",\n        \"tendon\",\n        \"tenets\",\n        \"tenges\",\n        \"tenner\",\n        \"tennis\",\n        \"tenors\",\n        \"tenpin\",\n        \"tensed\",\n        \"tenser\",\n        \"tenses\",\n        \"tensor\",\n        \"tented\",\n        \"tenter\",\n        \"tenths\",\n        \"tenure\",\n        \"tepals\",\n        \"tepees\",\n        \"tephra\",\n        \"terete\",\n        \"termed\",\n        \"terpen\",\n        \"terror\",\n        \"terser\",\n        \"teslas\",\n        \"tested\",\n        \"tester\",\n        \"testes\",\n        \"tetany\",\n        \"tether\",\n        \"tetrad\",\n        \"tetras\",\n        \"tetric\",\n        \"teuton\",\n        \"texels\",\n        \"texted\",\n        \"texter\",\n        \"thalli\",\n        \"thanks\",\n        \"thatch\",\n        \"thefts\",\n        \"thawed\",\n        \"theirs\",\n        \"theism\",\n        \"theist\",\n        \"themed\",\n        \"themes\",\n        \"thence\",\n        \"theory\",\n        \"theres\",\n        \"therms\",\n        \"theses\",\n        \"thesis\",\n        \"thesps\",\n        \"thetas\",\n        \"thicks\",\n        \"thieve\",\n        \"thighs\",\n        \"things\",\n        \"thingy\",\n        \"thinks\",\n        \"thinly\",\n        \"thiole\",\n        \"thione\",\n        \"thirds\",\n        \"thirst\",\n        \"thirty\",\n        \"thongs\",\n        \"thorax\",\n        \"thorns\",\n        \"thorny\",\n        \"though\",\n        \"thrall\",\n        \"thrash\",\n        \"thread\",\n        \"threat\",\n        \"threes\",\n        \"thresh\",\n        \"thrice\",\n        \"thrift\",\n        \"thrill\",\n        \"thrips\",\n        \"thrive\",\n        \"throat\",\n        \"throbs\",\n        \"throes\",\n        \"throne\",\n        \"throng\",\n        \"thrown\",\n        \"throws\",\n        \"thrums\",\n        \"thrush\",\n        \"thrust\",\n        \"thumbs\",\n        \"thumps\",\n        \"thunks\",\n        \"thusly\",\n        \"thwack\",\n        \"thwart\",\n        \"thymes\",\n        \"thymey\",\n        \"thymic\",\n        \"thymol\",\n        \"thymus\",\n        \"thyrse\",\n        \"tiaras\",\n        \"tibiae\",\n        \"tibial\",\n        \"tibias\",\n        \"ticked\",\n        \"ticker\",\n        \"ticket\",\n        \"tickle\",\n        \"tickly\",\n        \"tictac\",\n        \"tictoc\",\n        \"tidbit\",\n        \"tiddly\",\n        \"tidied\",\n        \"tidier\",\n        \"tidies\",\n        \"tidily\",\n        \"tiding\",\n        \"tieing\",\n        \"tiered\",\n        \"tierod\",\n        \"tigers\",\n        \"tigery\",\n        \"tights\",\n        \"tildes\",\n        \"tilers\",\n        \"tiling\",\n        \"tilled\",\n        \"tiller\",\n        \"tilted\",\n        \"tilter\",\n        \"timber\",\n        \"timbre\",\n        \"timely\",\n        \"timers\",\n        \"timing\",\n        \"tinder\",\n        \"tinful\",\n        \"tinged\",\n        \"tinger\",\n        \"tinges\",\n        \"tingle\",\n        \"tingly\",\n        \"tinier\",\n        \"tinily\",\n        \"tinker\",\n        \"tinkle\",\n        \"tinkly\",\n        \"tinman\",\n        \"tinmen\",\n        \"tinned\",\n        \"tinner\",\n        \"tinpot\",\n        \"tinsel\",\n        \"tinted\",\n        \"tinter\",\n        \"tipcat\",\n        \"tiples\",\n        \"tipoff\",\n        \"tipped\",\n        \"tipper\",\n        \"tipple\",\n        \"tiptoe\",\n        \"tiptop\",\n        \"tirade\",\n        \"tiring\",\n        \"tissue\",\n        \"titans\",\n        \"titbit\",\n        \"titers\",\n        \"tithed\",\n        \"tither\",\n        \"tithes\",\n        \"tithly\",\n        \"titled\",\n        \"titles\",\n        \"titman\",\n        \"titmen\",\n        \"titres\",\n        \"titter\",\n        \"tizzes\",\n        \"toasts\",\n        \"toasty\",\n        \"tocsin\",\n        \"todays\",\n        \"toddle\",\n        \"toecap\",\n        \"toeing\",\n        \"toffee\",\n        \"toggle\",\n        \"toiled\",\n        \"toiler\",\n        \"toilet\",\n        \"tokens\",\n        \"tokers\",\n        \"toking\",\n        \"toledo\",\n        \"tolled\",\n        \"toller\",\n        \"toluol\",\n        \"tomato\",\n        \"tombed\",\n        \"tomboy\",\n        \"tomcat\",\n        \"tomtit\",\n        \"tomtom\",\n        \"tondos\",\n        \"toners\",\n        \"tonged\",\n        \"tongue\",\n        \"tonics\",\n        \"toning\",\n        \"tonnes\",\n        \"tonsil\",\n        \"tooled\",\n        \"tooler\",\n        \"toonie\",\n        \"tooted\",\n        \"tooter\",\n        \"tooths\",\n        \"toothy\",\n        \"tootle\",\n        \"tootsy\",\n        \"topics\",\n        \"toplit\",\n        \"topped\",\n        \"topper\",\n        \"topple\",\n        \"toprim\",\n        \"toques\",\n        \"toquet\",\n        \"torchy\",\n        \"tories\",\n        \"toroid\",\n        \"torpid\",\n        \"torpor\",\n        \"torque\",\n        \"torrid\",\n        \"torsos\",\n        \"tortes\",\n        \"tossed\",\n        \"tosses\",\n        \"tossup\",\n        \"totals\",\n        \"totems\",\n        \"toters\",\n        \"toting\",\n        \"totter\",\n        \"toucan\",\n        \"touche\",\n        \"touchy\",\n        \"toughs\",\n        \"toughy\",\n        \"toupee\",\n        \"toured\",\n        \"tourer\",\n        \"tousle\",\n        \"touted\",\n        \"touter\",\n        \"towage\",\n        \"toward\",\n        \"towels\",\n        \"towers\",\n        \"towery\",\n        \"towing\",\n        \"toxemy\",\n        \"toxify\",\n        \"toxins\",\n        \"toxoid\",\n        \"toybox\",\n        \"toyboy\",\n        \"toying\",\n        \"traced\",\n        \"tracer\",\n        \"traces\",\n        \"tracks\",\n        \"tracts\",\n        \"traded\",\n        \"trader\",\n        \"trades\",\n        \"tragic\",\n        \"trails\",\n        \"trains\",\n        \"traits\",\n        \"tramel\",\n        \"tramps\",\n        \"trampy\",\n        \"trance\",\n        \"trashy\",\n        \"trauma\",\n        \"travel\",\n        \"trawls\",\n        \"treads\",\n        \"treats\",\n        \"treaty\",\n        \"treble\",\n        \"trebly\",\n        \"tremor\",\n        \"trench\",\n        \"trends\",\n        \"trendy\",\n        \"trepan\",\n        \"triads\",\n        \"triage\",\n        \"trials\",\n        \"tribal\",\n        \"tribes\",\n        \"tricep\",\n        \"trichy\",\n        \"tricks\",\n        \"tricky\",\n        \"tricot\",\n        \"tridem\",\n        \"triers\",\n        \"trifid\",\n        \"trifle\",\n        \"trijet\",\n        \"trikes\",\n        \"trills\",\n        \"trimer\",\n        \"trimly\",\n        \"triode\",\n        \"triods\",\n        \"trione\",\n        \"triped\",\n        \"triple\",\n        \"triply\",\n        \"tripod\",\n        \"trivet\",\n        \"trivia\",\n        \"triyne\",\n        \"trocar\",\n        \"troika\",\n        \"trolls\",\n        \"trones\",\n        \"troops\",\n        \"tropes\",\n        \"trophy\",\n        \"tropic\",\n        \"trough\",\n        \"troupe\",\n        \"trouts\",\n        \"trover\",\n        \"trowel\",\n        \"truant\",\n        \"truces\",\n        \"trucks\",\n        \"trudge\",\n        \"truest\",\n        \"trumps\",\n        \"trunks\",\n        \"trusts\",\n        \"trusty\",\n        \"truths\",\n        \"trying\",\n        \"tryout\",\n        \"trysts\",\n        \"tsetse\",\n        \"tubers\",\n        \"tubful\",\n        \"tubing\",\n        \"tubule\",\n        \"tucked\",\n        \"tucker\",\n        \"tuffet\",\n        \"tufted\",\n        \"tufter\",\n        \"tugged\",\n        \"tugger\",\n        \"tugrik\",\n        \"tulips\",\n        \"tumble\",\n        \"tumors\",\n        \"tumour\",\n        \"tumult\",\n        \"tundra\",\n        \"tuners\",\n        \"tuneup\",\n        \"tunics\",\n        \"tuning\",\n        \"tunnel\",\n        \"tuples\",\n        \"turban\",\n        \"turbid\",\n        \"turbos\",\n        \"turbot\",\n        \"turfed\",\n        \"turgid\",\n        \"turgor\",\n        \"turkey\",\n        \"turned\",\n        \"turner\",\n        \"turnip\",\n        \"turret\",\n        \"turrid\",\n        \"turtle\",\n        \"tushes\",\n        \"tusked\",\n        \"tusker\",\n        \"tussle\",\n        \"tutors\",\n        \"tuxedo\",\n        \"twangs\",\n        \"twangy\",\n        \"tweaks\",\n        \"tweeds\",\n        \"tweedy\",\n        \"tweets\",\n        \"tweeze\",\n        \"twelve\",\n        \"twenty\",\n        \"twerps\",\n        \"twerpy\",\n        \"twiggy\",\n        \"twilit\",\n        \"twills\",\n        \"twined\",\n        \"twiner\",\n        \"twines\",\n        \"twinge\",\n        \"twirls\",\n        \"twirly\",\n        \"twirps\",\n        \"twirpy\",\n        \"twists\",\n        \"twisty\",\n        \"twitch\",\n        \"twofer\",\n        \"twonie\",\n        \"twoway\",\n        \"tycoon\",\n        \"tylote\",\n        \"typhad\",\n        \"typhus\",\n        \"typify\",\n        \"typing\",\n        \"typist\",\n        \"tyrant\",\n        \"tyroma\",\n        \"tzetze\",\n        \"udders\",\n        \"uglier\",\n        \"uglies\",\n        \"ulcers\",\n        \"ulnars\",\n        \"ultima\",\n        \"ultras\",\n        \"umbels\",\n        \"umbers\",\n        \"umbras\",\n        \"umlaut\",\n        \"umping\",\n        \"umpire\",\n        \"unable\",\n        \"unaged\",\n        \"unarch\",\n        \"unarms\",\n        \"unawed\",\n        \"unaxed\",\n        \"unbags\",\n        \"unbait\",\n        \"unbale\",\n        \"unband\",\n        \"unbans\",\n        \"unbars\",\n        \"unbear\",\n        \"unbelt\",\n        \"unbend\",\n        \"unbent\",\n        \"unbias\",\n        \"unbind\",\n        \"unblur\",\n        \"unbolt\",\n        \"unbone\",\n        \"unbook\",\n        \"unboot\",\n        \"unborn\",\n        \"unbred\",\n        \"unbung\",\n        \"unbury\",\n        \"uncage\",\n        \"uncape\",\n        \"uncaps\",\n        \"uncart\",\n        \"uncase\",\n        \"unchid\",\n        \"unclad\",\n        \"uncles\",\n        \"unclew\",\n        \"unclip\",\n        \"unclog\",\n        \"unclot\",\n        \"uncock\",\n        \"uncoil\",\n        \"uncool\",\n        \"uncoop\",\n        \"uncord\",\n        \"uncork\",\n        \"uncowl\",\n        \"uncued\",\n        \"uncuff\",\n        \"uncups\",\n        \"uncurb\",\n        \"uncurl\",\n        \"undams\",\n        \"undate\",\n        \"undead\",\n        \"undear\",\n        \"undeep\",\n        \"undent\",\n        \"undies\",\n        \"undims\",\n        \"undine\",\n        \"undock\",\n        \"undoer\",\n        \"undoes\",\n        \"undone\",\n        \"unduly\",\n        \"undyed\",\n        \"unease\",\n        \"uneasy\",\n        \"uneven\",\n        \"unfair\",\n        \"unfelt\",\n        \"unfirm\",\n        \"unfits\",\n        \"unfold\",\n        \"unfond\",\n        \"unfree\",\n        \"unfurl\",\n        \"unglue\",\n        \"ungual\",\n        \"unhand\",\n        \"unhewn\",\n        \"unholy\",\n        \"unhook\",\n        \"unhurt\",\n        \"unions\",\n        \"uniped\",\n        \"unipod\",\n        \"unique\",\n        \"unisex\",\n        \"unison\",\n        \"united\",\n        \"uniter\",\n        \"unites\",\n        \"unjams\",\n        \"unjinx\",\n        \"unjoin\",\n        \"unjust\",\n        \"unkept\",\n        \"unkind\",\n        \"unknit\",\n        \"unknot\",\n        \"unlace\",\n        \"unlaid\",\n        \"unlash\",\n        \"unlazy\",\n        \"unless\",\n        \"unlike\",\n        \"unlink\",\n        \"unlist\",\n        \"unlive\",\n        \"unload\",\n        \"unlock\",\n        \"unmade\",\n        \"unmake\",\n        \"unmans\",\n        \"unmaps\",\n        \"unmark\",\n        \"unmask\",\n        \"unmesh\",\n        \"unmixt\",\n        \"unmold\",\n        \"unmown\",\n        \"unmute\",\n        \"unnest\",\n        \"unnumb\",\n        \"unopen\",\n        \"unpack\",\n        \"unpaid\",\n        \"unpair\",\n        \"unpegs\",\n        \"unpens\",\n        \"unpent\",\n        \"unpick\",\n        \"unpins\",\n        \"unplay\",\n        \"unplug\",\n        \"unpure\",\n        \"unread\",\n        \"unreal\",\n        \"unreel\",\n        \"unrest\",\n        \"unripe\",\n        \"unrobe\",\n        \"unroll\",\n        \"unroot\",\n        \"unruly\",\n        \"unsafe\",\n        \"unsaid\",\n        \"unseal\",\n        \"unseat\",\n        \"unseen\",\n        \"unsent\",\n        \"unsexy\",\n        \"unship\",\n        \"unshod\",\n        \"unsign\",\n        \"unskew\",\n        \"unsnap\",\n        \"unsold\",\n        \"unsort\",\n        \"unsown\",\n        \"unstep\",\n        \"unstop\",\n        \"unstow\",\n        \"unsung\",\n        \"unsure\",\n        \"untags\",\n        \"unthaw\",\n        \"untidy\",\n        \"untied\",\n        \"untier\",\n        \"unties\",\n        \"untill\",\n        \"untold\",\n        \"untrap\",\n        \"untrod\",\n        \"untrue\",\n        \"untuck\",\n        \"untune\",\n        \"unturn\",\n        \"unused\",\n        \"unveil\",\n        \"unwary\",\n        \"unwell\",\n        \"unwept\",\n        \"unwill\",\n        \"unwind\",\n        \"unwire\",\n        \"unwise\",\n        \"unworn\",\n        \"unwrap\",\n        \"unyoke\",\n        \"unzips\",\n        \"uparch\",\n        \"upbank\",\n        \"upbeat\",\n        \"update\",\n        \"upends\",\n        \"upfill\",\n        \"upflow\",\n        \"upfold\",\n        \"upheld\",\n        \"uphill\",\n        \"uphold\",\n        \"upkeep\",\n        \"upland\",\n        \"uplift\",\n        \"uplink\",\n        \"upload\",\n        \"uplock\",\n        \"upmost\",\n        \"uppers\",\n        \"upping\",\n        \"uppish\",\n        \"uppity\",\n        \"uprate\",\n        \"uprear\",\n        \"uprise\",\n        \"uproar\",\n        \"uproot\",\n        \"uprush\",\n        \"upsets\",\n        \"upshot\",\n        \"upside\",\n        \"upsize\",\n        \"uptake\",\n        \"uptalk\",\n        \"uptick\",\n        \"uptime\",\n        \"uptown\",\n        \"upturn\",\n        \"upward\",\n        \"upwell\",\n        \"upwind\",\n        \"uracil\",\n        \"urases\",\n        \"urates\",\n        \"urbane\",\n        \"urchin\",\n        \"urease\",\n        \"uremia\",\n        \"uremic\",\n        \"ureter\",\n        \"urgent\",\n        \"urgers\",\n        \"urging\",\n        \"urinal\",\n        \"urines\",\n        \"urnful\",\n        \"urning\",\n        \"uropod\",\n        \"uroxin\",\n        \"ursine\",\n        \"usable\",\n        \"usably\",\n        \"usages\",\n        \"useful\",\n        \"ushers\",\n        \"usurps\",\n        \"usward\",\n        \"uterus\",\n        \"utiles\",\n        \"utmost\",\n        \"utopia\",\n        \"utters\",\n        \"uvular\",\n        \"uvulas\",\n        \"vacant\",\n        \"vacate\",\n        \"vacuum\",\n        \"vagary\",\n        \"vagina\",\n        \"vaguer\",\n        \"vagues\",\n        \"vainer\",\n        \"vainly\",\n        \"valent\",\n        \"valets\",\n        \"valgus\",\n        \"valley\",\n        \"valour\",\n        \"valued\",\n        \"valuer\",\n        \"values\",\n        \"valved\",\n        \"valves\",\n        \"vamped\",\n        \"vandal\",\n        \"vanish\",\n        \"vanity\",\n        \"vapers\",\n        \"vaping\",\n        \"vapors\",\n        \"vapory\",\n        \"vapour\",\n        \"varied\",\n        \"varies\",\n        \"varoom\",\n        \"vassal\",\n        \"vaster\",\n        \"vastly\",\n        \"vatful\",\n        \"vatted\",\n        \"vaults\",\n        \"vaulty\",\n        \"vaunts\",\n        \"veared\",\n        \"vector\",\n        \"veered\",\n        \"vegans\",\n        \"vegged\",\n        \"veggie\",\n        \"veiled\",\n        \"veiler\",\n        \"veined\",\n        \"velars\",\n        \"velcro\",\n        \"vellum\",\n        \"velour\",\n        \"velvet\",\n        \"vended\",\n        \"vendor\",\n        \"veneer\",\n        \"venial\",\n        \"venoms\",\n        \"venous\",\n        \"vented\",\n        \"venter\",\n        \"venues\",\n        \"venule\",\n        \"verbal\",\n        \"verges\",\n        \"verify\",\n        \"verily\",\n        \"verism\",\n        \"verist\",\n        \"verity\",\n        \"vermes\",\n        \"vermin\",\n        \"vermis\",\n        \"vernal\",\n        \"versed\",\n        \"verses\",\n        \"versus\",\n        \"vertex\",\n        \"vesper\",\n        \"vessel\",\n        \"vestal\",\n        \"vested\",\n        \"vestry\",\n        \"vetoed\",\n        \"vetoer\",\n        \"vetoes\",\n        \"vetted\",\n        \"vexers\",\n        \"vexful\",\n        \"vexils\",\n        \"vexing\",\n        \"viable\",\n        \"viably\",\n        \"vialed\",\n        \"vibrio\",\n        \"vicars\",\n        \"victim\",\n        \"victor\",\n        \"videos\",\n        \"viewed\",\n        \"viewer\",\n        \"vigils\",\n        \"vigour\",\n        \"viking\",\n        \"vilely\",\n        \"vilest\",\n        \"vilify\",\n        \"villas\",\n        \"villus\",\n        \"vincas\",\n        \"vining\",\n        \"violas\",\n        \"violed\",\n        \"violet\",\n        \"violin\",\n        \"vipers\",\n        \"virgin\",\n        \"virify\",\n        \"virile\",\n        \"virion\",\n        \"viroid\",\n        \"virome\",\n        \"virtue\",\n        \"visage\",\n        \"viscid\",\n        \"viscus\",\n        \"vising\",\n        \"vision\",\n        \"visits\",\n        \"visors\",\n        \"vistas\",\n        \"visual\",\n        \"vitals\",\n        \"vitium\",\n        \"vivify\",\n        \"vixens\",\n        \"vizier\",\n        \"vocals\",\n        \"vodkas\",\n        \"vogues\",\n        \"voiced\",\n        \"voicer\",\n        \"voices\",\n        \"voided\",\n        \"voider\",\n        \"volley\",\n        \"volume\",\n        \"volute\",\n        \"vomits\",\n        \"voodoo\",\n        \"vortex\",\n        \"votary\",\n        \"voteen\",\n        \"voters\",\n        \"voting\",\n        \"votive\",\n        \"vowels\",\n        \"vowers\",\n        \"vowing\",\n        \"voxels\",\n        \"voyage\",\n        \"voyeur\",\n        \"vraics\",\n        \"vrooms\",\n        \"vulgar\",\n        \"vulvae\",\n        \"vulval\",\n        \"vulvar\",\n        \"vulvas\",\n        \"wabble\",\n        \"wabbly\",\n        \"wackos\",\n        \"wadded\",\n        \"wadder\",\n        \"waddle\",\n        \"waddly\",\n        \"waders\",\n        \"wading\",\n        \"wafers\",\n        \"wafery\",\n        \"waffle\",\n        \"wafted\",\n        \"wafter\",\n        \"waftes\",\n        \"wagers\",\n        \"wagged\",\n        \"wagger\",\n        \"waggle\",\n        \"waggly\",\n        \"waging\",\n        \"wagons\",\n        \"wailed\",\n        \"wailer\",\n        \"waists\",\n        \"waited\",\n        \"waiter\",\n        \"waived\",\n        \"waiver\",\n        \"waives\",\n        \"wakens\",\n        \"wakers\",\n        \"wakeup\",\n        \"waking\",\n        \"waling\",\n        \"walked\",\n        \"walker\",\n        \"walkin\",\n        \"walkup\",\n        \"walled\",\n        \"wallet\",\n        \"wallop\",\n        \"wallow\",\n        \"walnut\",\n        \"walrus\",\n        \"wamble\",\n        \"wander\",\n        \"wangle\",\n        \"waning\",\n        \"wanted\",\n        \"wanter\",\n        \"wanton\",\n        \"wapper\",\n        \"warble\",\n        \"warbly\",\n        \"warded\",\n        \"warden\",\n        \"warier\",\n        \"wardog\",\n        \"warily\",\n        \"warder\",\n        \"warmed\",\n        \"warmer\",\n        \"warmly\",\n        \"warmth\",\n        \"warmup\",\n        \"warned\",\n        \"warner\",\n        \"warped\",\n        \"warper\",\n        \"warred\",\n        \"warted\",\n        \"wasabi\",\n        \"washed\",\n        \"washer\",\n        \"washes\",\n        \"washup\",\n        \"wasted\",\n        \"waster\",\n        \"wastes\",\n        \"waters\",\n        \"watery\",\n        \"wattle\",\n        \"wauked\",\n        \"wauker\",\n        \"wauled\",\n        \"waulks\",\n        \"wavers\",\n        \"wavery\",\n        \"waveys\",\n        \"wavier\",\n        \"wavily\",\n        \"waving\",\n        \"wawled\",\n        \"waxcap\",\n        \"waxers\",\n        \"waxeye\",\n        \"waxier\",\n        \"waxily\",\n        \"waxing\",\n        \"waylay\",\n        \"wayout\",\n        \"wazzas\",\n        \"weaken\",\n        \"weaker\",\n        \"weakly\",\n        \"wealth\",\n        \"weaned\",\n        \"weapon\",\n        \"wearer\",\n        \"weasel\",\n        \"weaved\",\n        \"weaver\",\n        \"weaves\",\n        \"weazen\",\n        \"webbed\",\n        \"webcam\",\n        \"webers\",\n        \"weblog\",\n        \"wedded\",\n        \"wedged\",\n        \"wedges\",\n        \"weeded\",\n        \"weeder\",\n        \"weekly\",\n        \"weened\",\n        \"weensy\",\n        \"weeper\",\n        \"weevil\",\n        \"weighs\",\n        \"weight\",\n        \"weiner\",\n        \"weirdo\",\n        \"welded\",\n        \"welder\",\n        \"welled\",\n        \"wended\",\n        \"werman\",\n        \"wermen\",\n        \"wetted\",\n        \"wetter\",\n        \"whacko\",\n        \"whacks\",\n        \"whacky\",\n        \"whaled\",\n        \"whaler\",\n        \"whales\",\n        \"whammo\",\n        \"whammy\",\n        \"wharfs\",\n        \"wharve\",\n        \"wheals\",\n        \"wheats\",\n        \"wheaty\",\n        \"wheels\",\n        \"wheeze\",\n        \"wheezy\",\n        \"whelks\",\n        \"whelky\",\n        \"whelms\",\n        \"whelps\",\n        \"whence\",\n        \"wheres\",\n        \"whiffs\",\n        \"whiffy\",\n        \"whilst\",\n        \"whimsy\",\n        \"whined\",\n        \"whiner\",\n        \"whines\",\n        \"whinge\",\n        \"whingy\",\n        \"whinny\",\n        \"whirls\",\n        \"whirly\",\n        \"whirrs\",\n        \"whisks\",\n        \"whisky\",\n        \"whisps\",\n        \"whited\",\n        \"whiten\",\n        \"whiter\",\n        \"whites\",\n        \"whizzy\",\n        \"wholes\",\n        \"wholly\",\n        \"whoops\",\n        \"whoosh\",\n        \"whorls\",\n        \"wicked\",\n        \"wicker\",\n        \"wicket\",\n        \"wicopy\",\n        \"widely\",\n        \"widens\",\n        \"widest\",\n        \"widget\",\n        \"widows\",\n        \"widths\",\n        \"wields\",\n        \"wieldy\",\n        \"wiener\",\n        \"wienie\",\n        \"wifely\",\n        \"wifman\",\n        \"wifmen\",\n        \"wigeon\",\n        \"wigged\",\n        \"wiggle\",\n        \"wiggly\",\n        \"wights\",\n        \"wiglet\",\n        \"wigwag\",\n        \"wigwam\",\n        \"wilded\",\n        \"wilder\",\n        \"wildly\",\n        \"wilful\",\n        \"wilier\",\n        \"wiling\",\n        \"willed\",\n        \"willow\",\n        \"wilted\",\n        \"wimble\",\n        \"wimped\",\n        \"wimple\",\n        \"winced\",\n        \"wincer\",\n        \"winces\",\n        \"winded\",\n        \"winder\",\n        \"windex\",\n        \"window\",\n        \"windup\",\n        \"winery\",\n        \"winged\",\n        \"winger\",\n        \"winges\",\n        \"winier\",\n        \"wining\",\n        \"winked\",\n        \"winker\",\n        \"winkle\",\n        \"winner\",\n        \"winnow\",\n        \"winter\",\n        \"wintry\",\n        \"wipers\",\n        \"wiping\",\n        \"wirers\",\n        \"wirier\",\n        \"wirily\",\n        \"wiring\",\n        \"wisdom\",\n        \"wisely\",\n        \"wisest\",\n        \"wished\",\n        \"wisher\",\n        \"wishes\",\n        \"wisped\",\n        \"witans\",\n        \"witchs\",\n        \"witchy\",\n        \"wither\",\n        \"within\",\n        \"witted\",\n        \"witter\",\n        \"wiving\",\n        \"wizard\",\n        \"wizens\",\n        \"woaded\",\n        \"wobble\",\n        \"wobbly\",\n        \"woeful\",\n        \"wolfed\",\n        \"wolves\",\n        \"womans\",\n        \"wombat\",\n        \"wombed\",\n        \"womens\",\n        \"wonder\",\n        \"wonted\",\n        \"wonton\",\n        \"wooded\",\n        \"wooden\",\n        \"woodsy\",\n        \"wooers\",\n        \"woofed\",\n        \"woofer\",\n        \"wooing\",\n        \"wooled\",\n        \"woolen\",\n        \"woolie\",\n        \"woolly\",\n        \"worded\",\n        \"worked\",\n        \"worker\",\n        \"workup\",\n        \"worlds\",\n        \"worldy\",\n        \"wormed\",\n        \"wormer\",\n        \"worsen\",\n        \"worser\",\n        \"worths\",\n        \"worthy\",\n        \"wounds\",\n        \"wovens\",\n        \"wowing\",\n        \"wracks\",\n        \"wraith\",\n        \"wrasse\",\n        \"wraths\",\n        \"wreaks\",\n        \"wreath\",\n        \"wrecks\",\n        \"wrench\",\n        \"wrests\",\n        \"wretch\",\n        \"wriest\",\n        \"wright\",\n        \"wrings\",\n        \"wrists\",\n        \"writer\",\n        \"writes\",\n        \"writhe\",\n        \"wrongs\",\n        \"wryest\",\n        \"wursts\",\n        \"wusses\",\n        \"xebecs\",\n        \"xenias\",\n        \"xenons\",\n        \"xeroma\",\n        \"xrayed\",\n        \"xylans\",\n        \"xylems\",\n        \"xylene\",\n        \"xyloid\",\n        \"xylols\",\n        \"xyloma\",\n        \"xylose\",\n        \"xylyls\",\n        \"xyster\",\n        \"xystoi\",\n        \"xystos\",\n        \"xystum\",\n        \"xystus\",\n        \"yabber\",\n        \"yachts\",\n        \"yachty\",\n        \"yacked\",\n        \"yaffed\",\n        \"yagers\",\n        \"yahoos\",\n        \"yairds\",\n        \"yakked\",\n        \"yamens\",\n        \"yammer\",\n        \"yamuns\",\n        \"yanked\",\n        \"yanker\",\n        \"yanqui\",\n        \"yapock\",\n        \"yapoks\",\n        \"yapons\",\n        \"yapped\",\n        \"yapper\",\n        \"yarded\",\n        \"yarely\",\n        \"yarest\",\n        \"yarned\",\n        \"yarrow\",\n        \"yasmak\",\n        \"yauped\",\n        \"yauper\",\n        \"yaupon\",\n        \"yawing\",\n        \"yawled\",\n        \"yawned\",\n        \"yawner\",\n        \"yawped\",\n        \"yawper\",\n        \"yclept\",\n        \"yealms\",\n        \"yeaned\",\n        \"yearly\",\n        \"yearns\",\n        \"yeasts\",\n        \"yeasty\",\n        \"yeelin\",\n        \"yelled\",\n        \"yeller\",\n        \"yellow\",\n        \"yelmed\",\n        \"yelmer\",\n        \"yelped\",\n        \"yelper\",\n        \"yenned\",\n        \"yeoman\",\n        \"yeomen\",\n        \"yerbas\",\n        \"yesked\",\n        \"yessed\",\n        \"yesses\",\n        \"yester\",\n        \"yeuked\",\n        \"yexing\",\n        \"yields\",\n        \"yipped\",\n        \"yippee\",\n        \"yippie\",\n        \"yirred\",\n        \"yirths\",\n        \"ynones\",\n        \"yodels\",\n        \"yodled\",\n        \"yodler\",\n        \"yodles\",\n        \"yogees\",\n        \"yogini\",\n        \"yogins\",\n        \"yogurt\",\n        \"yoicks\",\n        \"yokels\",\n        \"yoking\",\n        \"yolked\",\n        \"yonder\",\n        \"yonker\",\n        \"yorker\",\n        \"youngs\",\n        \"youpon\",\n        \"youths\",\n        \"yowies\",\n        \"yowing\",\n        \"yowled\",\n        \"yowler\",\n        \"yttria\",\n        \"yttric\",\n        \"yuccas\",\n        \"yucked\",\n        \"yukked\",\n        \"yulans\",\n        \"yupons\",\n        \"yuppie\",\n        \"yutzes\",\n        \"zaddik\",\n        \"zaffar\",\n        \"zaffer\",\n        \"zaffir\",\n        \"zaffre\",\n        \"zaftig\",\n        \"zagged\",\n        \"zambra\",\n        \"zamias\",\n        \"zanana\",\n        \"zander\",\n        \"zanier\",\n        \"zanies\",\n        \"zanily\",\n        \"zanzas\",\n        \"zapped\",\n        \"zapper\",\n        \"zareba\",\n        \"zariba\",\n        \"zarves\",\n        \"zayins\",\n        \"zealed\",\n        \"zealot\",\n        \"zeatin\",\n        \"zebeck\",\n        \"zebecs\",\n        \"zebras\",\n        \"zebubs\",\n        \"zechin\",\n        \"zedonk\",\n        \"zenana\",\n        \"zenith\",\n        \"zephyr\",\n        \"zeroed\",\n        \"zeroes\",\n        \"zested\",\n        \"zeugma\",\n        \"zibeth\",\n        \"zibets\",\n        \"zigged\",\n        \"zigzag\",\n        \"zillah\",\n        \"zinced\",\n        \"zincic\",\n        \"zincks\",\n        \"zincky\",\n        \"zinged\",\n        \"zinger\",\n        \"zinnia\",\n        \"zipped\",\n        \"zipper\",\n        \"ziptie\",\n        \"zirams\",\n        \"zircon\",\n        \"zither\",\n        \"zizith\",\n        \"zizzed\",\n        \"zizzes\",\n        \"zizzle\",\n        \"zlotys\",\n        \"zoaeae\",\n        \"zoaeas\",\n        \"zoaria\",\n        \"zodiac\",\n        \"zoecia\",\n        \"zoetic\",\n        \"zoftig\",\n        \"zombie\",\n        \"zombis\",\n        \"zonary\",\n        \"zonate\",\n        \"zondas\",\n        \"zoners\",\n        \"zoning\",\n        \"zonked\",\n        \"zonkey\",\n        \"zonula\",\n        \"zonule\",\n        \"zooeae\",\n        \"zooeal\",\n        \"zooeas\",\n        \"zooids\",\n        \"zoomed\",\n        \"zoonal\",\n        \"zooned\",\n        \"zoonym\",\n        \"zootic\",\n        \"zorils\",\n        \"zorses\",\n        \"zoster\",\n        \"zouave\",\n        \"zounds\",\n        \"zoysia\",\n        \"zydeco\",\n        \"zygoid\",\n        \"zygoma\",\n        \"zygose\",\n        \"zygote\",\n        \"zygous\",\n        \"zymase\",\n        \"zymins\",\n        \"zymoid\",\n        \"zythos\",\n        \"zythum\"\n    ]\n};\nexport default words;\n","import seedrandom from \"seedrandom\";\nimport { GameMode } from \"./enums\";\nimport wordList from \"./words_6\";\nexport const ROWS = 6;\nexport const COLS = 6;\nexport const words = Object.assign(Object.assign({}, wordList), { contains: (word) => {\n        return wordList.words.includes(word) || wordList.valid.includes(word);\n    } });\nexport function checkHardMode(board, row) {\n    for (let i = 0; i < COLS; ++i) {\n        if (board.state[row - 1][i] === \"🟩\" && board.words[row - 1][i] !== board.words[row][i]) {\n            return { pos: i, char: board.words[row - 1][i], type: \"🟩\" };\n        }\n    }\n    for (let i = 0; i < COLS; ++i) {\n        if (board.state[row - 1][i] === \"🟨\" && !board.words[row].includes(board.words[row - 1][i])) {\n            return { pos: i, char: board.words[row - 1][i], type: \"🟨\" };\n        }\n    }\n    return { pos: -1, char: \"\", type: \"⬛\" };\n}\nclass Tile {\n    constructor() {\n        this.notSet = new Set();\n    }\n    not(char) {\n        this.notSet.add(char);\n    }\n}\nclass WordData {\n    constructor() {\n        this.notSet = new Set();\n        this.letterCounts = new Map();\n        this.word = [];\n        for (let col = 0; col < COLS; ++col) {\n            this.word.push(new Tile());\n        }\n    }\n    confirmCount(char) {\n        let c = this.letterCounts.get(char);\n        if (!c) {\n            this.not(char);\n        }\n        else {\n            c[1] = true;\n        }\n    }\n    countConfirmed(char) {\n        const val = this.letterCounts.get(char);\n        return val ? val[1] : false;\n    }\n    setCount(char, count) {\n        let c = this.letterCounts.get(char);\n        if (!c) {\n            this.letterCounts.set(char, [count, false]);\n        }\n        else {\n            c[0] = count;\n        }\n    }\n    incrementCount(char) {\n        ++this.letterCounts.get(char)[0];\n    }\n    not(char) {\n        this.notSet.add(char);\n    }\n    inGlobalNotList(char) {\n        return this.notSet.has(char);\n    }\n    lettersNotAt(pos) {\n        return new Set([...this.notSet, ...this.word[pos].notSet]);\n    }\n}\nexport function getRowData(n, board) {\n    const wd = new WordData();\n    for (let row = 0; row < n; ++row) {\n        const occured = new Set();\n        for (let col = 0; col < COLS; ++col) {\n            const state = board.state[row][col];\n            const char = board.words[row][col];\n            if (state === \"⬛\") {\n                wd.confirmCount(char);\n                // if char isn't in the global not list add it to the not list for that position\n                if (!wd.inGlobalNotList(char)) {\n                    wd.word[col].not(char);\n                }\n                continue;\n            }\n            // If this isn't the first time this letter has occured in this row\n            if (occured.has(char)) {\n                wd.incrementCount(char);\n            }\n            else if (!wd.countConfirmed(char)) {\n                occured.add(char);\n                wd.setCount(char, 1);\n            }\n            if (state === \"🟩\") {\n                wd.word[col].value = char;\n            }\n            else { // if (state === \"🟨\")\n                wd.word[col].not(char);\n            }\n        }\n    }\n    let exp = \"\";\n    for (let pos = 0; pos < wd.word.length; ++pos) {\n        exp += wd.word[pos].value ? wd.word[pos].value : `[^${[...wd.lettersNotAt(pos)].join(\" \")}]`;\n    }\n    return (word) => {\n        if (new RegExp(exp).test(word)) {\n            const chars = word.split(\"\");\n            for (const e of wd.letterCounts) {\n                const occurences = countOccurences(chars, e[0]);\n                if (!occurences || (e[1][1] && occurences !== e[1][0]))\n                    return false;\n            }\n            return true;\n        }\n        return false;\n    };\n}\nfunction countOccurences(arr, val) {\n    return arr.reduce((count, v) => v === val ? count + 1 : count, 0);\n}\nexport function getState(word, guess) {\n    const charArr = word.split(\"\");\n    const result = Array(5).fill(\"⬛\");\n    for (let i = 0; i < word.length; ++i) {\n        if (charArr[i] === guess.charAt(i)) {\n            result[i] = \"🟩\";\n            charArr[i] = \"$\";\n        }\n    }\n    for (let i = 0; i < word.length; ++i) {\n        const pos = charArr.indexOf(guess[i]);\n        if (result[i] !== \"🟩\" && pos >= 0) {\n            charArr[pos] = \"$\";\n            result[i] = \"🟨\";\n        }\n    }\n    return result;\n}\nexport function contractNum(n) {\n    switch (n % 10) {\n        case 1: return `${n}st`;\n        case 2: return `${n}nd`;\n        case 3: return `${n}rd`;\n        default: return `${n}th`;\n    }\n}\nexport const keys = [\"qwertyuiop\", \"asdfghjkl\", \"zxcvbnm\"];\nexport function newSeed(mode) {\n    const today = new Date();\n    switch (mode) {\n        case GameMode.advisorya:\n            return 1; //new Date(today.getFullYear(), today.getMonth(), today.getDate(), today.getHours(), today.getMinutes(), today.getSeconds()).valueOf();\n        case GameMode.advisoryb:\n            return 2; //new Date(today.getFullYear(), today.getMonth(), today.getDate(), today.getHours(), today.getMinutes(), today.getSeconds()).valueOf();\n        case GameMode.advisoryc:\n            return 3; //new Date(today.getFullYear(), today.getMonth(), today.getDate(), today.getHours(), today.getMinutes(), today.getSeconds()).valueOf();\n        case GameMode.advisoryd:\n            return 4; //new Date(today.getFullYear(), today.getMonth(), today.getDate(), today.getHours(), today.getMinutes(), today.getSeconds()).valueOf();\n        case GameMode.advisorye:\n            return 5; //new Date(today.getFullYear(), today.getMonth(), today.getDate(), today.getHours(), today.getMinutes(), today.getSeconds()).valueOf();\n        case GameMode.advisoryf:\n            return 6; //new Date(today.getFullYear(), today.getMonth(), today.getDate(), today.getHours(), today.getMinutes(), today.getSeconds()).valueOf();\n        // case GameMode.minutely:\n        // \treturn new Date(today.getFullYear(), today.getMonth(), today.getDate(), today.getHours(), today.getMinutes()).valueOf();\n    }\n}\nexport const modeData = {\n    default: GameMode.advisorya,\n    modes: [\n        {\n            name: \"9A (Rich)\",\n            unit: 1000,\n            start: 0,\n            seed: newSeed(GameMode.advisorya),\n            historical: false,\n            icon: \"m7,100c0,-50 68,-50 93,0c25,50 93,50 93,0c0,-50 -68,-50 -93,0c-25,50 -93,50 -93,0z\",\n        },\n        {\n            name: \"9-10 (Corinne)\",\n            unit: 1000,\n            start: 0,\n            seed: newSeed(GameMode.advisoryb),\n            historical: false,\n            icon: \"m7,100c0,-50 68,-50 93,0c25,50 93,50 93,0c0,-50 -68,-50 -93,0c-25,50 -93,50 -93,0z\",\n        },\n        {\n            name: \"10A (Scott)\",\n            unit: 1000,\n            start: 0,\n            seed: newSeed(GameMode.advisoryc),\n            historical: false,\n            icon: \"m7,100c0,-50 68,-50 93,0c25,50 93,50 93,0c0,-50 -68,-50 -93,0c-25,50 -93,50 -93,0z\",\n        },\n        {\n            name: \"10B (Jenni)\",\n            unit: 1000,\n            start: 0,\n            seed: newSeed(GameMode.advisoryd),\n            historical: false,\n            icon: \"m7,100c0,-50 68,-50 93,0c25,50 93,50 93,0c0,-50 -68,-50 -93,0c-25,50 -93,50 -93,0z\",\n        },\n        {\n            name: \"11 (Daniel)\",\n            unit: 1000,\n            start: 0,\n            seed: newSeed(GameMode.advisorye),\n            historical: false,\n            icon: \"m7,100c0,-50 68,-50 93,0c25,50 93,50 93,0c0,-50 -68,-50 -93,0c-25,50 -93,50 -93,0z\",\n        },\n        {\n            name: \"12 (Ben)\",\n            unit: 1000,\n            start: 0,\n            seed: newSeed(GameMode.advisoryf),\n            historical: false,\n            icon: \"m7,100c0,-50 68,-50 93,0c25,50 93,50 93,0c0,-50 -68,-50 -93,0c-25,50 -93,50 -93,0z\",\n        },\n        // {\n        // \tname: \"Minutely\",\n        // \tunit: 60000,\n        // \tstart: 1642528800000,\t// 18/01/2022 8:00pm\n        // \tseed: newSeed(GameMode.minutely),\n        // \thistorical: false,\n        // \ticon: \"m7,200v-200l93,100l93,-100v200\",\n        // \tstreak: true,\n        // },\n    ]\n};\nexport function getWordNumber(mode) {\n    return modeData.modes[mode].seed; //Math.round((modeData.modes[mode].seed - modeData.modes[mode].start) / modeData.modes[mode].unit) + 1;\n}\nexport function seededRandomInt(min, max, seed) {\n    const rng = seedrandom(`${seed}`);\n    return seed - 1; //Math.floor(min + (max - min) * rng());\n}\nexport const DELAY_INCREMENT = 200;\nexport const PRAISE = [\n    \"Genius\",\n    \"Magnificent\",\n    \"Impressive\",\n    \"Splendid\",\n    \"Great\",\n    \"Phew\",\n];\nexport function createNewGame(mode) {\n    return {\n        active: true,\n        guesses: 0,\n        time: modeData.modes[mode].seed,\n        wordNumber: getWordNumber(mode),\n        validHard: true,\n        board: {\n            words: Array(ROWS).fill(\"\"),\n            state: Array.from({ length: ROWS }, () => (Array(COLS).fill(\"🔳\")))\n        },\n    };\n}\nexport function createDefaultSettings() {\n    return {\n        hard: new Array(modeData.modes.length).map(() => false),\n        dark: true,\n        colorblind: false,\n        tutorial: 3,\n    };\n}\nexport function createDefaultStats(mode) {\n    const stats = {\n        played: 0,\n        lastGame: 0,\n        guesses: {\n            fail: 0,\n            1: 0,\n            2: 0,\n            3: 0,\n            4: 0,\n            5: 0,\n            6: 0,\n        }\n    };\n    if (!modeData.modes[mode].streak)\n        return stats;\n    return Object.assign(Object.assign({}, stats), { streak: 0, maxStreak: 0 });\n}\n;\nexport function createLetterStates() {\n    return {\n        a: \"🔳\",\n        b: \"🔳\",\n        c: \"🔳\",\n        d: \"🔳\",\n        e: \"🔳\",\n        f: \"🔳\",\n        g: \"🔳\",\n        h: \"🔳\",\n        i: \"🔳\",\n        j: \"🔳\",\n        k: \"🔳\",\n        l: \"🔳\",\n        m: \"🔳\",\n        n: \"🔳\",\n        o: \"🔳\",\n        p: \"🔳\",\n        q: \"🔳\",\n        r: \"🔳\",\n        s: \"🔳\",\n        t: \"🔳\",\n        u: \"🔳\",\n        v: \"🔳\",\n        w: \"🔳\",\n        x: \"🔳\",\n        y: \"🔳\",\n        z: \"🔳\",\n    };\n}\nexport const definitions = new Map();\n","export { identity as linear } from '../internal/index.mjs';\n\n/*\nAdapted from https://github.com/mattdesl\nDistributed under MIT License https://github.com/mattdesl/eases/blob/master/LICENSE.md\n*/\nfunction backInOut(t) {\n    const s = 1.70158 * 1.525;\n    if ((t *= 2) < 1)\n        return 0.5 * (t * t * ((s + 1) * t - s));\n    return 0.5 * ((t -= 2) * t * ((s + 1) * t + s) + 2);\n}\nfunction backIn(t) {\n    const s = 1.70158;\n    return t * t * ((s + 1) * t - s);\n}\nfunction backOut(t) {\n    const s = 1.70158;\n    return --t * t * ((s + 1) * t + s) + 1;\n}\nfunction bounceOut(t) {\n    const a = 4.0 / 11.0;\n    const b = 8.0 / 11.0;\n    const c = 9.0 / 10.0;\n    const ca = 4356.0 / 361.0;\n    const cb = 35442.0 / 1805.0;\n    const cc = 16061.0 / 1805.0;\n    const t2 = t * t;\n    return t < a\n        ? 7.5625 * t2\n        : t < b\n            ? 9.075 * t2 - 9.9 * t + 3.4\n            : t < c\n                ? ca * t2 - cb * t + cc\n                : 10.8 * t * t - 20.52 * t + 10.72;\n}\nfunction bounceInOut(t) {\n    return t < 0.5\n        ? 0.5 * (1.0 - bounceOut(1.0 - t * 2.0))\n        : 0.5 * bounceOut(t * 2.0 - 1.0) + 0.5;\n}\nfunction bounceIn(t) {\n    return 1.0 - bounceOut(1.0 - t);\n}\nfunction circInOut(t) {\n    if ((t *= 2) < 1)\n        return -0.5 * (Math.sqrt(1 - t * t) - 1);\n    return 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1);\n}\nfunction circIn(t) {\n    return 1.0 - Math.sqrt(1.0 - t * t);\n}\nfunction circOut(t) {\n    return Math.sqrt(1 - --t * t);\n}\nfunction cubicInOut(t) {\n    return t < 0.5 ? 4.0 * t * t * t : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;\n}\nfunction cubicIn(t) {\n    return t * t * t;\n}\nfunction cubicOut(t) {\n    const f = t - 1.0;\n    return f * f * f + 1.0;\n}\nfunction elasticInOut(t) {\n    return t < 0.5\n        ? 0.5 *\n            Math.sin(((+13.0 * Math.PI) / 2) * 2.0 * t) *\n            Math.pow(2.0, 10.0 * (2.0 * t - 1.0))\n        : 0.5 *\n            Math.sin(((-13.0 * Math.PI) / 2) * (2.0 * t - 1.0 + 1.0)) *\n            Math.pow(2.0, -10.0 * (2.0 * t - 1.0)) +\n            1.0;\n}\nfunction elasticIn(t) {\n    return Math.sin((13.0 * t * Math.PI) / 2) * Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction elasticOut(t) {\n    return (Math.sin((-13.0 * (t + 1.0) * Math.PI) / 2) * Math.pow(2.0, -10.0 * t) + 1.0);\n}\nfunction expoInOut(t) {\n    return t === 0.0 || t === 1.0\n        ? t\n        : t < 0.5\n            ? +0.5 * Math.pow(2.0, 20.0 * t - 10.0)\n            : -0.5 * Math.pow(2.0, 10.0 - t * 20.0) + 1.0;\n}\nfunction expoIn(t) {\n    return t === 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));\n}\nfunction expoOut(t) {\n    return t === 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);\n}\nfunction quadInOut(t) {\n    t /= 0.5;\n    if (t < 1)\n        return 0.5 * t * t;\n    t--;\n    return -0.5 * (t * (t - 2) - 1);\n}\nfunction quadIn(t) {\n    return t * t;\n}\nfunction quadOut(t) {\n    return -t * (t - 2.0);\n}\nfunction quartInOut(t) {\n    return t < 0.5\n        ? +8.0 * Math.pow(t, 4.0)\n        : -8.0 * Math.pow(t - 1.0, 4.0) + 1.0;\n}\nfunction quartIn(t) {\n    return Math.pow(t, 4.0);\n}\nfunction quartOut(t) {\n    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;\n}\nfunction quintInOut(t) {\n    if ((t *= 2) < 1)\n        return 0.5 * t * t * t * t * t;\n    return 0.5 * ((t -= 2) * t * t * t * t + 2);\n}\nfunction quintIn(t) {\n    return t * t * t * t * t;\n}\nfunction quintOut(t) {\n    return --t * t * t * t * t + 1;\n}\nfunction sineInOut(t) {\n    return -0.5 * (Math.cos(Math.PI * t) - 1);\n}\nfunction sineIn(t) {\n    const v = Math.cos(t * Math.PI * 0.5);\n    if (Math.abs(v) < 1e-14)\n        return 1;\n    else\n        return 1 - v;\n}\nfunction sineOut(t) {\n    return Math.sin((t * Math.PI) / 2);\n}\n\nexport { backIn, backInOut, backOut, bounceIn, bounceInOut, bounceOut, circIn, circInOut, circOut, cubicIn, cubicInOut, cubicOut, elasticIn, elasticInOut, elasticOut, expoIn, expoInOut, expoOut, quadIn, quadInOut, quadOut, quartIn, quartInOut, quartOut, quintIn, quintInOut, quintOut, sineIn, sineInOut, sineOut };\n","import { cubicInOut, linear, cubicOut } from '../easing/index.mjs';\nimport { is_function, assign } from '../internal/index.mjs';\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\n\nfunction blur(node, { delay = 0, duration = 400, easing = cubicInOut, amount = 5, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const f = style.filter === 'none' ? '' : style.filter;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `opacity: ${target_opacity - (od * u)}; filter: ${f} blur(${u * amount}px);`\n    };\n}\nfunction fade(node, { delay = 0, duration = 400, easing = linear } = {}) {\n    const o = +getComputedStyle(node).opacity;\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => `opacity: ${t * o}`\n    };\n}\nfunction fly(node, { delay = 0, duration = 400, easing = cubicOut, x = 0, y = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `\n\t\t\ttransform: ${transform} translate(${(1 - t) * x}px, ${(1 - t) * y}px);\n\t\t\topacity: ${target_opacity - (od * u)}`\n    };\n}\nfunction slide(node, { delay = 0, duration = 400, easing = cubicOut } = {}) {\n    const style = getComputedStyle(node);\n    const opacity = +style.opacity;\n    const height = parseFloat(style.height);\n    const padding_top = parseFloat(style.paddingTop);\n    const padding_bottom = parseFloat(style.paddingBottom);\n    const margin_top = parseFloat(style.marginTop);\n    const margin_bottom = parseFloat(style.marginBottom);\n    const border_top_width = parseFloat(style.borderTopWidth);\n    const border_bottom_width = parseFloat(style.borderBottomWidth);\n    return {\n        delay,\n        duration,\n        easing,\n        css: t => 'overflow: hidden;' +\n            `opacity: ${Math.min(t * 20, 1) * opacity};` +\n            `height: ${t * height}px;` +\n            `padding-top: ${t * padding_top}px;` +\n            `padding-bottom: ${t * padding_bottom}px;` +\n            `margin-top: ${t * margin_top}px;` +\n            `margin-bottom: ${t * margin_bottom}px;` +\n            `border-top-width: ${t * border_top_width}px;` +\n            `border-bottom-width: ${t * border_bottom_width}px;`\n    };\n}\nfunction scale(node, { delay = 0, duration = 400, easing = cubicOut, start = 0, opacity = 0 } = {}) {\n    const style = getComputedStyle(node);\n    const target_opacity = +style.opacity;\n    const transform = style.transform === 'none' ? '' : style.transform;\n    const sd = 1 - start;\n    const od = target_opacity * (1 - opacity);\n    return {\n        delay,\n        duration,\n        easing,\n        css: (_t, u) => `\n\t\t\ttransform: ${transform} scale(${1 - (sd * u)});\n\t\t\topacity: ${target_opacity - (od * u)}\n\t\t`\n    };\n}\nfunction draw(node, { delay = 0, speed, duration, easing = cubicInOut } = {}) {\n    let len = node.getTotalLength();\n    const style = getComputedStyle(node);\n    if (style.strokeLinecap !== 'butt') {\n        len += parseInt(style.strokeWidth);\n    }\n    if (duration === undefined) {\n        if (speed === undefined) {\n            duration = 800;\n        }\n        else {\n            duration = len / speed;\n        }\n    }\n    else if (typeof duration === 'function') {\n        duration = duration(len);\n    }\n    return {\n        delay,\n        duration,\n        easing,\n        css: (t, u) => `stroke-dasharray: ${t * len} ${u * len}`\n    };\n}\nfunction crossfade(_a) {\n    var { fallback } = _a, defaults = __rest(_a, [\"fallback\"]);\n    const to_receive = new Map();\n    const to_send = new Map();\n    function crossfade(from, node, params) {\n        const { delay = 0, duration = d => Math.sqrt(d) * 30, easing = cubicOut } = assign(assign({}, defaults), params);\n        const to = node.getBoundingClientRect();\n        const dx = from.left - to.left;\n        const dy = from.top - to.top;\n        const dw = from.width / to.width;\n        const dh = from.height / to.height;\n        const d = Math.sqrt(dx * dx + dy * dy);\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        const opacity = +style.opacity;\n        return {\n            delay,\n            duration: is_function(duration) ? duration(d) : duration,\n            easing,\n            css: (t, u) => `\n\t\t\t\topacity: ${t * opacity};\n\t\t\t\ttransform-origin: top left;\n\t\t\t\ttransform: ${transform} translate(${u * dx}px,${u * dy}px) scale(${t + (1 - t) * dw}, ${t + (1 - t) * dh});\n\t\t\t`\n        };\n    }\n    function transition(items, counterparts, intro) {\n        return (node, params) => {\n            items.set(params.key, {\n                rect: node.getBoundingClientRect()\n            });\n            return () => {\n                if (counterparts.has(params.key)) {\n                    const { rect } = counterparts.get(params.key);\n                    counterparts.delete(params.key);\n                    return crossfade(rect, node, params);\n                }\n                // if the node is disappearing altogether\n                // (i.e. wasn't claimed by the other list)\n                // then we need to supply an outro\n                items.delete(params.key);\n                return fallback && fallback(node, params, intro);\n            };\n        };\n    }\n    return [\n        transition(to_send, to_receive, false),\n        transition(to_receive, to_send, true)\n    ];\n}\n\nexport { blur, crossfade, draw, fade, fly, scale, slide };\n","import { noop, safe_not_equal, subscribe, run_all, is_function } from '../internal/index.mjs';\nexport { get_store_value as get } from '../internal/index.mjs';\n\nconst subscriber_queue = [];\n/**\n * Creates a `Readable` store that allows reading by subscription.\n * @param value initial value\n * @param {StartStopNotifier}start start and stop notifications for subscriptions\n */\nfunction readable(value, start) {\n    return {\n        subscribe: writable(value, start).subscribe\n    };\n}\n/**\n * Create a `Writable` store that allows both updating and reading by subscription.\n * @param {*=}value initial value\n * @param {StartStopNotifier=}start start and stop notifications for subscriptions\n */\nfunction writable(value, start = noop) {\n    let stop;\n    const subscribers = new Set();\n    function set(new_value) {\n        if (safe_not_equal(value, new_value)) {\n            value = new_value;\n            if (stop) { // store is ready\n                const run_queue = !subscriber_queue.length;\n                for (const subscriber of subscribers) {\n                    subscriber[1]();\n                    subscriber_queue.push(subscriber, value);\n                }\n                if (run_queue) {\n                    for (let i = 0; i < subscriber_queue.length; i += 2) {\n                        subscriber_queue[i][0](subscriber_queue[i + 1]);\n                    }\n                    subscriber_queue.length = 0;\n                }\n            }\n        }\n    }\n    function update(fn) {\n        set(fn(value));\n    }\n    function subscribe(run, invalidate = noop) {\n        const subscriber = [run, invalidate];\n        subscribers.add(subscriber);\n        if (subscribers.size === 1) {\n            stop = start(set) || noop;\n        }\n        run(value);\n        return () => {\n            subscribers.delete(subscriber);\n            if (subscribers.size === 0) {\n                stop();\n                stop = null;\n            }\n        };\n    }\n    return { set, update, subscribe };\n}\nfunction derived(stores, fn, initial_value) {\n    const single = !Array.isArray(stores);\n    const stores_array = single\n        ? [stores]\n        : stores;\n    const auto = fn.length < 2;\n    return readable(initial_value, (set) => {\n        let inited = false;\n        const values = [];\n        let pending = 0;\n        let cleanup = noop;\n        const sync = () => {\n            if (pending) {\n                return;\n            }\n            cleanup();\n            const result = fn(single ? values[0] : values, set);\n            if (auto) {\n                set(result);\n            }\n            else {\n                cleanup = is_function(result) ? result : noop;\n            }\n        };\n        const unsubscribers = stores_array.map((store, i) => subscribe(store, (value) => {\n            values[i] = value;\n            pending &= ~(1 << i);\n            if (inited) {\n                sync();\n            }\n        }, () => {\n            pending |= (1 << i);\n        }));\n        inited = true;\n        sync();\n        return function stop() {\n            run_all(unsubscribers);\n            cleanup();\n        };\n    });\n}\n\nexport { derived, readable, writable };\n","import { writable } from \"svelte/store\";\nimport { createDefaultSettings, createLetterStates } from \"./utils\";\nexport const mode = writable();\nexport const letterStates = writable(createLetterStates());\nexport const settings = writable(createDefaultSettings());\n","<script lang=\"ts\">\n\texport let onClick = () => {};\n</script>\n\n<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" on:click={onClick}>\n\t<slot />\n</svg>\n\n<style lang=\"scss\">\n\tsvg {\n\t\tcursor: pointer;\n\t\twidth: 24px;\n\t\tmargin: 0 4px;\n\t\t:global(path) {\n\t\t\tfill: var(--icon-color);\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher, getContext } from \"svelte\";\n\timport { scale, fade } from \"svelte/transition\";\n\timport { mode } from \"../stores\";\n\timport { modeData } from \"../utils\";\n\timport GameIcon from \"./GameIcon.svelte\";\n\timport type { Toaster } from \"./widgets\";\n\n\texport let showStats: boolean;\n\texport let tutorial: boolean;\n\texport let showRefresh: boolean;\n\n\texport let toaster = getContext<Toaster>(\"toaster\");\n\n\tconst dispatch = createEventDispatcher();\n\tmode.subscribe((m) => {\n\t\tif (modeData.modes[m].unit - (new Date().valueOf() - modeData.modes[m].seed) > 0) {\n\t\t\tshowRefresh = false;\n\t\t}\n\t});\n</script>\n\n<header>\n\t<div class=\"icons\">\n\t\t<GameIcon onClick={() => dispatch(\"tutorial\")}>\n\t\t\t<path\n\t\t\t\td=\"M11 18h2v-2h-2v2zm1-16C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zm0-14c-2.21 0-4 1.79-4 4h2c0-1.1.9-2 2-2s2 .9 2 2c0 2-3 1.75-3 5h2c0-2.25 3-2.5 3-5 0-2.21-1.79-4-4-4z\"\n\t\t\t/>\n\t\t</GameIcon>\n\t\t{#if showRefresh}\n\t\t\t<GameIcon onClick={() => dispatch(\"reload\")}>\n\t\t\t\t<path\n\t\t\t\t\ttransition:fade={{ duration: 200 }}\n\t\t\t\t\td=\"M4.609 12c0-4.082 3.309-7.391 7.391-7.391a7.39 7.39 0 0 1 6.523 3.912l-1.653 1.567H22v-5.13l-1.572 1.659C18.652 3.841 15.542 2 12 2 6.477 2 2 6.477 2 12s4.477 10 10 10c4.589 0 8.453-3.09 9.631-7.301l-2.512-.703c-.871 3.113-3.73 5.395-7.119 5.395-4.082 0-7.391-3.309-7.391-7.391z\"\n\t\t\t\t/>\n\t\t\t</GameIcon>\n\t\t{/if}\n\t</div>\n\t<h1\n\t\ton:click|self={() => {\n\t\t\t$mode = ($mode + 1) % modeData.modes.length;\n\t\t\ttoaster.pop(modeData.modes[$mode].name);\n\t\t}}\n\t\ton:contextmenu|preventDefault|self={() => {\n\t\t\t$mode = ($mode - 1 + modeData.modes.length) % modeData.modes.length;\n\t\t\ttoaster.pop(modeData.modes[$mode].name);\n\t\t}}\n\t>\n\t\tNotWordle\n\t</h1>\n\t<div class=\"icons\">\n\t\t{#if showStats}\n\t\t\t<GameIcon onClick={() => dispatch(\"stats\")}>\n\t\t\t\t<path\n\t\t\t\t\ttransition:fade={{ duration: 200 }}\n\t\t\t\t\td=\"M16,11V3H8v6H2v12h20V11H16z M10,5h4v14h-4V5z M4,11h4v8H4V11z M20,19h-4v-6h4V19z\"\n\t\t\t\t/>\n\t\t\t</GameIcon>\n\t\t{/if}\n\t\t<GameIcon onClick={() => dispatch(\"settings\")}>\n\t\t\t<path\n\t\t\t\td=\"M19.14,12.94c0.04-0.3,0.06-0.61,0.06-0.94c0-0.32-0.02-0.64-0.07-0.94l2.03-1.58c0.18-0.14,0.23-0.41,0.12-0.61 l-1.92-3.32c-0.12-0.22-0.37-0.29-0.59-0.22l-2.39,0.96c-0.5-0.38-1.03-0.7-1.62-0.94L14.4,2.81c-0.04-0.24-0.24-0.41-0.48-0.41 h-3.84c-0.24,0-0.43,0.17-0.47,0.41L9.25,5.35C8.66,5.59,8.12,5.92,7.63,6.29L5.24,5.33c-0.22-0.08-0.47,0-0.59,0.22L2.74,8.87 C2.62,9.08,2.66,9.34,2.86,9.48l2.03,1.58C4.84,11.36,4.8,11.69,4.8,12s0.02,0.64,0.07,0.94l-2.03,1.58 c-0.18,0.14-0.23,0.41-0.12,0.61l1.92,3.32c0.12,0.22,0.37,0.29,0.59,0.22l2.39-0.96c0.5,0.38,1.03,0.7,1.62,0.94l0.36,2.54 c0.05,0.24,0.24,0.41,0.48,0.41h3.84c0.24,0,0.44-0.17,0.47-0.41l0.36-2.54c0.59-0.24,1.13-0.56,1.62-0.94l2.39,0.96 c0.22,0.08,0.47,0,0.59-0.22l1.92-3.32c0.12-0.22,0.07-0.47-0.12-0.61L19.14,12.94z M12,15.6c-1.98,0-3.6-1.62-3.6-3.6 s1.62-3.6,3.6-3.6s3.6,1.62,3.6,3.6S13.98,15.6,12,15.6z\"\n\t\t\t/>\n\t\t</GameIcon>\n\t</div>\n\t{#if tutorial}\n\t\t<div transition:scale class=\"tutorial\" on:click={() => dispatch(\"closeTutPopUp\")}>\n\t\t\tTap NotWordle to change Advisory\n\t\t\t<span class=\"ok\">OK</span>\n\t\t</div>\n\t{/if}\n</header>\n\n<style lang=\"scss\">\n\theader {\n\t\t--height: 51px;\n\t\tposition: relative;\n\t\tfont-weight: 700;\n\t\ttext-transform: uppercase;\n\t\tletter-spacing: 0.2rem;\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\tborder-bottom: 1px solid var(--border-primary);\n\t\twidth: 100%;\n\t\theight: var(--height);\n\t\tposition: relative;\n\t}\n\t.icons {\n\t\theight: 100%;\n\t\tz-index: 1;\n\t\tdisplay: flex;\n\t}\n\th1 {\n\t\tposition: absolute;\n\t\twidth: 100%;\n\t\tfont-size: var(--fs-large);\n\t\tcursor: pointer;\n\t\ttext-align: center;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { onDestroy } from \"svelte\";\n\n\timport { mode } from \"../../stores\";\n\n\timport { DELAY_INCREMENT, ROWS } from \"../../utils\";\n\n\texport let value = \"\";\n\texport let state: LetterState;\n\texport let position = 0;\n\texport function bounce() {\n\t\tsetTimeout(() => (animation = \"bounce\"), (ROWS + position) * DELAY_INCREMENT);\n\t}\n\tlet s: string;\n\tlet pop = false;\n\tlet animation = \"\";\n\n\t// reset animation when value changes, because for some reason changing anination to \"\" when the game is over causes the tiles to flash\n\t$: !value && (animation = \"\");\n\n\t// ensure all animations play\n\tconst unsub = mode.subscribe(() => {\n\t\tanimation = \"\";\n\t\ts = \"🔳\";\n\t\tsetTimeout(() => (s = \"\"), 10);\n\t});\n\t// prevent pop animation from playing at the beginning\n\tsetTimeout(() => (pop = true), 200);\n\n\tonDestroy(unsub);\n</script>\n\n<div\n\tdata-animation={animation}\n\tclass:value\n\tclass:pop\n\tclass=\"tile {state} {s}\"\n\tstyle=\"transition-delay: {position * DELAY_INCREMENT}ms\"\n>\n\t<div class=\"front\">{value}</div>\n\t<div class=\"back\">{value}</div>\n</div>\n\n<style lang=\"scss\">\n\t:not(.pop),\n\t:global(.complete) .value {\n\t\tscale: 1 !important;\n\t\topacity: 1 !important;\n\t}\n\t.value {\n\t\tanimation: pop 0.1s;\n\t\t.front {\n\t\t\tborder-color: var(--border-primary);\n\t\t}\n\t}\n\t.tile {\n\t\tfont-size: 2rem;\n\t\tfont-weight: bold;\n\t\ttext-transform: uppercase;\n\t\tposition: relative;\n\t\ttransform-style: preserve-3d;\n\t\t&[data-animation=\"bounce\"] {\n\t\t\tanimation: bounce 1s;\n\t\t}\n\t}\n\t.back,\n\t.front {\n\t\tdisplay: grid;\n\t\tplace-items: center;\n\t\tposition: absolute;\n\t\tinset: 0;\n\t\tbackface-visibility: hidden;\n\t\t-webkit-backface-visibility: hidden;\n\t\ttransition: transform 0s ease-in-out;\n\t}\n\t.front {\n\t\tborder: 2px solid var(--border-primary);\n\t\ttransform: rotateX(0deg);\n\t\tcolor: var(--fg-primary);\n\t}\n\t.back {\n\t\tbackground: var(--color-absent);\n\t\ttransform: rotateX(180deg);\n\t}\n\t.🟩 .back {\n\t\tbackground: var(--color-correct);\n\t}\n\t.🟨 .back {\n\t\tbackground: var(--color-present);\n\t}\n\t:global(.complete) .tile:not(.🔳) .front {\n\t\ttransition-delay: inherit !important;\n\t\ttransition-duration: 0.8s;\n\t\ttransform: rotateX(180deg);\n\t}\n\t:global(.complete) .tile:not(.🔳) .back {\n\t\ttransition-delay: inherit !important;\n\t\ttransition-duration: 0.8s;\n\t\ttransform: rotateX(0deg);\n\t}\n\t@keyframes pop {\n\t\tfrom {\n\t\t\tscale: 0.8;\n\t\t\topacity: 0;\n\t\t}\n\n\t\t40% {\n\t\t\tscale: 1.1;\n\t\t\topacity: 1;\n\t\t}\n\t}\n\t@keyframes bounce {\n\t\t0%,\n\t\t20% {\n\t\t\ttransform: translateY(0);\n\t\t}\n\t\t40% {\n\t\t\ttransform: translateY(-30px);\n\t\t}\n\t\t50% {\n\t\t\ttransform: translateY(5px);\n\t\t}\n\t\t60% {\n\t\t\ttransform: translateY(-15px);\n\t\t}\n\t\t80% {\n\t\t\ttransform: translateY(2px);\n\t\t}\n\t\t100% {\n\t\t\ttransform: translateY(0);\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\timport { COLS } from \"../../utils\";\n\n\timport Tile from \"./Tile.svelte\";\n\texport let guesses: number;\n\texport let num: number;\n\texport let value = \"\";\n\texport let state: LetterState[];\n\texport function shake() {\n\t\tanimation = \"shake\";\n\t}\n\texport function bounce() {\n\t\ttiles.forEach((e) => e.bounce());\n\t}\n\tconst dispatch = createEventDispatcher();\n\tlet animation = \"\";\n\tlet tiles: Tile[] = [];\n</script>\n\n<div\n\tclass=\"board-row\"\n\ton:contextmenu|preventDefault={(e) => dispatch(\"ctx\", { x: e.clientX, y: e.clientY })}\n\ton:dblclick|preventDefault={(e) => dispatch(\"ctx\", { x: e.clientX, y: e.clientY })}\n\ton:animationend={() => (animation = \"\")}\n\tdata-animation={animation}\n\tclass:complete={guesses > num}\n>\n\t{#each Array(COLS) as _, i}\n\t\t<Tile bind:this={tiles[i]} state={state[i]} value={value.charAt(i)} position={i} />\n\t{/each}\n</div>\n\n<style lang=\"scss\">\n\t.board-row {\n\t\tdisplay: grid;\n\t\tgrid-template-columns: repeat(var(--cols), 1fr);\n\t\tgap: 5px;\n\t\t&[data-animation=\"shake\"] {\n\t\t\tanimation: shake 0.6s;\n\t\t}\n\t}\n\t@keyframes shake {\n\t\t10%,\n\t\t90% {\n\t\t\ttransform: translateX(-1px);\n\t\t}\n\n\t\t20%,\n\t\t80% {\n\t\t\ttransform: translateX(2px);\n\t\t}\n\n\t\t30%,\n\t\t50%,\n\t\t70% {\n\t\t\ttransform: translateX(-4px);\n\t\t}\n\n\t\t40%,\n\t\t60% {\n\t\t\ttransform: translateX(4px);\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { definitions as cache } from \"../../utils\";\n\texport let word: string;\n\t/** The maximum number of alternate definitions to provide*/\n\texport let alternates = 9;\n\n\tasync function getWordData(word: string): Promise<DictionaryEntry> {\n\t\tif (!cache.has(word)) {\n\t\t\tconst data = await fetch(`https://api.dictionaryapi.dev/api/v2/entries/en/${word}`, {\n\t\t\t\tmode: \"cors\",\n\t\t\t});\n\t\t\tif (data.ok) {\n\t\t\t\tcache.set(word, (await data.json())[0]);\n\t\t\t} else {\n\t\t\t\tthrow new Error(`Failed to fetch definition`);\n\t\t\t}\n\t\t}\n\t\treturn cache.get(word);\n\t}\n</script>\n\n<div class=\"def\">\n\t{#await getWordData(word)}\n\t\t<h4>Fetching definition...</h4>\n\t{:then data}\n\t\t<h2>{word}</h2>\n\t\t<em>{data.meanings[0].partOfSpeech}</em>\n\t\t<ol>\n\t\t\t{#if word !== data.word}\n\t\t\t\t<li>variant of {data.word}.</li>\n\t\t\t{/if}\n\t\t\t{#each data.meanings[0].definitions.slice(0, 1 + alternates - (word !== data.word ? 1 : 0)) as def}\n\t\t\t\t<li>{def.definition}</li>\n\t\t\t{/each}\n\t\t</ol>\n\t{:catch}\n\t\t<div>Your word was <strong>{word}</strong>. (failed to fetch definition)</div>\n\t{/await}\n</div>\n\n<style>\n\th2 {\n\t\tdisplay: inline-block;\n\t\tmargin-right: 1rem;\n\t\tmargin-bottom: 0.8rem;\n\t}\n\tol {\n\t\tpadding-left: 1.5rem;\n\t}\n\tli {\n\t\tmargin-bottom: 0.5rem;\n\t}\n\tli::first-letter {\n\t\ttext-transform: uppercase;\n\t}\n\tli::marker {\n\t\tcolor: var(--fg-secondary);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport Definition from \"./Definition.svelte\";\n\n\texport let x = 0;\n\texport let y = 0;\n\texport let word = \"\";\n\texport let pAns: number;\n\texport let pSols: number;\n\tconst width = parseInt(getComputedStyle(document.body).getPropertyValue(\"--game-width\")) / 2;\n\n\t$: x = window.innerWidth - x < width ? window.innerWidth - width : x;\n</script>\n\n<div class=\"ctx-menu\" style=\"top: {y}px; left: {x}px;\">\n\t{#if word !== \"\"}\n\t\t<div>\n\t\t\tConsidering all hints, this row had:\n\t\t\t<br /><br />\n\t\t\t{pAns} possible answers\n\t\t\t<br />\n\t\t\t{pSols} valid guesses\n\t\t</div>\n\t\t<Definition {word} alternates={1} />\n\t{:else}\n\t\t<div>\n\t\t\tConsidering all hints, there are:\n\t\t\t<br /><br />\n\t\t\t{pAns} possible answers\n\t\t\t<br />\n\t\t\t{pSols} valid guesses\n\t\t</div>\n\t{/if}\n</div>\n\n<style lang=\"scss\">\n\t.ctx-menu {\n\t\tposition: fixed;\n\t\tz-index: 2;\n\t\tfont-size: var(--fs-small);\n\t\tbackground-color: var(--bg-secondary);\n\t\tborder: solid 1px var(--border-primary);\n\t\tborder-radius: 4px;\n\t\tpadding: 10px;\n\t\twidth: calc(var(--game-width) / 2);\n\n\t\t& > :global(*) {\n\t\t\tborder-bottom: 1px solid var(--border-primary);\n\t\t\tpadding-bottom: 5px;\n\t\t}\n\t\t& > :global(*:last-child) {\n\t\t\tborder-bottom: none;\n\t\t\tpadding-bottom: unset;\n\t\t\tpadding-top: 5px;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { getRowData, words } from \"../../utils\";\n\n\timport Row from \"./Row.svelte\";\n\timport ContextMenu from \"../widgets/ContextMenu.svelte\";\n\timport { createEventDispatcher } from \"svelte\";\n\timport { scale } from \"svelte/transition\";\n\n\texport let value: string[];\n\texport let board: GameBoard;\n\texport let guesses: number;\n\texport let icon: string;\n\texport let tutorial: boolean;\n\texport function shake(row: number) {\n\t\trows[row].shake();\n\t}\n\texport function bounce(row: number) {\n\t\trows[row].bounce();\n\t}\n\texport function hideCtx(e?: MouseEvent) {\n\t\tif (!e || !e.defaultPrevented) showCtx = false;\n\t}\n\tconst dispatch = createEventDispatcher();\n\n\tlet rows: Row[] = [];\n\tlet showCtx = false;\n\tlet pAns = 0;\n\tlet pSols = 0;\n\tlet x = 0;\n\tlet y = 0;\n\tlet word = \"\";\n\n\tfunction context(cx: number, cy: number, num: number, val: string) {\n\t\tif (guesses >= num) {\n\t\t\tx = cx;\n\t\t\ty = cy;\n\t\t\tshowCtx = true;\n\t\t\tword = guesses > num ? val : \"\";\n\n\t\t\tconst match = getRowData(num, board);\n\t\t\tpAns = words.words.filter((w) => match(w)).length;\n\t\t\tpSols = pAns + words.valid.filter((w) => match(w)).length;\n\t\t}\n\t}\n</script>\n\n{#if showCtx}\n\t<ContextMenu {pAns} {pSols} {x} {y} {word} />\n{/if}\n\n<div class=\"board\">\n\t{#each value as _, i}\n\t\t<Row\n\t\t\tnum={i}\n\t\t\t{guesses}\n\t\t\tbind:this={rows[i]}\n\t\t\tbind:value={value[i]}\n\t\t\tstate={board.state[i]}\n\t\t\ton:ctx={(e) => context(e.detail.x, e.detail.y, i, value[i])}\n\t\t/>\n\t{/each}\n\t{#if icon}\n\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 200 200\" fill=\"none\">\n\t\t\t<path d={icon} stroke-width=\"14\" />\n\t\t</svg>\n\t{/if}\n\t{#if tutorial}\n\t\t<div transition:scale class=\"tutorial\" on:click={() => dispatch(\"closeTutPopUp\")}>\n\t\t\tdouble tap (right click) a row to see a word's definition, or how many words could be\n\t\t\tplayed there\n\t\t\t<span class=\"ok\">OK</span>\n\t\t</div>\n\t{/if}\n</div>\n\n<style>\n\t.board {\n\t\tdisplay: grid;\n\t\tgrid-template-rows: repeat(var(--rows), 1fr);\n\t\tgap: 5.5px;\n\t\tmax-height: 420px;\n\t\tflex-grow: 1;\n\t\taspect-ratio: var(--cols) / var(--rows);\n\t\tpadding: 10px;\n\t\tposition: relative;\n\t}\n\tsvg {\n\t\tposition: absolute;\n\t\tz-index: -1;\n\t\ttop: 50%;\n\t\tleft: 50%;\n\t\ttransform: translate(-50%, -50%);\n\t\twidth: min(130%, 100vw);\n\t}\n\tpath {\n\t\tstroke: var(--bg-secondary);\n\t}\n\t.tutorial {\n\t\ttop: calc(100 / var(--rows) * 1%);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\n\texport let letter: string;\n\texport let state: LetterState = \"🔳\";\n\n\tconst dispatch = createEventDispatcher();\n</script>\n\n<div class={state} class:big={letter.length !== 1} on:click={() => dispatch(\"keystroke\", letter)}>\n\t{letter}<slot />\n</div>\n\n<style>\n\tdiv {\n\t\tfont-size: calc(var(--fs-tiny) + 1px);\n\t\tfont-weight: bold;\n\t\ttext-transform: uppercase;\n\t\tborder-radius: 4px;\n\t\theight: 58px;\n\t\tbackground: var(--key-bg);\n\t\tcursor: pointer;\n\t\tdisplay: grid;\n\t\tplace-items: center;\n\t\tflex: 1;\n\t\ttransition: background-color 0.3s ease-in-out;\n\t}\n\t:global(.guesses) div {\n\t\ttransition-delay: 1s;\n\t}\n\t:global(.guesses .preventChange) div {\n\t\ttransition-duration: 0.15s;\n\t\ttransition-delay: 0s;\n\t\tbackground: var(--key-bg) !important;\n\t}\n\t.big {\n\t\tfont-size: var(--fs-tiny);\n\t\tflex-grow: 1.5;\n\t}\n\t.⬛ {\n\t\tbackground: var(--color-absent);\n\t}\n\t.🟨 {\n\t\tbackground: var(--color-present);\n\t}\n\t.🟩 {\n\t\tbackground: var(--color-correct);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher, onDestroy, onMount } from \"svelte/internal\";\n\timport { letterStates, mode } from \"../../stores\";\n\timport { COLS, keys } from \"../../utils\";\n\timport Key from \"./Key.svelte\";\n\n\texport let value = \"\";\n\texport let disabled = false;\n\tlet preventChange = true;\n\n\tconst dispatch = createEventDispatcher();\n\n\tfunction appendValue(char: string) {\n\t\tif (!disabled && value.length < COLS) {\n\t\t\tdispatch(\"keystroke\", char);\n\t\t\tvalue += char;\n\t\t}\n\t}\n\tfunction backspaceValue() {\n\t\tif (!disabled) {\n\t\t\tvalue = value.slice(0, value.length - 1);\n\t\t}\n\t}\n\tfunction handleKeystroke(e: KeyboardEvent) {\n\t\tif (!disabled && !e.ctrlKey && !e.altKey) {\n\t\t\tif (e.key && /^[a-z]$/.test(e.key.toLowerCase())) {\n\t\t\t\treturn appendValue(e.key.toLowerCase());\n\t\t\t}\n\t\t\tif (e.key === \"Backspace\") return backspaceValue();\n\n\t\t\tif (e.key === \"Enter\") return dispatch(\"submitWord\");\n\t\t}\n\t\tif (e.key === \"Escape\") dispatch(\"esc\");\n\t}\n\n\t// Ensure keys change on load instead of loading their state color & change the color of all the keys to neutral, then to their correct color on mode change\n\tconst unsub = mode.subscribe(() => {\n\t\tpreventChange = true;\n\t\tsetTimeout(() => (preventChange = false), 200);\n\t});\n\tonDestroy(unsub);\n</script>\n\n<svelte:body on:keydown={handleKeystroke} />\n\n<div class:preventChange class=\"keyboard\">\n\t<div class=\"row\">\n\t\t{#each keys[0] as letter}\n\t\t\t<Key\n\t\t\t\t{letter}\n\t\t\t\ton:keystroke={(e) => appendValue(e.detail)}\n\t\t\t\tstate={$letterStates[letter]}\n\t\t\t/>\n\t\t{/each}\n\t</div>\n\t<div class=\"row\">\n\t\t{#each keys[1] as letter}\n\t\t\t<Key\n\t\t\t\t{letter}\n\t\t\t\ton:keystroke={(e) => appendValue(e.detail)}\n\t\t\t\tstate={$letterStates[letter]}\n\t\t\t/>\n\t\t{/each}\n\t</div>\n\t<div class=\"row\">\n\t\t<Key letter=\"ENTER\" on:keystroke={() => !disabled && dispatch(\"submitWord\")} />\n\t\t{#each keys[2] as letter}\n\t\t\t<Key\n\t\t\t\t{letter}\n\t\t\t\ton:keystroke={(e) => appendValue(e.detail)}\n\t\t\t\tstate={$letterStates[letter]}\n\t\t\t/>\n\t\t{/each}\n\t\t<Key letter=\"\" on:keystroke={backspaceValue}>\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t<path\n\t\t\t\t\td=\"M22 3H7c-.69 0-1.23.35-1.59.88L0 12l5.41 8.11c.36.53.9.89 1.59.89h15c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zm0 16H7.07L2.4 12l4.66-7H22v14zm-11.59-2L14 13.41 17.59 17 19 15.59 15.41 12 19 8.41 17.59 7 14 10.59 10.41 7 9 8.41 12.59 12 9 15.59z\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</Key>\n\t</div>\n</div>\n\n<style>\n\t.keyboard {\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\tmargin-bottom: 2px;\n\t}\n\t.row {\n\t\ttouch-action: manipulation;\n\t\twidth: 100%;\n\t\tdisplay: flex;\n\t\tmargin: 0 auto 8px;\n\t\tpadding: 0 8px;\n\t\tgap: 6px;\n\t}\n\t.row:nth-of-type(2) {\n\t\tpadding: 0 30px;\n\t}\n\tsvg {\n\t\tfill: var(--fg-primary);\n\t\twidth: 24px;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher } from \"svelte\";\n\n\timport GameIcon from \"./GameIcon.svelte\";\n\n\texport let visible = false;\n\texport let fullscreen = false;\n\n\tconst dispach = createEventDispatcher();\n\n\tfunction close() {\n\t\tvisible = false;\n\t\tdispach(\"close\");\n\t}\n</script>\n\n{#if fullscreen}\n\t<div class:visible class=\"page\">\n\t\t<div class=\"exit\" on:click={close}>\n\t\t\t<GameIcon>\n\t\t\t\t<path\n\t\t\t\t\td=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n\t\t\t\t/>\n\t\t\t</GameIcon>\n\t\t</div>\n\t\t<div>\n\t\t\t<slot />\n\t\t</div>\n\t\t<slot name=\"footer\" />\n\t</div>\n{:else}\n\t<div class:visible class=\"overlay\" on:click|self={close}>\n\t\t<div class=\"modal\">\n\t\t\t<div class=\"exit\" on:click={close}>\n\t\t\t\t<GameIcon>\n\t\t\t\t\t<path\n\t\t\t\t\t\td=\"M19 6.41L17.59 5 12 10.59 6.41 5 5 6.41 10.59 12 5 17.59 6.41 19 12 13.41 17.59 19 19 17.59 13.41 12z\"\n\t\t\t\t\t/>\n\t\t\t\t</GameIcon>\n\t\t\t</div>\n\t\t\t<slot />\n\t\t</div>\n\t</div>\n{/if}\n\n<style lang=\"scss\">\n\t@mixin modal-outer() {\n\t\ttransition: all 0.2s ease;\n\t\tfont-size: var(--fs-small);\n\t\tvisibility: hidden;\n\t\tposition: absolute;\n\t\tz-index: 1;\n\t\topacity: 0;\n\t\tinset: 0;\n\t}\n\t.overlay.visible,\n\t.visible.page,\n\t.visible .modal {\n\t\ttop: 0;\n\t\topacity: 1;\n\t\tvisibility: visible;\n\t}\n\t.exit {\n\t\tposition: absolute;\n\t\ttop: var(--modal-padding);\n\t\tright: var(--modal-padding);\n\t}\n\t/* regular modal */\n\t.overlay {\n\t\t@include modal-outer();\n\t\tbackground: #0008;\n\t}\n\t.modal {\n\t\t--modal-padding: 16px;\n\t\tbackground: var(--bg-primary);\n\t\tmax-width: var(--game-width);\n\t\theight: min-content;\n\t\tmax-height: 90%;\n\t\toverflow-y: auto;\n\t\tborder-radius: 8px;\n\t\tborder: 1px solid var(--bg-secondary);\n\t\tpadding: var(--modal-padding);\n\t\tpadding-top: calc(2 * var(--modal-padding));\n\t\tposition: absolute;\n\t\twidth: 90%;\n\t\tinset: 20vh 0 0;\n\t\tmargin: auto;\n\t\ttransition: all 0.3s ease;\n\t\t> :global(*:not(h3)) {\n\t\t\tmargin-bottom: 15px;\n\t\t}\n\t}\n\t/* fullscreen modal */\n\t.page {\n\t\t@include modal-outer();\n\t\tbackground: var(--bg-primary);\n\t\ttop: 10vh;\n\t\theight: 100%;\n\t\tmax-width: var(--game-width);\n\t\tmargin: auto;\n\t\tpadding: 10px 16px;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-between;\n\t\toverflow-y: auto;\n\t\t.exit {\n\t\t\ttop: 10px;\n\t\t\tright: 10px;\n\t\t}\n\t}\n\t:global([slot=\"footer\"]) {\n\t\tcolor: var(--fg-secondary);\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: flex-end;\n\t\ttext-align: end;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let value: boolean;\n\texport let disabled = false;\n</script>\n\n<div on:click={(e) => !disabled && (value = !value)} class:checked={value} {disabled} />\n\n<style lang=\"scss\">\n\tdiv[disabled=\"true\"] {\n\t\topacity: 0.5;\n\t\tcursor: unset;\n\t}\n\tdiv {\n\t\twidth: 32px;\n\t\theight: 20px;\n\t\tborder-radius: 10px;\n\t\tbackground: var(--icon-color);\n\t\tposition: relative;\n\t\tcursor: pointer;\n\t\ttransition: background-color 0.3s ease;\n\t\t&::before {\n\t\t\tcontent: \"\";\n\t\t\tposition: absolute;\n\t\t\twidth: 16px;\n\t\t\taspect-ratio: 1;\n\t\t\tbackground: white;\n\t\t\tborder-radius: 50%;\n\t\t\tmargin: 2px;\n\t\t\tleft: 0;\n\t\t\ttransition: left 0.3s ease;\n\t\t}\n\t}\n\t.checked {\n\t\tbackground: var(--color-correct);\n\t\t&::before {\n\t\t\tleft: 12px;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let value: number;\n\texport let options: (string | number)[];\n\texport let disabled = false;\n</script>\n\n<select bind:value {disabled}>\n\t{#each options as val, i}\n\t\t<option value={i}>{val}</option>\n\t{/each}\n</select>\n\n<style>\n\tselect {\n\t\tborder: solid 1px var(--border-secondary);\n\t\tpadding: 8px;\n\t\tmin-width: 85px;\n\t\tborder-radius: 4px;\n\t\tcursor: pointer;\n\t\tbackground: var(--bg-secondary);\n\t\tcolor: var(--fg-primary);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport Switch from \"./Switch.svelte\";\n\timport DropDown from \"./DropDown.svelte\";\n\texport let value: any;\n\texport let type: SettingType;\n\texport let options: (string | number)[] = [];\n\texport let disabled = false;\n\tconst types = {\n\t\tswitch: Switch,\n\t\tdropdown: DropDown,\n\t};\n</script>\n\n<div class=\"setting\">\n\t<div>\n\t\t<div class=\"title\"><slot name=\"title\" /></div>\n\t\t<div class=\"desc\"><slot name=\"desc\" /></div>\n\t</div>\n\t<svelte:component this={types[type]} bind:value {options} {disabled} />\n</div>\n\n<style>\n\t.setting {\n\t\t/* border-bottom: 1px solid var(--border-primary); */\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t}\n\t.title {\n\t\tfont-size: var(--fs-medium);\n\t\tfont-weight: 500;\n\t}\n\t.desc {\n\t\tfont-size: var(--fs-tiny);\n\t\tcolor: var(--fg-secondary);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { getContext, onMount } from \"svelte\";\n\n\timport { mode, settings } from \"../../stores\";\n\timport { modeData } from \"../../utils\";\n\timport type { Toaster } from \"../widgets\";\n\timport Setting from \"./Setting.svelte\";\n\n\texport let state: GameState;\n\n\tconst toaster = getContext<Toaster>(\"toaster\");\n\n\tlet root: HTMLElement;\n\tonMount(() => {\n\t\troot = document.documentElement;\n\t});\n\t$: {\n\t\tif (root) {\n\t\t\t$settings.dark ? root.classList.remove(\"light\") : root.classList.add(\"light\");\n\t\t\t$settings.colorblind\n\t\t\t\t? root.classList.add(\"colorblind\")\n\t\t\t\t: root.classList.remove(\"colorblind\");\n\t\t\tlocalStorage.setItem(\"settings\", JSON.stringify($settings));\n\t\t}\n\t}\n</script>\n\n<!-- not currently supported, see https://github.com/sveltejs/svelte/issues/3105 -->\n<!-- <svelte:body class:light={!$settings.dark} class:colorblind={$settings.colorblind} /> -->\n<div class=\"outer\">\n\t<div class=\"settings-top\">\n\t\t<h3>settings</h3>\n\t\t<div\n\t\t\ton:click={() => {\n\t\t\t\tif (!state.validHard) {\n\t\t\t\t\ttoaster.pop(\"Game has already violated hard mode\");\n\t\t\t\t}\n\t\t\t}}\n\t\t>\n\t\t\t<Setting type=\"switch\" bind:value={$settings.hard[$mode]} disabled={!state.validHard}>\n\t\t\t\t<span slot=\"title\">Hard Mode</span>\n\t\t\t\t<span slot=\"desc\">Any revealed hints must be used in subsequent guesses</span>\n\t\t\t</Setting>\n\t\t</div>\n\t\t<Setting type=\"switch\" bind:value={$settings.dark}>\n\t\t\t<span slot=\"title\">Dark Theme</span>\n\t\t</Setting>\n\t\t<Setting type=\"switch\" bind:value={$settings.colorblind}>\n\t\t\t<span slot=\"title\">Color Blind Mode</span>\n\t\t\t<span slot=\"desc\">High contrast colors</span>\n\t\t</Setting>\n\t\t<Setting type=\"dropdown\" bind:value={$mode} options={modeData.modes.map((e) => e.name)}>\n\t\t\t<span slot=\"title\">Advisory</span>\n\t\t\t<span slot=\"desc\">Please Ensure the correct Advisory is selected.</span>\n\t\t</Setting>\n\t</div>\n</div>\n\n<style>\n\t.outer {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-between;\n\t}\n\t.links {\n\t\tfont-size: var(--fs-medium);\n\t\tborder-bottom: 1px solid var(--border-primary);\n\t\tcolor: var(--fg-secondary);\n\t\tdisplay: flex;\n\t\tjustify-content: space-between;\n\t}\n\t:global(.settings-top > div) {\n\t\tpadding: 16px 0;\n\t\tborder-bottom: 1px solid var(--border-primary);\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let visible = true;\n</script>\n\n<div class=\"sep\" class:visible>\n\t<div>\n\t\t<slot name=\"1\" />\n\t</div>\n\t<div>\n\t\t<slot name=\"2\" />\n\t</div>\n</div>\n\n<style>\n\t.sep.visible {\n\t\tdisplay: flex;\n\t}\n\t.sep {\n\t\tdisplay: none;\n\t}\n\t.sep :first-child {\n\t\tborder-right: 1px solid var(--fg-primary);\n\t}\n\t.sep div {\n\t\tflex: 1;\n\t\tdisplay: grid;\n\t\tplace-items: center;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport type Toaster from \"./Toaster.svelte\";\n\n\timport { mode } from \"../../stores\";\n\timport { COLS, modeData } from \"../../utils\";\n\timport { getContext } from \"svelte\";\n\n\texport let state: GameState;\n\tconst toaster = getContext<Toaster>(\"toaster\");\n\n\tfunction failed() {\n\t\tif (state.guesses === 0) {\n\t\t\treturn false;\n\t\t}\n\t\tif (state.board.state[state.guesses - 1].join(\"\") === \"🟩\".repeat(COLS)) {\n\t\t\treturn true;\n\t\t}\n\t\treturn false;\n\t}\n\n\t$: stats = `${modeData.modes[$mode].name} NotWordle #${state.wordNumber} ${\n\t\t!state.active && failed() ? state.guesses : \"X\"\n\t}/${state.board.words.length}\\n\\n    ${state.board.state\n\t\t.slice(0, state.guesses)\n\t\t.map((r) => r.join(\"\"))\n\t\t.join(\"\\n    \")}\\nglitchedcloud.github.io/NotWordle`;\n</script>\n\n<div\n\ton:click={() => {\n\t\tnavigator.clipboard.writeText(stats);\n\t\ttoaster.pop(\"Copied\");\n\t}}\n>\n\tshare\n\t<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n\t\t<path\n\t\t\tfill=\"white\"\n\t\t\td=\"M18 16.08c-.76 0-1.44.3-1.96.77L8.91 12.7c.05-.23.09-.46.09-.7s-.04-.47-.09-.7l7.05-4.11c.54.5 1.25.81 2.04.81 1.66 0 3-1.34 3-3s-1.34-3-3-3-3 1.34-3 3c0 .24.04.47.09.7L8.04 9.81C7.5 9.31 6.79 9 6 9c-1.66 0-3 1.34-3 3s1.34 3 3 3c.79 0 1.5-.31 2.04-.81l7.12 4.16c-.05.21-.08.43-.08.65 0 1.61 1.31 2.92 2.92 2.92s2.92-1.31 2.92-2.92c0-1.61-1.31-2.92-2.92-2.92zM18 4c.55 0 1 .45 1 1s-.45 1-1 1-1-.45-1-1 .45-1 1-1zM6 13c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1zm12 7.02c-.55 0-1-.45-1-1s.45-1 1-1 1 .45 1 1-.45 1-1 1z\"\n\t\t/>\n\t</svg>\n</div>\n\n<style lang=\"scss\">\n\tdiv {\n\t\tcolor: #fff;\n\t\tfont-size: var(--fs-medium);\n\t\ttext-transform: uppercase;\n\t\tfont-weight: bold;\n\t\tbackground: var(--color-correct);\n\t\tborder-radius: 4px;\n\t\theight: 52px;\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tgap: 8px;\n\t\twidth: 80%;\n\t\tcursor: pointer;\n\t\t&:hover {\n\t\t\topacity: 0.9;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { COLS, ROWS } from \"../../utils\";\n\n\timport { Tile } from \"../board\";\n\texport let visible: boolean;\n</script>\n\n<h3>how to play</h3>\n<div>Guess the <strong>WORDLE</strong> in {ROWS} tries.</div>\n<div>Each guess must be a valid {COLS} letter word. Hit the enter button to submit.</div>\n<div>\n\tAfter each guess, the color of the tiles will change to show how close your guess was to the\n\tword.\n</div>\n<div class:complete={visible} class=\"examples\">\n\t<div><strong>Examples</strong></div>\n\t<div class=\"row\">\n\t\t<Tile value=\"w\" state=\"🟩\" />\n\t\t<Tile value=\"i\" state=\"🔳\" />\n\t\t<Tile value=\"g\" state=\"🔳\" />\n\t\t<Tile value=\"g\" state=\"🔳\" />\n\t\t<Tile value=\"l\" state=\"🔳\" />\n\t\t<Tile value=\"e\" state=\"🔳\" />\n\t</div>\n\t<div>The letter <strong>W</strong> is in the word and in the correct spot.</div>\n\t<div class=\"row\">\n\t\t<Tile value=\"p\" state=\"🔳\" />\n\t\t<Tile value=\"i\" state=\"🟨\" />\n\t\t<Tile value=\"p\" state=\"🔳\" />\n\t\t<Tile value=\"i\" state=\"🔳\" />\n\t\t<Tile value=\"n\" state=\"🔳\" />\n\t\t<Tile value=\"g\" state=\"🔳\" />\n\t</div>\n\t<div>The letter <strong>I</strong> is in the word but in the wrong spot.</div>\n\t<div class=\"row\">\n\t\t<Tile value=\"v\" state=\"🔳\" />\n\t\t<Tile value=\"i\" state=\"🔳\" />\n\t\t<Tile value=\"s\" state=\"🔳\" />\n\t\t<Tile value=\"u\" state=\"⬛\" />\n\t\t<Tile value=\"a\" state=\"🔳\" />\n\t\t<Tile value=\"l\" state=\"🔳\" />\n\t</div>\n\t<div>The letter <strong>U</strong> is not in the word in any spot.</div>\n</div>\n<div>\n\tThis is a recreation (by Armon Castor) of the original <a\n\t\thref=\"https://www.powerlanguage.co.uk/wordle/\"\n\t\ttarget=\"_blank\">Wordle</a\n\t>\n\tby Josh Wardle with additional modes and features for Rob's Advisory Challenge.\n\t<br />\n\tOpen the settings menu to see some of the additional features.\n</div>\n\n<style lang=\"scss\">\n\tdiv {\n\t\tmargin: 14px 0;\n\t}\n\t.examples {\n\t\tborder-top: 1px solid var(--border-primary);\n\t\tborder-bottom: 1px solid var(--border-primary);\n\t\t:global(.row > *) {\n\t\t\theight: 100%;\n\t\t\taspect-ratio: 1;\n\t\t}\n\t\t&:not(.complete) :global(.row .back) {\n\t\t\ttransition-delay: 0.3s;\n\t\t}\n\t}\n\t.row {\n\t\theight: 40px;\n\t\tdisplay: flex;\n\t\tgap: 4px;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { createEventDispatcher, onDestroy } from \"svelte\";\n\n\timport type { GameMode } from \"../../enums\";\n\timport { mode } from \"../../stores\";\n\timport { modeData } from \"../../utils\";\n\n\tconst dispatch = createEventDispatcher();\n\n\tconst HOUR = 3600000;\n\tconst MINUTE = 60000;\n\tconst SECOND = 1000;\n\tlet ms = 1000;\n\n\tlet countDown: number;\n\n\texport function reset(m: GameMode) {\n\t\tclearInterval(countDown);\n\t\tms =\n\t\t\tmodeData.modes[m].unit -\n\t\t\t(new Date().valueOf() - modeData.modes[m].seed) +\n\t\t\tnew Date().getTimezoneOffset() * 60000;\n\t\tif (ms < 0) dispatch(\"timeup\");\n\t\tcountDown = setInterval(() => {\n\t\t\tms =\n\t\t\t\tmodeData.modes[m].unit -\n\t\t\t\t(new Date().valueOf() - modeData.modes[m].seed) +\n\t\t\t\tnew Date().getTimezoneOffset() * 60000;\n\t\t\tif (ms < 0) {\n\t\t\t\tclearInterval(countDown);\n\t\t\t\tdispatch(\"timeup\");\n\t\t\t}\n\t\t}, SECOND);\n\t}\n\t$: reset($mode);\n</script>\n\n<h3>Next wordle</h3>\n<div class=\"container\">\n\t{#if ms > 0}\n\t\t<div class=\"timer\">\n\t\t\t{`${Math.floor(ms / HOUR)}`.padStart(2, \"0\")}:{`${Math.floor(\n\t\t\t\t(ms % HOUR) / MINUTE\n\t\t\t)}`.padStart(2, \"0\")}:{`${Math.floor((ms % MINUTE) / SECOND)}`.padStart(2, \"0\")}\n\t\t</div>\n\t{:else}\n\t\t<div class=\"button\" on:click={() => dispatch(\"reload\")}>\n\t\t\t<svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\">\n\t\t\t\t<path\n\t\t\t\t\td=\"M4.609 12c0-4.082 3.309-7.391 7.391-7.391a7.39 7.39 0 0 1 6.523 3.912l-1.653 1.567H22v-5.13l-1.572 1.659C18.652 3.841 15.542 2 12 2 6.477 2 2 6.477 2 12s4.477 10 10 10c4.589 0 8.453-3.09 9.631-7.301l-2.512-.703c-.871 3.113-3.73 5.395-7.119 5.395-4.082 0-7.391-3.309-7.391-7.391z\"\n\t\t\t\t/>\n\t\t\t</svg>\n\t\t</div>\n\t{/if}\n</div>\n\n<style>\n\th3 {\n\t\tmargin-bottom: 10px;\n\t}\n\t.container {\n\t\theight: 45px;\n\t\tmin-width: 70%;\n\t}\n\t.timer {\n\t\tfont-size: clamp(25px, 8vw, var(--fs-large));\n\t\ttext-align: center;\n\t}\n\t.button {\n\t\theight: 80%;\n\t\taspect-ratio: 1;\n\t\tpadding: 4px;\n\t\tbackground: var(--color-correct);\n\t\tborder-radius: 4px;\n\t\tcursor: pointer;\n\t\tmargin: auto;\n\t}\n\tsvg {\n\t\tfill: white;\n\t\theight: 100%;\n\t}\n\t.button:hover {\n\t\topacity: 0.9;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { fade } from \"svelte/transition\";\n\n\texport function pop(text: string, duration = 1) {\n\t\ttoast = [text, ...toast];\n\t\tsetTimeout(() => (toast = toast.slice(0, toast.length - 1)), duration * 1000);\n\t}\n\tlet toast: string[] = [];\n</script>\n\n<div class=\"toast\">\n\t{#each toast as slice}\n\t\t<div class=\"slice\" out:fade={{ duration: 200 }}>{slice}</div>\n\t{/each}\n</div>\n\n<style>\n\t.toast {\n\t\ttop: 10%;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%);\n\t\tposition: absolute;\n\t\tz-index: 10;\n\t\tfont-weight: bold;\n\t}\n\t.slice {\n\t\tcolor: var(--bg-primary);\n\t\tbackground: var(--fg-primary);\n\t\tpadding: 16px;\n\t\tmargin: 16px auto;\n\t\tborder-radius: 4px;\n\t\twidth: fit-content;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let index = 0;\n\tconst tips = [\n\t\t\"Hard mode is game mode specific. Turning it on in one game mode won't change it on the others.\",\n\t\t\"Double tap or right click a word on the board to learn its definition.\",\n\t\t\"Hard mode can be enabled during a game if you haven't violated the hard mode rules yet.\",\n\t\t\"Double tap or right click the next row to see how many possible words can be played there, if you use all the previous information.\",\n\t\t\"Because words are chosen from the list randomly it is possible to get the same word again.\",\n\t\t\"When you see the refresh button in the top left corner it means a new word is ready.\",\n\t\t\"Everyone has the same wordle at the same time. Your word #73 is the same as everyone elses #73.\",\n\t\t\"There are more valid guesses than possible words, ie. not all 6 letter words can be selected as an answer by the game.\",\n\t\t\"Historical games don't count towards your stats. Historical games are when you follow a link to a specific game number.\",\n\t];\n\texport const length = tips.length;\n</script>\n\n<div class=\"outer\">\n\t<div class=\"number\">Tip {index + 1}/{tips.length}</div>\n\t<div class=\"tip\">{tips[index]}</div>\n\t<svg\n\t\tclass=\"left\"\n\t\ton:click={() => (index = (index - 1 + tips.length) % tips.length)}\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 100 100\"\n\t>\n\t\t<path d=\"M75,0L25,50L75,100z\" />\n\t</svg>\n\t<svg\n\t\ton:click={() => (index = (index + 1) % tips.length)}\n\t\tclass=\"right\"\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\tviewBox=\"0 0 100 100\"\n\t>\n\t\t<path d=\"M25,0L75,50L25,100z\" />\n\t</svg>\n</div>\n\n<style lang=\"scss\">\n\t.outer {\n\t\tmargin: 15px auto;\n\t\tpadding: 10px 20px;\n\t\tmax-width: calc(0.6 * var(--game-width));\n\t\tborder: solid 1px var(--border-secondary);\n\t\tbackground: var(--bg-secondary);\n\t\tborder-radius: 4px;\n\t\tposition: relative;\n\t}\n\t.number {\n\t\ttext-align: center;\n\t\tfont-weight: bold;\n\t\tfont-size: 1.2em;\n\t\tmargin-bottom: 10px;\n\t}\n\t.left,\n\t.right {\n\t\tcursor: pointer;\n\t\tposition: absolute;\n\t\tborder-radius: 4px;\n\t\tbackground: var(--fg-primary);\n\t\tfill: var(--bg-primary);\n\t\theight: 45px;\n\t\tpadding: 10px 0;\n\t\ttop: 50%;\n\t}\n\t.left {\n\t\tleft: 0;\n\t\ttransform: translate(-50%, -50%);\n\t}\n\t.right {\n\t\tright: 0;\n\t\ttransform: translate(50%, -50%);\n\t}\n\t.tip {\n\t\ttext-align: center;\n\t\tmin-height: 70px;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { getContext } from \"svelte\";\n\timport { GameMode } from \"../../enums\";\n\timport { mode } from \"../../stores\";\n\timport { modeData } from \"../../utils\";\n\timport GameIcon from \"../GameIcon.svelte\";\n\timport type Toaster from \"./Toaster.svelte\";\n\n\texport let wordNumber: number;\n\n\tconst toaster: Toaster = getContext(\"toaster\");\n\n\tfunction share() {\n\t\ttoaster.pop(\"Copied\");\n\t\tnavigator.clipboard.writeText(`${window.location.href}/${wordNumber}`);\n\t}\n</script>\n\n<div on:click={share}>\n\t<GameIcon>\n\t\t<path\n\t\t\td=\"M4.167 4.167c-1.381 1.381-1.381 3.619 0 5L6.5 11.5a1.18 1.18 0 0 1 0 1.667 1.18 1.18 0 0 1-1.667 0L2.5 10.833C.199 8.532.199 4.801 2.5 2.5s6.032-2.301 8.333 0l3.333 3.333c2.301 2.301 2.301 6.032 0 8.333a1.18 1.18 0 0 1-1.667 0 1.18 1.18 0 0 1 0-1.667c1.381-1.381 1.381-3.619 0-5L9.167 4.167c-1.381-1.381-3.619-1.381-5 0zm5.667 14c-2.301-2.301-2.301-6.032 0-8.333a1.18 1.18 0 0 1 1.667 0 1.18 1.18 0 0 1 0 1.667c-1.381 1.381-1.381 3.619 0 5l3.333 3.333c1.381 1.381 3.619 1.381 5 0s1.381-3.619 0-5L17.5 12.5a1.18 1.18 0 0 1 0-1.667 1.18 1.18 0 0 1 1.667 0l2.333 2.333c2.301 2.301 2.301 6.032 0 8.333s-6.032 2.301-8.333 0l-3.333-3.333z\"\n\t\t/>\n\t</GameIcon>\n\tCopy link to this game ({modeData.modes[$mode].name} #{wordNumber})\n</div>\n\n<style>\n\tdiv {\n\t\tcolor: var(--fg-secondary);\n\t\tfont-size: var(--fs-regular);\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tgap: 10px;\n\t\tcursor: pointer;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let stat: number | string;\n\texport let name: string;\n</script>\n\n<section>\n\t<div class=\"stat\">{stat}</div>\n\t<div class=\"name\">{name}</div>\n</section>\n\n<style>\n\tsection {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\talign-items: center;\n\t\twidth: 60px;\n\t}\n\t.stat {\n\t\tfont-size: var(--fs-large);\n\t}\n\t.name {\n\t\ttext-align: center;\n\t}\n</style>\n","<script lang=\"ts\">\n\timport { mode } from \"../../../stores\";\n\timport { modeData } from \"../../../utils\";\n\n\timport Stat from \"./Stat.svelte\";\n\texport let data: Stats;\n\n\tlet stats: [string, string | number][];\n\t$: {\n\t\tstats = [\n\t\t\t[\"Played\", data.played],\n\t\t\t[\"Win %\", Math.round(((data.played - data.guesses.fail) / data.played) * 100) || 0],\n\t\t\t[\n\t\t\t\t\"Average Guesses\",\n\t\t\t\t(\n\t\t\t\t\tObject.entries(data.guesses).reduce((a, b) => {\n\t\t\t\t\t\tif (!isNaN(parseInt(b[0]))) {\n\t\t\t\t\t\t\treturn a + parseInt(b[0]) * b[1];\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn a;\n\t\t\t\t\t}, 0) / data.played || 0\n\t\t\t\t).toFixed(1),\n\t\t\t],\n\t\t];\n\t\tif (data.guesses.fail > 0) {\n\t\t\tstats.push([\"Lost\", data.guesses.fail]);\n\t\t}\n\t\tif (\"streak\" in data) {\n\t\t\tstats.push([\"Current Streak\", data.streak]);\n\t\t\tstats.push([\"Max Streak\", data.maxStreak]);\n\t\t}\n\t}\n</script>\n\n<h3>Statistics ({modeData.modes[$mode].name})</h3>\n<div>\n\t{#each stats as stat}\n\t\t<Stat name={stat[0]} stat={stat[1]} />\n\t{/each}\n</div>\n\n<style>\n\tdiv {\n\t\tdisplay: flex;\n\t\tjustify-content: center;\n\t\tgap: 8px;\n\t}\n</style>\n","<script lang=\"ts\">\n\texport let guesses = 0;\n\texport let distribution: Guesses;\n\texport let active: boolean;\n\n\t$: max = Math.max(...Object.values(distribution));\n</script>\n\n<h3>guess distribution</h3>\n<div class=\"container\">\n\t{#each Object.entries(distribution) as guess, i (guess[0])}\n\t\t{#if !isNaN(parseInt(guess[0]))}\n\t\t\t<div class=\"graph\">\n\t\t\t\t<span class=\"guess\">{guess[0]}</span>\n\t\t\t\t<div\n\t\t\t\t\tclass=\"bar\"\n\t\t\t\t\tclass:this={parseInt(guess[0]) === guesses && !active}\n\t\t\t\t\tstyle=\"width: {(guess[1] / max) * 100}%;\"\n\t\t\t\t>\n\t\t\t\t\t{guess[1]}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t{/if}\n\t{/each}\n</div>\n\n<style>\n\t.guess {\n\t\tdisplay: grid;\n\t\tplace-items: center;\n\t}\n\t.container {\n\t\twidth: 80%;\n\t\tmargin-left: auto;\n\t\tmargin-right: auto;\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tgap: 4px;\n\t}\n\t.graph {\n\t\theight: 20px;\n\t\tdisplay: flex;\n\t\tgap: 4px;\n\t}\n\t.bar {\n\t\tmin-width: 7%;\n\t\ttransition: width 0.3s ease-out;\n\t\tbackground: var(--color-absent);\n\t\tcolor: white;\n\t\tfont-weight: bold;\n\t\tdisplay: flex;\n\t\tjustify-content: end;\n\t\talign-items: center;\n\t\tpadding-right: 8px;\n\t}\n\t.bar.this {\n\t\tbackground: var(--color-correct);\n\t}\n</style>\n","<script lang=\"ts\">\n\timport Header from \"./Header.svelte\";\n\timport { Board } from \"./board\";\n\timport Keyboard from \"./keyboard\";\n\timport Modal from \"./Modal.svelte\";\n\timport { getContext, onMount, setContext } from \"svelte\";\n\timport Settings from \"./settings\";\n\timport {\n\t\tShare,\n\t\tSeperator,\n\t\tDefinition,\n\t\tTutorial,\n\t\tStatistics,\n\t\tDistribution,\n\t\tTimer,\n\t\tToaster,\n\t\tShareGame,\n\t\tTips,\n\t} from \"./widgets\";\n\timport {\n\t\tcontractNum,\n\t\tDELAY_INCREMENT,\n\t\tPRAISE,\n\t\tgetState,\n\t\tmodeData,\n\t\tcheckHardMode,\n\t\tROWS,\n\t\tCOLS,\n\t\tnewSeed,\n\t\tcreateNewGame,\n\t\tseededRandomInt,\n\t\tcreateLetterStates,\n\t\twords,\n\t} from \"../utils\";\n\timport { letterStates, settings, mode } from \"../stores\";\n\n\texport let word: string;\n\texport let stats: Stats;\n\texport let game: GameState;\n\texport let toaster: Toaster;\n\n\tsetContext(\"toaster\", toaster);\n\tconst version = getContext<string>(\"version\");\n\n\t// implement transition delay on keys\n\tconst delay = DELAY_INCREMENT * ROWS + 800;\n\n\tlet showTutorial = $settings.tutorial === 3;\n\tlet showSettings = false;\n\tlet showStats = false;\n\tlet showRefresh = false;\n\n\tlet board: Board;\n\tlet timer: Timer;\n\tlet tips: Tips;\n\n\tlet tip = 0;\n\t$: if (showSettings && tips) tip = Math.floor(tips.length * Math.random());\n\n\tfunction submitWord() {\n\t\tif (game.board.words[game.guesses].length !== COLS) {\n\t\t\ttoaster.pop(\"Not enough letters\");\n\t\t\tboard.shake(game.guesses);\n\t\t} else if (words.contains(game.board.words[game.guesses])) {\n\t\t\tif (game.guesses > 0) {\n\t\t\t\tconst hm = checkHardMode(game.board, game.guesses);\n\t\t\t\tif ($settings.hard[$mode]) {\n\t\t\t\t\tif (hm.type === \"🟩\") {\n\t\t\t\t\t\ttoaster.pop(\n\t\t\t\t\t\t\t`${contractNum(hm.pos + 1)} letter must be ${hm.char.toUpperCase()}`\n\t\t\t\t\t\t);\n\t\t\t\t\t\tboard.shake(game.guesses);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t} else if (hm.type === \"🟨\") {\n\t\t\t\t\t\ttoaster.pop(`Guess must contain ${hm.char.toUpperCase()}`);\n\t\t\t\t\t\tboard.shake(game.guesses);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t} else if (hm.type !== \"⬛\") {\n\t\t\t\t\tgame.validHard = false;\n\t\t\t\t}\n\t\t\t}\n\t\t\tconst state = getState(word, game.board.words[game.guesses]);\n\t\t\tgame.board.state[game.guesses] = state;\n\t\t\tstate.forEach((e, i) => {\n\t\t\t\tconst ls = $letterStates[game.board.words[game.guesses][i]];\n\t\t\t\tif (ls === \"🔳\" || e === \"🟩\") {\n\t\t\t\t\t$letterStates[game.board.words[game.guesses][i]] = e;\n\t\t\t\t}\n\t\t\t});\n\t\t\t++game.guesses;\n\t\t\tif (game.board.words[game.guesses - 1] === word) win();\n\t\t\telse if (game.guesses === ROWS) lose();\n\t\t} else {\n\t\t\ttoaster.pop(\"Not in word list\");\n\t\t\tboard.shake(game.guesses);\n\t\t}\n\t}\n\n\tfunction win() {\n\t\tboard.bounce(game.guesses - 1);\n\t\tgame.active = false;\n\t\tsetTimeout(\n\t\t\t() => toaster.pop(PRAISE[game.guesses - 1]),\n\t\t\tDELAY_INCREMENT * COLS + DELAY_INCREMENT\n\t\t);\n\t\tsetTimeout(() => (showStats = true), delay * 1.4);\n\t\tif (!modeData.modes[$mode].historical) {\n\t\t\t++stats.guesses[game.guesses];\n\t\t\t++stats.played;\n\t\t\tif (\"streak\" in stats) {\n\t\t\t\tstats.streak =\n\t\t\t\t\tmodeData.modes[$mode].seed - stats.lastGame > modeData.modes[$mode].unit\n\t\t\t\t\t\t? 1\n\t\t\t\t\t\t: stats.streak + 1;\n\t\t\t\tif (stats.streak > stats.maxStreak) stats.maxStreak = stats.streak;\n\t\t\t}\n\t\t\tstats.lastGame = modeData.modes[$mode].seed;\n\t\t\tlocalStorage.setItem(`stats-${$mode}`, JSON.stringify(stats));\n\t\t}\n\t}\n\n\tfunction lose() {\n\t\tgame.active = false;\n\t\tsetTimeout(() => (showStats = true), delay);\n\t\tif (!modeData.modes[$mode].historical) {\n\t\t\t++stats.guesses.fail;\n\t\t\t++stats.played;\n\t\t\tif (\"streak\" in stats) stats.streak = 0;\n\t\t\tstats.lastGame = modeData.modes[$mode].seed;\n\t\t\tlocalStorage.setItem(`stats-${$mode}`, JSON.stringify(stats));\n\t\t}\n\t}\n\n\tfunction concede() {\n\t\tshowSettings = false;\n\t\tsetTimeout(() => (showStats = true), DELAY_INCREMENT);\n\t\tlose();\n\t}\n\n\tfunction reload() {\n\t\tmodeData.modes[$mode].historical = false;\n\t\tmodeData.modes[$mode].seed = newSeed($mode);\n\t\tgame = createNewGame($mode);\n\t\tword = words.words[seededRandomInt(0, words.words.length, modeData.modes[$mode].seed)];\n\t\t$letterStates = createLetterStates();\n\t\tshowStats = false;\n\t\tshowRefresh = false;\n\t\ttimer.reset($mode);\n\t}\n\n\tonMount(() => {\n\t\tif (!game.active) setTimeout(() => (showStats = true), delay);\n\t});\n\t// $: toaster.pop(word);\n</script>\n\n<svelte:body on:click={board.hideCtx} on:contextmenu={board.hideCtx} />\n\n<main class:guesses={game.guesses !== 0} style=\"--rows: {ROWS}; --cols: {COLS}\">\n\t<Header\n\t\tbind:showRefresh\n\t\ttutorial={$settings.tutorial === 2}\n\t\ton:closeTutPopUp|once={() => ($settings.tutorial = 1)}\n\t\tshowStats={stats.played > 0 || (modeData.modes[$mode].historical && !game.active)}\n\t\ton:stats={() => (showStats = true)}\n\t\ton:tutorial={() => (showTutorial = true)}\n\t\ton:settings={() => (showSettings = true)}\n\t\ton:reload={reload}\n\t/>\n\t<Board\n\t\tbind:this={board}\n\t\tbind:value={game.board.words}\n\t\ttutorial={$settings.tutorial === 1}\n\t\ton:closeTutPopUp|once={() => ($settings.tutorial = 0)}\n\t\tboard={game.board}\n\t\tguesses={game.guesses}\n\t\ticon={modeData.modes[$mode].icon}\n\t/>\n\t<Keyboard\n\t\ton:keystroke={() => {\n\t\t\tif ($settings.tutorial) $settings.tutorial = 0;\n\t\t\tboard.hideCtx();\n\t\t}}\n\t\tbind:value={game.board.words[game.guesses === ROWS ? 0 : game.guesses]}\n\t\ton:submitWord={submitWord}\n\t\ton:esc={() => {\n\t\t\tshowTutorial = false;\n\t\t\tshowStats = false;\n\t\t\tshowSettings = false;\n\t\t}}\n\t\tdisabled={!game.active || $settings.tutorial === 3}\n\t/>\n</main>\n\n<Modal\n\tbind:visible={showTutorial}\n\ton:close|once={() => $settings.tutorial === 3 && --$settings.tutorial}\n\tfullscreen={$settings.tutorial === 0}\n>\n\t<Tutorial visible={showTutorial} />\n</Modal>\n\n<Modal bind:visible={showStats}>\n\t{#if modeData.modes[$mode].historical}\n\t\t<h2 class=\"historical\">Statistics not available for historical games</h2>\n\t{:else}\n\t\t<Statistics data={stats} />\n\t\t<Distribution distribution={stats.guesses} guesses={game.guesses} active={game.active} />\n\t{/if}\n\t<Seperator visible={!game.active}>\n\t\t<Timer\n\t\t\tslot=\"1\"\n\t\t\tbind:this={timer}\n\t\t\ton:timeup={() => (showRefresh = true)}\n\t\t\ton:reload={reload}\n\t\t/>\n\t\t<Share slot=\"2\" state={game} />\n\t</Seperator>\n\t<ShareGame wordNumber={game.wordNumber} />\n\t{#if !game.active}\n\t\t<Definition {word} alternates={2} />\n\t{/if}\n</Modal>\n\n<Modal fullscreen={true} bind:visible={showSettings}>\n\t<Settings state={game} />\n\t{#if game.active}\n\t\t<div class=\"concede\" on:click={concede}>give up</div>\n\t{/if}\n\t<Tips bind:this={tips} index={tip} />\n\n\t<div slot=\"footer\">\n\t\t<a href=\"https://www.powerlanguage.co.uk/wordle/\" target=\"_blank\">Original Wordle</a>\n\t\t<div>\n\t\t\t<div>v{version}</div>\n\t\t\t<div\n\t\t\t\ttitle=\"double click to reset your stats\"\n\t\t\t\tclass=\"word\"\n\t\t\t\ton:dblclick={() => {\n\t\t\t\t\tlocalStorage.clear();\n\t\t\t\t\ttoaster.pop(\"localStorage cleared\");\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t{modeData.modes[$mode].name} word #{game.wordNumber}\n\t\t\t</div>\n\t\t</div>\n\t</div>\n</Modal>\n\n<style lang=\"scss\">\n\tmain {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: space-between;\n\t\talign-items: center;\n\t\theight: 100%;\n\t\tmax-width: var(--game-width);\n\t\tmargin: auto;\n\t\tposition: relative;\n\t}\n\t.historical {\n\t\ttext-align: center;\n\t\tmargin-top: 10px;\n\t\tpadding: 0 20px;\n\t\ttext-transform: uppercase;\n\t}\n\t.concede {\n\t\tmargin-top: 15px;\n\t\ttext-transform: uppercase;\n\t\tcolor: #fff;\n\t\tcursor: pointer;\n\t\tfont-size: var(--fs-medium);\n\t\tfont-weight: bold;\n\t\tpadding: 15px;\n\t\tborder-radius: 4px;\n\t\ttext-align: center;\n\t\tbackground-color: var(--red);\n\t\t&:hover {\n\t\t\topacity: 0.9;\n\t\t}\n\t}\n</style>\n","<script lang=\"ts\">\n\timport {\n\t\tmodeData,\n\t\tseededRandomInt,\n\t\tcreateDefaultStats,\n\t\tcreateNewGame,\n\t\tcreateDefaultSettings,\n\t\tcreateLetterStates,\n\t\tROWS,\n\t\tgetWordNumber,\n\t\twords,\n\t} from \"./utils\";\n\timport Game from \"./components/Game.svelte\";\n\timport { letterStates, settings, mode } from \"./stores\";\n\timport { GameMode } from \"./enums\";\n\timport { Toaster } from \"./components/widgets\";\n\timport { setContext } from \"svelte\";\n\n\texport let version: string;\n\tsetContext(\"version\", version);\n\tlocalStorage.setItem(\"version\", version);\n\n\tlet stats: Stats;\n\tlet word: string;\n\tlet state: GameState;\n\n\tsettings.set(\n\t\t(JSON.parse(localStorage.getItem(\"settings\")) as Settings) || createDefaultSettings()\n\t);\n\tsettings.subscribe((s) => localStorage.setItem(\"settings\", JSON.stringify(s)));\n\n\tconst hash = window.location.hash.slice(1).split(\"/\");\n\tconst modeVal: GameMode = !isNaN(GameMode[hash[0]])\n\t\t? GameMode[hash[0]]\n\t\t: parseInt(localStorage.getItem(\"mode\")) || modeData.default;\n\tmode.set(modeVal);\n\t// If this is a link to a specific word make sure that that is the word\n\tif (!isNaN(parseInt(hash[1])) && parseInt(hash[1]) < getWordNumber(modeVal)) {\n\t\tmodeData.modes[modeVal].seed =\n\t\t\t(parseInt(hash[1]) - 1) * modeData.modes[modeVal].unit + modeData.modes[modeVal].start;\n\t\tmodeData.modes[modeVal].historical = true;\n\t}\n\tmode.subscribe((m) => {\n\t\tlocalStorage.setItem(\"mode\", `${m}`);\n\t\twindow.location.hash = GameMode[m];\n\t\tstats = (JSON.parse(localStorage.getItem(`stats-${m}`)) as Stats) || createDefaultStats(m);\n\t\tword = words.words[seededRandomInt(0, words.words.length, modeData.modes[m].seed)];\n\t\tlet temp: GameState;\n\t\tif (modeData.modes[m].historical === true) {\n\t\t\ttemp = JSON.parse(localStorage.getItem(`state-${m}-h`));\n\t\t\tif (!temp || temp.wordNumber !== getWordNumber(m)) {\n\t\t\t\tstate = createNewGame(m);\n\t\t\t} else {\n\t\t\t\tstate = temp;\n\t\t\t}\n\t\t} else {\n\t\t\ttemp = JSON.parse(localStorage.getItem(`state-${m}`));\n\t\t\tif (!temp || modeData.modes[m].seed - temp.time >= modeData.modes[m].unit) {\n\t\t\t\tstate = createNewGame(m);\n\t\t\t} else {\n\t\t\t\t// This is for backwards compatibility, can be removed in a day\n\t\t\t\tif (!temp.wordNumber) {\n\t\t\t\t\ttemp.wordNumber = getWordNumber(m);\n\t\t\t\t}\n\t\t\t\tstate = temp;\n\t\t\t}\n\t\t}\n\t\t// Set the letter states when data for a new game mode is loaded so the keyboard is correct\n\t\tconst letters = createLetterStates();\n\t\tfor (let row = 0; row < ROWS; ++row) {\n\t\t\tfor (let col = 0; col < state.board.words[row].length; ++col) {\n\t\t\t\tif (\n\t\t\t\t\tletters[state.board.words[row][col]] === \"🔳\" ||\n\t\t\t\t\tstate.board.state[row][col] === \"🟩\"\n\t\t\t\t) {\n\t\t\t\t\tletters[state.board.words[row][col]] = state.board.state[row][col];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\tletterStates.set(letters);\n\t});\n\n\t$: saveState(state);\n\tfunction saveState(state: GameState) {\n\t\tif (modeData.modes[$mode].historical) {\n\t\t\tlocalStorage.setItem(`state-${$mode}-h`, JSON.stringify(state));\n\t\t} else {\n\t\t\tlocalStorage.setItem(`state-${$mode}`, JSON.stringify(state));\n\t\t}\n\t}\n\tlet toaster: Toaster;\n</script>\n\n<Toaster bind:this={toaster} />\n{#if toaster}\n\t<Game {stats} {word} {toaster} bind:game={state} />\n{/if}\n","//! IF ANYTHING IN THIS FILE IS CHANGED MAKE SURE setVersion.js HAS ALSO BEEN UPDATED\nimport App from \"./App.svelte\";\nexport default new App({\n    target: document.body,\n    props: {\n        version: \"1.2.5\",\n    }\n});\n"],"names":["noop","identity","x","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","component_subscribe","component","store","callback","$$","on_destroy","push","callbacks","unsub","subscribe","unsubscribe","create_slot","definition","ctx","$$scope","slot_ctx","get_slot_context","tar","src","k","assign","slice","get_slot_changes","dirty","lets","undefined","merged","len","Math","max","length","i","update_slot_base","slot","slot_definition","slot_changes","get_slot_context_fn","slot_context","p","get_all_dirty_from_scope","once","ran","args","call","this","null_to_empty","value","set_store_value","ret","set","is_client","window","now","performance","Date","raf","cb","requestAnimationFrame","tasks","Set","run_tasks","task","c","delete","f","size","loop","promise","Promise","fulfill","add","abort","append","target","node","appendChild","get_root_for_style","document","root","getRootNode","ownerDocument","host","append_empty_stylesheet","style_element","element","style","head","append_stylesheet","sheet","insert","anchor","insertBefore","detach","parentNode","removeChild","destroy_each","iterations","detaching","d","name","createElement","svg_element","createElementNS","text","data","createTextNode","space","empty","listen","event","handler","options","addEventListener","removeEventListener","prevent_default","preventDefault","self","attr","attribute","removeAttribute","getAttribute","setAttribute","set_data","wholeText","set_style","key","important","removeProperty","setProperty","select_option","select","option","__value","selected","selectedIndex","toggle_class","toggle","classList","custom_event","type","detail","bubbles","e","createEvent","initCustomEvent","managed_styles","Map","current_component","active","create_rule","duration","delay","ease","uid","step","keyframes","t","rule","str","hash","charCodeAt","doc","stylesheet","rules","get","info","create_style_information","insertRule","cssRules","animation","delete_rule","previous","split","next","filter","anim","indexOf","deleted","join","deleteRule","clear","set_current_component","get_current_component","Error","onMount","on_mount","onDestroy","createEventDispatcher","setContext","context","getContext","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","resolve","update_scheduled","add_render_callback","add_flush_callback","seen_callbacks","flushidx","flush","saved_component","update","pop","has","fragment","before_update","after_update","wait","then","dispatch","direction","kind","dispatchEvent","outroing","outros","group_outros","r","check_outros","transition_in","block","local","transition_out","o","null_transition","create_bidirectional_transition","params","intro","config","running_program","pending_program","animation_name","clear_animation","init","program","abs","start","end","group","go","easing","tick","css","handle_promise","token","index","resolved","child_ctx","current","needs_flush","blocks","m","mount","error","catch","hasCatch","pending","destroy_block","lookup","bind","props","bound","create_component","mount_component","customElement","new_on_destroy","map","destroy_component","make_dirty","fill","instance","create_fragment","not_equal","append_styles","parent_component","on_disconnect","skip_bound","ready","rest","hydrate","nodes","Array","from","childNodes","children","l","SvelteComponent","$destroy","$on","splice","$set","$$props","obj","$$set","keys","global","module","define","Alea","seed","n","me","mash","String","h","s0","s1","s2","copy","impl","opts","xg","state","prng","int32","double","quick","exports","amd","alea","XorGen","strseed","y","z","w","result","xor128","v","xorwow","X","j","xorshift7","limit","xor4096","floor","tychei","pool","math","nodecrypto","width","startdenom","pow","significance","overflow","mask","seedrandom","shortseed","mixkey","flatten","entropy","tostring","out","randomBytes","Uint8Array","crypto","msCrypto","getRandomValues","browser","navigator","plugins","screen","autoseed","arc4","ARC4","g","S","pass","is_math_call","keylen","s","count","depth","prop","typ","smear","stringseed","fromCharCode","apply","random","require","ex","require$$0","require$$1","require$$2","require$$3","require$$4","require$$5","sr","require$$6","GameMode","words","valid","wordList","contains","word","includes","Tile","constructor","notSet","not","char","WordData","letterCounts","col","confirmCount","countConfirmed","val","setCount","incrementCount","inGlobalNotList","lettersNotAt","pos","countOccurences","arr","reduce","newSeed","mode","advisorya","advisoryb","advisoryc","advisoryd","advisorye","advisoryf","modeData","default","modes","unit","historical","icon","getWordNumber","seededRandomInt","min","DELAY_INCREMENT","PRAISE","createNewGame","guesses","time","wordNumber","validHard","board","createDefaultSettings","hard","dark","colorblind","tutorial","definitions","cubicOut","fade","linear","getComputedStyle","opacity","scale","target_opacity","transform","sd","od","_t","u","subscriber_queue","writable","stop","subscribers","new_value","run_queue","subscriber","invalidate","letterStates","q","settings","svg","arguments","onClick","path","path_transition","div","create_if_block_2","create_if_block_1","create_if_block","header","div0","h1","div1","showStats","showRefresh","toaster","valueOf","$$invalidate","$mode","div2","div2_class_value","position","setTimeout","charAt","tile_changes","each_value","each_blocks","num","tiles","bounce","$$value","clientX","clientY","strong","t2_value","meanings","partOfSpeech","h2","em","ol","t2","t1_value","li","t1","t_value","h4","alternates","async","cache","fetch","ok","json","br0","br1","br2","pAns","pSols","parseInt","body","getPropertyValue","innerWidth","row_props","row_changes","rows","showCtx","cx","cy","match","wd","row","occured","exp","RegExp","test","chars","occurences","getRowData","shake","defaultPrevented","$$self","value$1","letter","key_changes","each_value_2","each_value_1","div3","each_blocks_2","each_blocks_1","disabled","preventChange","appendValue","backspaceValue","ctrlKey","altKey","toLowerCase","visible","fullscreen","dispach","selected_option","querySelector","switch_value","types","switch","Switch","dropdown","DropDown","span","setting1_props","setting2_props","func","h3","setting0_changes","setting1_changes","setting2_changes","documentElement","$settings","remove","localStorage","setItem","JSON","stringify","stats","repeat","clipboard","writeText","strong0","div10","div4","div5","div6","div7","div8","div9","div11","HOUR","padStart","MINUTE","t4_value","SECOND","t0","t0_value","t4","countDown","ms","reset","clearInterval","getTimezoneOffset","setInterval","div_outro","running","start_time","end_time","create_out_transition","toast","t3_value","t5_value","svg0","path0","svg1","path1","t5","tips","location","href","section","stat","stat_changes","played","round","fail","entries","isNaN","toFixed","streak","maxStreak","show_if","get_key","old_blocks","dynamic","list","destroy","create_each_block","get_context","old_indexes","new_blocks","new_lookup","deltas","will_move","did_move","first","new_block","old_block","new_key","old_key","distribution","values","distribution_changes","if_block1","seperator_changes","sharegame_changes","if_block","t7_value","t7","main","hideCtx","header_changes","board_1_changes","keyboard_changes","game","version","timer","showTutorial","showSettings","tip","lose","lastGame","hm","checkHardMode","contractNum","toUpperCase","guess","charArr","getState","$letterStates","parse","getItem","modeVal","temp","createDefaultStats","letters","saveState"],"mappings":"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"}